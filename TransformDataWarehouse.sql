/* Check encoding : ANSI */

/* 
BAU FILE ACCESS A AJOUTER/MODIFIER :

>>> Les champs nÈcessaires ‡ un nouvel Email Group :
MarketingOptIn
MarketingOptInPrefType
ThirdpartyOptIn
ThirdPartyOptInPrefType
EmailPreference
PhonePreference
DirectPostPreference
SmsPreference 
>>> Les champs nÈcessaires ‡ un nouvel Email Group.
*/

/* Encoding witness :  "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê" */
/* Encoding witness :  "AA AA AA KBAA" */

/* Union_EMC_v2 */
/* Extraction des emails et adresses postales du Soft V2 et des bases Prospects et Extern-DB */
/* AA, DENT, GYN et CWS */

/*-------------------------- SUPPRESSION TABLES ENCORE EXISTANTES EVENTUELLES --------------------------------*/
DROP TABLE if exists geo_temp_union_old ; DROP TABLE if exists geo_temp_rtg_old ; DROP TABLE if exists geo_temp_email_old ;

DROP TABLE if exists geo_temp_union ; DROP TABLE if exists geo_temp_union_email ;
DROP TABLE if exists geo_temp_email ; DROP TABLE if exists geo_temp_routage ; DROP TABLE if exists geo_temp_rtg ;

DROP TABLE if exists geo_temp_customer; DROP TABLE if exists geo_temp_labo ;
DROP TABLE if exists geo_temp_company; DROP TABLE if exists geo_temp_routage ;

/*-------------------- CORRECTION CHAMPS THEMATIQUES VIDES ---------------------*/
/* CUSTOMERS */
/* FIX antiaging customers */
UPDATE customer
INNER JOIN commande ON customer.id_customer = commande.id_customer
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation
SET customer.antiaging = 1 WHERE manifestation.id_event_division = 1 ;

/* FIX gastronomy customers */
UPDATE customer
INNER JOIN commande ON customer.id_customer = commande.id_customer
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation
SET customer.gastronomy = 1 WHERE manifestation.id_event_division = 2 ;

/* FIX gynecology customers */
UPDATE customer
INNER JOIN commande ON customer.id_customer = commande.id_customer
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation
SET customer.gynecology = 1 WHERE manifestation.id_event_division = 18 ;

/* FIX gynecology customers ACCORDING THE EUROVIRS ORGANISME */
UPDATE customer INNER JOIN customer_organisme ON customer.id_customer = customer_organisme.id_customer
SET customer.gynecology = 1 WHERE customer_organisme.id_organisme IN (9, 10, 11, 13) AND gynecology = 0 ;

/* FIX cosmetic customers */
UPDATE customer
INNER JOIN commande ON customer.id_customer = commande.id_customer
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation
SET customer.cosmetic = 1 WHERE manifestation.id_event_division = 19 ;


/* EXHIBITOR GUEST */
/* FIX antiaging exhibitor guest */
UPDATE customer
INNER JOIN customer_guest_labo ON customer.id_customer = customer_guest_labo.id_customer
INNER JOIN manifestation ON customer_guest_labo.id_manifestation = manifestation.id_manifestation
SET customer.antiaging = 1 WHERE manifestation.id_event_division = 1 ;

/* FIX gastronomy exhibitor guest */
UPDATE customer
INNER JOIN customer_guest_labo ON customer.id_customer = customer_guest_labo.id_customer
INNER JOIN manifestation ON customer_guest_labo.id_manifestation = manifestation.id_manifestation
SET customer.gastronomy = 1 WHERE manifestation.id_event_division = 2 ;

/* FIX gynecology exhibitor guest */
UPDATE customer
INNER JOIN customer_guest_labo ON customer.id_customer = customer_guest_labo.id_customer
INNER JOIN manifestation ON customer_guest_labo.id_manifestation = manifestation.id_manifestation
SET customer.gynecology = 1 WHERE manifestation.id_event_division = 18 ;

/* FIX cosmetic exhibitor guest */
UPDATE customer
INNER JOIN customer_guest_labo ON customer.id_customer = customer_guest_labo.id_customer
INNER JOIN manifestation ON customer_guest_labo.id_manifestation = manifestation.id_manifestation
SET customer.cosmetic = 1 WHERE manifestation.id_event_division = 19 ;


/*-------------------------- CREATION DE LA TABLE geo_temp_customer 0 --------------------------------*/
CREATE TABLE geo_temp_customer AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND address.id_customer <= 5000
LEFT JOIN telephone ON address.id_address = telephone.id_address AND telephone.id_customer <= 5000
WHERE  customer.id_customer <= 5000 ;

ALTER TABLE geo_temp_customer MODIFY src_detail CHAR(50) CHARACTER SET utf8 NOT NULL ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer2 --------------------------------*/
CREATE TABLE geo_temp_customer2 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 5000 AND address.id_customer <= 10000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 5000 AND telephone.id_customer <= 10000 )
WHERE ( customer.id_customer > 5000 AND customer.id_customer <= 10000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer3 --------------------------------*/
CREATE TABLE geo_temp_customer3 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 10000 AND address.id_customer <= 15000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 10000 AND telephone.id_customer <= 15000 )
WHERE ( customer.id_customer > 10000 AND customer.id_customer <= 15000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer4 --------------------------------*/
CREATE TABLE geo_temp_customer4 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 15000 AND address.id_customer <= 20000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 15000 AND telephone.id_customer <= 20000 )
WHERE ( customer.id_customer > 15000 AND customer.id_customer <= 20000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer5 --------------------------------*/
CREATE TABLE geo_temp_customer5 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 20000 AND address.id_customer <= 25000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 20000 AND telephone.id_customer <= 25000 )
WHERE ( customer.id_customer > 20000 AND customer.id_customer <= 25000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer6 --------------------------------*/
CREATE TABLE geo_temp_customer6 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 25000 AND address.id_customer <= 30000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 25000 AND telephone.id_customer <= 30000 )
WHERE ( customer.id_customer > 25000 AND customer.id_customer <= 30000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer7 --------------------------------*/
CREATE TABLE geo_temp_customer7 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 30000 AND address.id_customer <= 35000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 30000 AND telephone.id_customer <= 35000 )
WHERE ( customer.id_customer > 30000 AND customer.id_customer <= 35000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer8 --------------------------------*/
CREATE TABLE geo_temp_customer8 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 35000 AND address.id_customer <= 40000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 35000 AND telephone.id_customer <= 40000 )
WHERE ( customer.id_customer > 35000 AND customer.id_customer <= 40000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer9 --------------------------------*/
CREATE TABLE geo_temp_customer9 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 40000 AND address.id_customer <= 45000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 40000 AND telephone.id_customer <= 45000 )
WHERE ( customer.id_customer > 40000 AND customer.id_customer <= 45000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer10 --------------------------------*/
CREATE TABLE geo_temp_customer10 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 45000 AND address.id_customer <= 50000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 45000 AND telephone.id_customer <= 50000 )
WHERE ( customer.id_customer > 45000 AND customer.id_customer <= 50000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer11 --------------------------------*/
CREATE TABLE geo_temp_customer11 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 50000 AND address.id_customer <= 55000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 50000 AND telephone.id_customer <= 55000 )
WHERE ( customer.id_customer > 50000 AND customer.id_customer <= 55000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer12 --------------------------------*/
CREATE TABLE geo_temp_customer12 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 55000 AND address.id_customer <= 60000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 55000 AND telephone.id_customer <= 60000 )
WHERE ( customer.id_customer > 55000 AND customer.id_customer <= 60000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer13 --------------------------------*/
CREATE TABLE geo_temp_customer13 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 60000 AND address.id_customer <= 65000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 60000 AND telephone.id_customer <= 65000 )
WHERE ( customer.id_customer > 60000 AND customer.id_customer <= 65000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer14 --------------------------------*/
CREATE TABLE geo_temp_customer14 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 65000 AND address.id_customer <= 70000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 65000 AND telephone.id_customer <= 70000 )
WHERE ( customer.id_customer > 65000 AND customer.id_customer <= 70000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer15 --------------------------------*/
CREATE TABLE geo_temp_customer15 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 70000 AND address.id_customer <= 75000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 70000 AND telephone.id_customer <= 75000 )
WHERE ( customer.id_customer > 70000 AND customer.id_customer <= 75000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer16 --------------------------------*/
CREATE TABLE geo_temp_customer16 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 75000 AND address.id_customer <= 80000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 75000 AND telephone.id_customer <= 80000 )
WHERE ( customer.id_customer > 75000 AND customer.id_customer <= 80000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer17 --------------------------------*/
CREATE TABLE geo_temp_customer17 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 80000 AND address.id_customer <= 85000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 80000 AND telephone.id_customer <= 85000 )
WHERE ( customer.id_customer > 80000 AND customer.id_customer <= 85000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer18 --------------------------------*/
CREATE TABLE geo_temp_customer18 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 85000 AND address.id_customer <= 90000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 85000 AND telephone.id_customer <= 90000 )
WHERE ( customer.id_customer > 85000 AND customer.id_customer <= 90000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer19 --------------------------------*/
CREATE TABLE geo_temp_customer19 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 90000 AND address.id_customer <= 95000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 90000 AND telephone.id_customer <= 95000 )
WHERE ( customer.id_customer > 90000 AND customer.id_customer <= 95000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer20 --------------------------------*/
CREATE TABLE geo_temp_customer20 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 95000 AND address.id_customer <= 100000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 95000 AND telephone.id_customer <= 100000 )
WHERE ( customer.id_customer > 95000 AND customer.id_customer <= 100000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer21 --------------------------------*/
CREATE TABLE geo_temp_customer21 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 100000 AND address.id_customer <= 105000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 100000 AND telephone.id_customer <= 105000 )
WHERE ( customer.id_customer > 100000 AND customer.id_customer <= 105000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer22 --------------------------------*/
CREATE TABLE geo_temp_customer22 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 105000 AND address.id_customer <= 110000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 105000 AND telephone.id_customer <= 110000 )
WHERE ( customer.id_customer > 105000 AND customer.id_customer <= 110000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer23 --------------------------------*/
CREATE TABLE geo_temp_customer23 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 110000 AND address.id_customer <= 115000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 110000 AND telephone.id_customer <= 115000 )
WHERE ( customer.id_customer > 110000 AND customer.id_customer <= 115000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer24a --------------------------------*/
CREATE TABLE geo_temp_customer24a AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 115000 AND address.id_customer <= 116330 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 115000 AND telephone.id_customer <= 116330 )
WHERE ( customer.id_customer > 115000 AND customer.id_customer <= 116330 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer24b --------------------------------*/
CREATE TABLE geo_temp_customer24b AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 116330 AND address.id_customer <= 117660 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 116330 AND telephone.id_customer <= 117660 )
WHERE ( customer.id_customer > 116330 AND customer.id_customer <= 117660 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer24c --------------------------------*/
CREATE TABLE geo_temp_customer24c AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 117660 AND address.id_customer <= 118990 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 117660 AND telephone.id_customer <= 118990 )
WHERE ( customer.id_customer > 117660 AND customer.id_customer <= 118990 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer24d --------------------------------*/
CREATE TABLE geo_temp_customer24d AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 118990 AND address.id_customer <= 120000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 118990 AND telephone.id_customer <= 120000 )
WHERE ( customer.id_customer > 118990 AND customer.id_customer <= 120000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer25 --------------------------------*/
CREATE TABLE geo_temp_customer25 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 120000 AND address.id_customer <= 125000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 120000 AND telephone.id_customer <= 125000 )
WHERE ( customer.id_customer > 120000 AND customer.id_customer <= 125000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer26 --------------------------------*/
CREATE TABLE geo_temp_customer26 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 125000 AND address.id_customer <= 130000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 125000 AND telephone.id_customer <= 130000 )
WHERE ( customer.id_customer > 125000 AND customer.id_customer <= 130000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer27a --------------------------------*/
CREATE TABLE geo_temp_customer27a AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 130000 AND address.id_customer <= 131000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 130000 AND telephone.id_customer <= 131000 )
WHERE ( customer.id_customer > 130000 AND customer.id_customer <= 131000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer27b --------------------------------*/
CREATE TABLE geo_temp_customer27b AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 131000 AND address.id_customer <= 132000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 131000 AND telephone.id_customer <= 132000 )
WHERE ( customer.id_customer > 131000 AND customer.id_customer <= 132000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer27c --------------------------------*/
CREATE TABLE geo_temp_customer27c AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 132000 AND address.id_customer <= 133000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 132000 AND telephone.id_customer <= 133000 )
WHERE ( customer.id_customer > 132000 AND customer.id_customer <= 133000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer27d --------------------------------*/
CREATE TABLE geo_temp_customer27d AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 133000 AND address.id_customer <= 134000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 133000 AND telephone.id_customer <= 134000 )
WHERE ( customer.id_customer > 133000 AND customer.id_customer <= 134000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer27e --------------------------------*/
CREATE TABLE geo_temp_customer27e AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 134000 AND address.id_customer <= 135000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 134000 AND telephone.id_customer <= 135000 )
WHERE ( customer.id_customer > 134000 AND customer.id_customer <= 135000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer28 --------------------------------*/
CREATE TABLE geo_temp_customer28 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 135000 AND address.id_customer <= 140000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 135000 AND telephone.id_customer <= 140000 )
WHERE ( customer.id_customer > 135000 AND customer.id_customer <= 140000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer29 --------------------------------*/
CREATE TABLE geo_temp_customer29 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 140000 AND address.id_customer <= 145000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 140000 AND telephone.id_customer <= 145000 )
WHERE ( customer.id_customer > 140000 AND customer.id_customer <= 145000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer30 --------------------------------*/
CREATE TABLE geo_temp_customer30 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 145000 AND address.id_customer <= 150000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 145000 AND telephone.id_customer <= 150000 )
WHERE ( customer.id_customer > 145000 AND customer.id_customer <= 150000 ) ;

/*-------------------------- CREATION DE LA TABLE geo_temp_customer31 --------------------------------*/
CREATE TABLE geo_temp_customer31 AS
SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table customer' as src_detail, id_group , speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(customer.email) AS email, LOWER(customer.email1) AS email1, LOWER(customer.email2) AS email2, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 150000 AND address.id_customer <= 155000 )
LEFT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 150000 AND telephone.id_customer <= 155000 )
WHERE ( customer.id_customer > 150000 AND customer.id_customer <= 155000 ) ;


/*---------------------------------- INSERTION DES TABLES geo_temp_customerX DANS LA TABLE geo_temp_customer 0 ---------------------------------------*/

INSERT INTO geo_temp_customer select * from geo_temp_customer2 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer3 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer4 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer5 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer6 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer7 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer8 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer9 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer10 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer11 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer12 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer13 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer14 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer15 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer16 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer17 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer18 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer19 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer20 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer21 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer22 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer23 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer24a ;
INSERT INTO geo_temp_customer select * from geo_temp_customer24b ;
INSERT INTO geo_temp_customer select * from geo_temp_customer24c ;
INSERT INTO geo_temp_customer select * from geo_temp_customer24d ;
INSERT INTO geo_temp_customer select * from geo_temp_customer25 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer26 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer27a ;
INSERT INTO geo_temp_customer select * from geo_temp_customer27b ;
INSERT INTO geo_temp_customer select * from geo_temp_customer27c ;
INSERT INTO geo_temp_customer select * from geo_temp_customer27d ;
INSERT INTO geo_temp_customer select * from geo_temp_customer27e ;
INSERT INTO geo_temp_customer select * from geo_temp_customer28 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer29 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer30 ;
INSERT INTO geo_temp_customer select * from geo_temp_customer31 ;

/*---------------------------------- SUPPRESSION DES TABLES geo_temp_customerX ---------------------------------------*/
DROP TABLE geo_temp_customer2, geo_temp_customer3, geo_temp_customer4, geo_temp_customer5, geo_temp_customer6, 
geo_temp_customer7, geo_temp_customer8, geo_temp_customer9, geo_temp_customer10, geo_temp_customer11, 
geo_temp_customer12, geo_temp_customer13, geo_temp_customer14, geo_temp_customer15, geo_temp_customer16, 
geo_temp_customer17, geo_temp_customer18, geo_temp_customer19, geo_temp_customer20, geo_temp_customer21, 
geo_temp_customer22, geo_temp_customer23,
geo_temp_customer24a,geo_temp_customer24b,geo_temp_customer24c,geo_temp_customer24d,
geo_temp_customer25, geo_temp_customer26, 
geo_temp_customer27a, geo_temp_customer27b, geo_temp_customer27c, geo_temp_customer27d, geo_temp_customer27e, 
geo_temp_customer28, geo_temp_customer29, geo_temp_customer30, geo_temp_customer31 ;


/*---------------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE ---------------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND address.id_customer <= 5000
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND telephone.id_customer <= 5000 AND telephone.email LIKE '%@%'
WHERE customer.id_customer <= 5000 
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 5000 AND address.id_customer <= 10000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 5000 AND telephone.id_customer <= 10000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 5000 AND customer.id_customer <= 10000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 10000 AND address.id_customer <= 15000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 10000 AND telephone.id_customer <= 15000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 10000 AND customer.id_customer <= 15000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 15000 AND address.id_customer <= 20000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 15000 AND telephone.id_customer <= 20000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 15000 AND customer.id_customer <= 20000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 20000 AND address.id_customer <= 25000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 20000 AND telephone.id_customer <= 25000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 20000 AND customer.id_customer <= 25000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 25000 AND address.id_customer <= 30000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 25000 AND telephone.id_customer <= 30000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 25000 AND customer.id_customer <= 30000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 30000 AND address.id_customer <= 35000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 30000 AND telephone.id_customer <= 35000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 30000 AND customer.id_customer <= 35000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 35000 AND address.id_customer <= 40000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 35000 AND telephone.id_customer <= 40000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 35000 AND customer.id_customer <= 40000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 40000 AND address.id_customer <= 45000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 40000 AND telephone.id_customer <= 45000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 40000 AND customer.id_customer <= 45000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 45000 AND address.id_customer <= 50000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 45000 AND telephone.id_customer <= 50000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 45000 AND customer.id_customer <= 50000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 50000 AND address.id_customer <= 55000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 50000 AND telephone.id_customer <= 55000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 50000 AND customer.id_customer <= 55000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 55000 AND address.id_customer <= 60000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 55000 AND telephone.id_customer <= 60000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 55000 AND customer.id_customer <= 60000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 60000 AND address.id_customer <= 65000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 60000 AND telephone.id_customer <= 65000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 60000 AND customer.id_customer <= 65000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 65000 AND address.id_customer <= 70000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 65000 AND telephone.id_customer <= 70000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 65000 AND customer.id_customer <= 70000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 70000 AND address.id_customer <= 75000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 70000 AND telephone.id_customer <= 75000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 70000 AND customer.id_customer <= 75000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 75000 AND address.id_customer <= 80000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 75000 AND telephone.id_customer <= 80000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 75000 AND customer.id_customer <= 80000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 80000 AND address.id_customer <= 85000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 80000 AND telephone.id_customer <= 85000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 80000 AND customer.id_customer <= 85000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 85000 AND address.id_customer <= 90000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 85000 AND telephone.id_customer <= 90000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 85000 AND customer.id_customer <= 90000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 90000 AND address.id_customer <= 95000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 90000 AND telephone.id_customer <= 95000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 90000 AND customer.id_customer <= 95000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 95000 AND address.id_customer <= 100000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 95000 AND telephone.id_customer <= 100000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 95000 AND customer.id_customer <= 100000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 100000 AND address.id_customer <= 105000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 100000 AND telephone.id_customer <= 105000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 100000 AND customer.id_customer <= 105000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 105000 AND address.id_customer <= 110000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 105000 AND telephone.id_customer <= 110000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 105000 AND customer.id_customer <= 110000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 110000 AND address.id_customer <= 115000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 110000 AND telephone.id_customer <= 115000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 110000 AND customer.id_customer <= 115000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 115000 AND address.id_customer <= 115665 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 115000 AND telephone.id_customer <= 115665 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 115000 AND customer.id_customer <= 115665 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 115665 AND address.id_customer <= 116330 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 115665 AND telephone.id_customer <= 116330 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 115665 AND customer.id_customer <= 116330 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 116330 AND address.id_customer <= 116995 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 116330 AND telephone.id_customer <= 116995 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 116330 AND customer.id_customer <= 116995 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 116995 AND address.id_customer <= 117660 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 116995 AND telephone.id_customer <= 117660 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 116995 AND customer.id_customer <= 117660 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 117660 AND address.id_customer <= 118330 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 117660 AND telephone.id_customer <= 118330 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 117660 AND customer.id_customer <= 118330 )
group by telephone.email ;


/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 118330 AND address.id_customer <= 118995 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 118330 AND telephone.id_customer <= 118995 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 118330 AND customer.id_customer <= 118995 )
group by telephone.email ;


/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 118995 AND address.id_customer <= 119500 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 118995 AND telephone.id_customer <= 119500 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 118995 AND customer.id_customer <= 119500 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 119500 AND address.id_customer <= 120000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 119500 AND telephone.id_customer <= 120000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 119500 AND customer.id_customer <= 120000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 120000 AND address.id_customer <= 121000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 120000 AND telephone.id_customer <= 121000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 120000 AND customer.id_customer <= 121000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 121000 AND address.id_customer <= 122000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 121000 AND telephone.id_customer <= 122000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 121000 AND customer.id_customer <= 122000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 122000 AND address.id_customer <= 123000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 122000 AND telephone.id_customer <= 123000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 122000 AND customer.id_customer <= 123000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 123000 AND address.id_customer <= 124000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 123000 AND telephone.id_customer <= 124000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 123000 AND customer.id_customer <= 124000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 124000 AND address.id_customer <= 125000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 124000 AND telephone.id_customer <= 125000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 124000 AND customer.id_customer <= 125000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 125000 AND address.id_customer <= 126000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 125000 AND telephone.id_customer <= 126000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 125000 AND customer.id_customer <= 126000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 126000 AND address.id_customer <= 127000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 126000 AND telephone.id_customer <= 127000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 126000 AND customer.id_customer <= 127000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 127000 AND address.id_customer <= 128000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 127000 AND telephone.id_customer <= 128000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 127000 AND customer.id_customer <= 128000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 128000 AND address.id_customer <= 129000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 128000 AND telephone.id_customer <= 129000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 128000 AND customer.id_customer <= 129000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 129000 AND address.id_customer <= 129250 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 129000 AND telephone.id_customer <= 129250 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 129000 AND customer.id_customer <= 129250 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 129250 AND address.id_customer <= 129500 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 129250 AND telephone.id_customer <= 129500 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 129250 AND customer.id_customer <= 129500 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 129500 AND address.id_customer <= 129750 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 129500 AND telephone.id_customer <= 129750 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 129500 AND customer.id_customer <= 129750 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 129750 AND address.id_customer <= 130000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 129750 AND telephone.id_customer <= 130000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 129750 AND customer.id_customer <= 130000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 130000 AND address.id_customer <= 130250 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 130000 AND telephone.id_customer <= 130250 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 130000 AND customer.id_customer <= 130250 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 130250 AND address.id_customer <= 130500 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 130250 AND telephone.id_customer <= 130500 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 130250 AND customer.id_customer <= 130500 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 130500 AND address.id_customer <= 130750 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 130500 AND telephone.id_customer <= 130750 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 130500 AND customer.id_customer <= 130750 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 130750 AND address.id_customer <= 131000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 130750 AND telephone.id_customer <= 131000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 130750 AND customer.id_customer <= 131000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 131000 AND address.id_customer <= 131250 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 131000 AND telephone.id_customer <= 131250 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 131000 AND customer.id_customer <= 131250 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 131250 AND address.id_customer <= 131500 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 131250 AND telephone.id_customer <= 131500 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 131250 AND customer.id_customer <= 131500 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 131500 AND address.id_customer <= 131750 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 131500 AND telephone.id_customer <= 131750 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 131500 AND customer.id_customer <= 131750 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 131750 AND address.id_customer <= 132000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 131750 AND telephone.id_customer <= 132000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 131750 AND customer.id_customer <= 132000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 132000 AND address.id_customer <= 133000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 132000 AND telephone.id_customer <= 133000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 132000 AND customer.id_customer <= 133000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 133000 AND address.id_customer <= 134000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 133000 AND telephone.id_customer <= 134000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 133000 AND customer.id_customer <= 134000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 134000 AND address.id_customer <= 135000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 134000 AND telephone.id_customer <= 135000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 134000 AND customer.id_customer <= 135000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 135000 AND address.id_customer <= 140000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 135000 AND telephone.id_customer <= 140000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 135000 AND customer.id_customer <= 140000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 140000 AND address.id_customer <= 141000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 140000 AND telephone.id_customer <= 141000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 140000 AND customer.id_customer <= 141000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 141000 AND address.id_customer <= 142000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 141000 AND telephone.id_customer <= 142000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 141000 AND customer.id_customer <= 142000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 142000 AND address.id_customer <= 143000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 142000 AND telephone.id_customer <= 143000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 142000 AND customer.id_customer <= 143000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 143000 AND address.id_customer <= 144000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 143000 AND telephone.id_customer <= 144000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 143000 AND customer.id_customer <= 144000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 144000 AND address.id_customer <= 145000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 144000 AND telephone.id_customer <= 145000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 144000 AND customer.id_customer <= 145000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 145000 AND address.id_customer <= 150000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 145000 AND telephone.id_customer <= 150000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 145000 AND customer.id_customer <= 150000 )
group by telephone.email ;

/*-------------------------- INSERTION DES EMAILS DE LA TABLE TELEPHONE --------------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, date_maj, edit_telesale, 
id_address, id_telephone, num_customer, src_detail, id_group, speciality, other_speciality,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, site_web,
area_code_tel,tel,area_code_tel2,tel2,area_code_gsm,gsm,area_code_fax,fax,
destination, notes_telesales, fichier, invoice)

SELECT customer.id_customer, customer.date_submit, customer.date_maj, customer.edit_telesale, 
address.id_address, telephone.id_telephone, num_customer, 'Table telephone' , id_group, speciality, other_speciality, 
dentaire, antiaging, gynecology, gastronomy, cosmetic,
UPPER(raison_sociale) AS raison_sociale,
UPPER(civility) AS civility, UPPER(customer.lastname) AS lastname, UPPER(customer.firstname) AS firstname,
UPPER(address1) AS address1, UPPER(address2) AS address2, UPPER(address3) AS address3,
UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city, UPPER(state) AS state, UPPER(address.country) AS country, type_ad,
LOWER(telephone.email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax,
destination, notes_telesales, fichier, invoice

FROM customer
LEFT JOIN address ON customer.id_customer = address.id_customer AND ( address.id_customer > 150000 AND address.id_customer <= 155000 )
RIGHT JOIN telephone ON address.id_address = telephone.id_address AND ( telephone.id_customer > 150000 AND telephone.id_customer <= 155000 ) AND telephone.email LIKE '%@%'
WHERE ( customer.id_customer > 150000 AND customer.id_customer <= 155000 )
group by telephone.email ;

/* ***************************************************************************************************** */

/* -------------------------- INSERTION DES STAFFS (customer_labo) ---------------------------- */

ALTER TABLE geo_temp_customer ADD id_customer_labo INT(11) ;
ALTER TABLE geo_temp_customer MODIFY COLUMN id_customer_labo INT(11) AFTER id_customer ;

INSERT INTO geo_temp_customer
(id_customer, id_customer_labo, id_address, date_submit, date_maj, 
src_detail, id_group, speciality,
raison_sociale, civility, lastname, firstname,
state, country, type_ad,
email,
area_code_tel,tel,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
destination, invoice)

SELECT 0, id_customer_labo, 0, customer_labo.date_submit, customer_labo.date_maj,
'Table customer_labo' , 2, 'Other',
UPPER(customer.raison_sociale) AS raison_sociale,
UPPER(customer_labo.civility) AS civility, UPPER(customer_labo.lastname) AS lastname, UPPER(customer_labo.firstname) AS firstname,
UPPER(customer_labo.state) AS state, UPPER(customer_labo.country) AS country, 1,
LOWER(customer_labo.email) AS email,
UPPER(customer_labo.code_phone) AS area_code_tel, UPPER(customer_labo.phone) AS tel,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
customer.destination, 0

FROM customer_labo
LEFT JOIN customer ON customer_labo.id_customer = customer.id_customer ;


/*---------------------- INSERTION DES EMAILS COMMANDES (commande, certains emails ne se trouvent que l‡) ---------------------------*/
INSERT INTO geo_temp_customer
(id_customer, date_submit, src_detail, id_group, speciality, other_speciality,
raison_sociale,
civility, lastname, firstname,
state, country, type_ad,
email, email1, email2,
area_code_tel,tel,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
destination, invoice)

SELECT commande.id_customer, commande.date_submit, 'Table commande', commande.id_group,
commande.specialty_badge, commande.job_badge, UPPER(commande.society_badge) as society,
UPPER(commande.civility_badge) as civility, UPPER(commande.name_badge) as lastname, UPPER(commande.firstname_badge) as firstname,
UPPER(commande.state_badge) as state, UPPER(commande.country_badge) as country, 1, 
LOWER(commande.email_badge) as email, LOWER(commande.email1_badge) as email1, LOWER(commande.email2_badge) as email2,
commande.codetel_badge, commande.tel_badge,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
customer.destination, 0
FROM commande
LEFT JOIN customer ON commande.id_customer = customer.id_customer
WHERE commande.email_badge not like '' OR  commande.email1_badge not like '' OR commande.email2_badge not like '' ;

/*---------------------- FIN INSERTION DES EMAILS COMMANDES ---------------------------*/




/* ***************************************************************************************************** */

/*---------- DERNIERE PARTICIPATION PAR CONGRES ET TYPOLOGIE ---------*/

/*---- CREATION TABLE TEMPORAIRE temp_last_commande_manifestation ----*/
CREATE TABLE temp_last_commande_manifestation AS
SELECT DISTINCT commande.id_customer, commande.id_commande, commande.type_profil, commande_list.is_stand_option, commande_list.is_package, commande_list.is_expo, commande_list.mod_speaker, commande_list.mod_poster, commande_list.name_pass, commande_list.name_stand, manifestation.original_title, YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM commande
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation AND DUE_TTC <= 0.00
LEFT JOIN commande_list ON commande.id_commande = commande_list.id_commande ;

/*---- CHAMP TYPOLOGIE TYPE DE PASSE ----*/
ALTER TABLE temp_last_commande_manifestation ADD pass_typology CHAR(25) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE temp_last_commande_manifestation MODIFY COLUMN pass_typology CHAR(25) AFTER type_profil ;
UPDATE temp_last_commande_manifestation SET pass_typology = type_profil ;
ALTER TABLE temp_last_commande_manifestation DROP COLUMN type_profil ;

UPDATE temp_last_commande_manifestation SET pass_typology = 'DELEGATE' WHERE pass_typology LIKE '0' ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'DELEGATE' WHERE pass_typology LIKE '1' ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'SPEAKER' WHERE pass_typology LIKE '2' ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'DELEGATE GUEST' WHERE pass_typology LIKE '4' ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'PRESS' WHERE pass_typology LIKE '5' ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'EXHIBITOR GUEST' WHERE pass_typology LIKE '6' ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'SPEAKER GUEST' WHERE pass_typology LIKE '10' ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'INFORMA' WHERE pass_typology LIKE '11' ;

UPDATE temp_last_commande_manifestation SET pass_typology = 'DELEGATE' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND name_pass LIKE '%DELEGATE%' ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'DELEGATE' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND name_pass LIKE '%CONFERENCE%' ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'VISITOR' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND name_pass LIKE '%VISITOR%' ;

UPDATE temp_last_commande_manifestation SET pass_typology = 'EXHIBITOR' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND is_stand_option = 1 ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'EXHIBITOR' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND is_package = 1 ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'EXHIBITOR' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND is_expo = 1 ;

UPDATE temp_last_commande_manifestation SET pass_typology = 'STAFF' WHERE pass_typology LIKE '0' AND name_stand LIKE '%STAFF%' ;
UPDATE temp_last_commande_manifestation SET pass_typology = 'STAFF' WHERE name_pass LIKE '%STAFF%' ;


/*---- SUPPRESSION COLONNE INUTILES AVANT INSERTIONS SUIVANTES ----*/
ALTER TABLE temp_last_commande_manifestation DROP COLUMN is_stand_option ;
ALTER TABLE temp_last_commande_manifestation DROP COLUMN is_package  ;
ALTER TABLE temp_last_commande_manifestation DROP COLUMN is_expo  ;
ALTER TABLE temp_last_commande_manifestation DROP COLUMN name_pass ;
ALTER TABLE temp_last_commande_manifestation DROP COLUMN name_stand ;
ALTER TABLE temp_last_commande_manifestation DROP COLUMN mod_speaker ;
ALTER TABLE temp_last_commande_manifestation DROP COLUMN mod_poster ;


/*---- INSERTIONS DES PARTICIPATIONS EXHIBITOR GUEST DANS temp_last_commande_manifestation ----*/
INSERT INTO temp_last_commande_manifestation (id_customer, id_commande, pass_typology, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT DISTINCT customer_guest_labo.id_customer, customer_guest_labo.id_commande, 'EXHIBITOR GUEST', manifestation.original_title,
YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM customer_guest_labo
INNER JOIN commande ON customer_guest_labo.id_commande = commande.id_commande AND DUE_TTC <= 0.00
INNER JOIN manifestation ON customer_guest_labo.id_manifestation = manifestation.id_manifestation ;


/*---- INSERTIONS DES PARTICIPATIONS STAFF temp_last_commande_manifestation ----*/
ALTER TABLE temp_last_commande_manifestation ADD id_customer_labo INT(11) ;
ALTER TABLE temp_last_commande_manifestation MODIFY COLUMN id_customer_labo INT(11) AFTER id_customer ;

INSERT INTO temp_last_commande_manifestation (id_customer, id_customer_labo, id_commande, pass_typology, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT DISTINCT 0, customer_labo.id_customer_labo, customer_labo.id_commande, 'STAFF', manifestation.original_title,
YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM customer_labo
INNER JOIN commande ON customer_labo.id_commande = commande.id_commande AND DUE_TTC <= 0.00
INNER JOIN manifestation ON customer_labo.id_manifestation = manifestation.id_manifestation ;


/*--------------------- HARMONISATION DU CHAMP original_title -------------------------*/
UPDATE temp_last_commande_manifestation SET original_title = REPLACE(original_title, "&amp;" , "AND") ;
UPDATE temp_last_commande_manifestation SET original_title = REPLACE(original_title, "&#039;" , " " ) ;
UPDATE temp_last_commande_manifestation SET original_title = REPLACE(original_title, " (D)" , "" ) ;
UPDATE temp_last_commande_manifestation SET original_title = REPLACE(original_title, " (PT)" , "" ) ;
UPDATE temp_last_commande_manifestation SET original_title = REPLACE(original_title, " (G)" , "" ) ;

UPDATE temp_last_commande_manifestation SET original_title = 'MCA 2018' WHERE original_title LIKE 'LIVE AND PRACTICAL INTERNATIONAL SYMPOSIUM' ;
UPDATE temp_last_commande_manifestation SET original_title = 'AMWC 2018' WHERE original_title LIKE 'AMWC MONACO HOTELS' ;
UPDATE temp_last_commande_manifestation SET original_title = 'EUROGIN 2018' WHERE original_title LIKE 'EUROGIN LISBON HOTELS' ;


UPDATE temp_last_commande_manifestation SET original_title = 'WAVE' WHERE original_title LIKE 'WAVE 20%' ;


/*---- DEDOUBLONNAGE ----*/
CREATE TABLE temp_last_commande_manifestation_temp LIKE temp_last_commande_manifestation ;
INSERT INTO temp_last_commande_manifestation_temp SELECT DISTINCT * FROM temp_last_commande_manifestation ;
DROP TABLE temp_last_commande_manifestation ;
RENAME TABLE temp_last_commande_manifestation_temp TO temp_last_commande_manifestation ;


/*---- CONCATENATION DES MANIFESTATION ET DU TYPE DE PASS ----*/
ALTER TABLE temp_last_commande_manifestation ADD original_title_complete CHAR(255) ;
ALTER TABLE temp_last_commande_manifestation MODIFY COLUMN original_title_complete CHAR(255) AFTER id_commande ;
UPDATE temp_last_commande_manifestation SET original_title_complete = CONCAT (original_title, ' (', pass_typology, ')') ;
ALTER TABLE temp_last_commande_manifestation DROP COLUMN original_title ;
ALTER TABLE temp_last_commande_manifestation DROP COLUMN pass_typology ;
ALTER TABLE temp_last_commande_manifestation CHANGE original_title_complete original_title CHAR(255) ;


/*---- ConcatÈnation des participations par id_customer ----*/
CREATE TABLE temp_last_concat_manifs_id_customer AS
SELECT id_customer, GROUP_CONCAT(distinct original_title ORDER BY date_year DESC separator ', ') as manifs, MAX(date_year) as last_year, count(id_customer) as nbr_manif, sum(MONTANT_TTC) as total_MONTANT_TTC, sum(DUE_TTC) as total_DUE_TTC
FROM temp_last_commande_manifestation
WHERE id_customer <> 0
GROUP BY id_customer ;

/* AJOUT CHAMP CLE PRIMAIRE */
ALTER TABLE temp_last_concat_manifs_id_customer ADD PRIMARY KEY (id_customer) ;

/*-----------------------------------------------------*/

/*---- ConcatÈnation des participations par id_customer_labo ----*/
CREATE TABLE temp_last_concat_manifs_id_customer_labo AS
SELECT id_customer_labo, GROUP_CONCAT(distinct original_title ORDER BY date_year DESC separator ', ') as manifs, MAX(date_year) as last_year, count(id_customer_labo) as nbr_manif, sum(MONTANT_TTC) as total_MONTANT_TTC, sum(DUE_TTC) as total_DUE_TTC
FROM temp_last_commande_manifestation
WHERE id_customer_labo not like ''
GROUP BY id_customer_labo ;

/* AJOUT CHAMP CLE PRIMAIRE */
ALTER TABLE temp_last_concat_manifs_id_customer_labo ADD PRIMARY KEY (id_customer_labo) ;
/*-----------------------------------------------------*/


/*---- CREATION TABLE TEMPORAIRE temp_outstanding ----*/
CREATE TABLE temp_outstanding AS
SELECT id_customer, GROUP_CONCAT(distinct original_title ORDER BY date_year DESC) as manifs, MAX(date_year) as last_year, count(id_customer) as nbr_manif, sum(MONTANT_TTC) as total_MONTANT_TTC, sum(DUE_TTC) as total_DUE_TTC
FROM temp_last_commande_manifestation
WHERE id_customer <> 0 AND DUE_TTC > 0.00
GROUP BY id_customer ;

/* AJOUT CHAMP CLE PRIMAIRE */
ALTER TABLE temp_outstanding ADD PRIMARY KEY (id_customer) ;
/*-----------------------------------------------------*/




/*---- CREATION CHAMP last_part----*/
ALTER TABLE geo_temp_customer ADD last_part CHAR(4) CHARACTER SET utf8 NOT NULL ;

/*---- MAJ CHAMP last_part PAR id_customer ----*/
UPDATE geo_temp_customer, temp_last_concat_manifs_id_customer
SET last_part = last_year
WHERE geo_temp_customer.id_customer = temp_last_concat_manifs_id_customer.id_customer ;



/*---- MAJ CHAMP last_part PAR id_customer_labo ----*/
UPDATE geo_temp_customer, temp_last_concat_manifs_id_customer_labo
SET last_part = last_year
WHERE geo_temp_customer.id_customer_labo = temp_last_concat_manifs_id_customer_labo.id_customer_labo ;
/*-----------------------------------------------------*/


/*---- CREATION CHAMP last_manifs ----*/
ALTER TABLE geo_temp_customer ADD last_manifs LONGTEXT CHARACTER SET latin1 NULL ;

/*---- MAJ CHAMP last_manifs PAR id_customer ----*/
UPDATE geo_temp_customer, temp_last_concat_manifs_id_customer
SET last_manifs = manifs WHERE geo_temp_customer.id_customer = temp_last_concat_manifs_id_customer.id_customer ;

/*---- MAJ CHAMP last_manifs PAR id_customer_labo ----*/
UPDATE geo_temp_customer, temp_last_concat_manifs_id_customer_labo
SET last_manifs = manifs WHERE geo_temp_customer.id_customer_labo = temp_last_concat_manifs_id_customer_labo.id_customer_labo ;
/*-----------------------------------------------------*/


/*---- CREATION CHAMP outstanding_order ----*/
ALTER TABLE geo_temp_customer ADD outstanding_order LONGTEXT CHARACTER SET latin1 NULL ;

/*---- MAJ CHAMP outstanding_order ----*/
UPDATE geo_temp_customer, temp_outstanding
SET outstanding_order = manifs WHERE geo_temp_customer.id_customer = temp_outstanding.id_customer ;
/*-----------------------------------------------------*/



/*---- CREATION CHAMP total_MONTANT_TTC ----*/
ALTER TABLE geo_temp_customer ADD total_MONTANT_TTC decimal(37,2) DEFAULT 0 ;

/*---- MAJ CHAMP total_MONTANT_TTC PAR id_customer ----*/
UPDATE geo_temp_customer, temp_last_concat_manifs_id_customer
SET geo_temp_customer.total_MONTANT_TTC = temp_last_concat_manifs_id_customer.total_MONTANT_TTC
WHERE geo_temp_customer.id_customer = temp_last_concat_manifs_id_customer.id_customer ;

/*---- MAJ CHAMP total_MONTANT_TTC PAR id_customer_labo ----*/
UPDATE geo_temp_customer, temp_last_concat_manifs_id_customer_labo
SET geo_temp_customer.total_MONTANT_TTC = temp_last_concat_manifs_id_customer_labo.total_MONTANT_TTC
WHERE geo_temp_customer.id_customer_labo = temp_last_concat_manifs_id_customer_labo.id_customer_labo ;
/*-----------------------------------------------------*/


/*-------------------------- SUPPRESSION TABLES --------------------------------*/
DROP TABLE if exists temp_last_commande_manifestation ; DROP TABLE if exists temp_last_concat_manifs_id_customer ; 
 DROP TABLE if exists temp_last_concat_manifs_id_customer_labo ; 
DROP TABLE if exists temp_outstanding ;

/*-------------------------------- FIN DERNIERE PARTICIPATION PAR CONGRES -------------------------------*/


/* ***************************************************************************************************** */


/* ***************************************************************************************************** */
/*----------------------- CHAMP organismes ---------------------*/
/*---- CREATION TABLE TEMPORAIRE temp_customer_concat_organisme ----*/
CREATE TABLE temp_customer_concat_organisme AS
SELECT id_customer, UPPER(GROUP_CONCAT(name_organisme)) as organismes, COUNT(name_organisme) as nbre_organisme
FROM customer_organisme INNER JOIN organisme ON customer_organisme.id_organisme = organisme.id_organisme
GROUP BY id_customer 
ORDER BY nbre_organisme DESC ;

/* AJOUT CHAMP CLE PRIMAIRE */
ALTER TABLE temp_customer_concat_organisme ADD PRIMARY KEY (id_customer) ;

/*---- CREATION CHAMP organismes DANS geo_temp_customer ----*/
ALTER TABLE geo_temp_customer ADD organismes longtext CHARACTER SET latin1 NOT NULL ;

/*---- MAJ CHAMP organismes ----*/
UPDATE geo_temp_customer, temp_customer_concat_organisme
SET geo_temp_customer.organismes = temp_customer_concat_organisme.organismes WHERE geo_temp_customer.id_customer = temp_customer_concat_organisme.id_customer ;

/*-------------------------- SUPPRESSION TABLE --------------------------------*/
DROP TABLE if exists temp_customer_concat_organisme ;

/*----------------------- FIN CHAMP organismes ---------------------*/
/* ***************************************************************************************************** */

/*-------------------- CREATION DE LA TABLE geo_temp_company ---------------------------*/
CREATE TABLE geo_temp_company AS

SELECT company.id_company, UPPER(activity) AS activity, UPPER(name_company) AS name_company, UPPER(civility) AS civility,
UPPER(company.lastname) AS lastname, UPPER(company.firstname) AS firstname, UPPER(address1) AS address1, UPPER(address2) AS address2,
UPPER(address3) AS address3, UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode, UPPER(address.city) AS city,
UPPER(state) AS state, UPPER(address.country) AS country, type_ad, LOWER(company.email) AS email, LOWER(SiteWeb) AS site_web,

UPPER(telephone.code_tel1) AS area_code_tel, UPPER(telephone.tel1) AS tel, UPPER(telephone.code_tel2) AS area_code_tel2, UPPER(telephone.tel2) AS tel2,
UPPER(telephone.code_tel3) AS area_code_gsm, UPPER(telephone.tel3) AS gsm, UPPER(telephone.code_fax) AS area_code_fax, UPPER(telephone.fax) AS fax, invoice

FROM company, address, telephone

WHERE company.id_company=address.id_company  AND address.id_address = telephone.id_address ;

/*----------------------- CREATION DE LA TABLE geo_temp_labo  ---------------------------*/
CREATE TABLE geo_temp_labo AS

SELECT id_lab_congress, UPPER(name_company) AS name_company, UPPER(contact) AS contact, UPPER(address1) AS address1,
UPPER(address2) AS address2, UPPER(address3) AS address3, UPPER(pobox) AS pobox, UPPER(zipcode) AS zipcode,
UPPER(city) AS city, UPPER(state) AS state, UPPER(country) AS country, LOWER(email) AS email, LOWER(SiteWeb) AS site_web,
UPPER(area_code_tel) AS area_code_tel, UPPER(tel) AS tel, UPPER(area_code_gsm) AS area_code_gsm, UPPER(gsm) AS gsm,
UPPER(area_code_fax) AS area_code_fax, UPPER(fax) AS fax, fichier

FROM lab_congress ;

/*----------------------- AJOUT CHAMPS source et type ------------------------------------*/
ALTER TABLE geo_temp_customer ADD source CHAR(50) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_customer ADD type CHAR(50) CHARACTER SET utf8 NOT NULL;

/*----------------------- source ------------------------------------*/
UPDATE geo_temp_customer SET source = 'SOFT V2' ;

/*----------------------- type ------------------------------------*/
UPDATE geo_temp_customer SET type = 'DELEGATE' WHERE id_group = 1 OR id_group = 0 ;

UPDATE geo_temp_customer SET type = 'DELEGATE' WHERE id_group = 3 ;

UPDATE geo_temp_customer SET type = 'EXHIBITOR' WHERE id_group = 2 AND src_detail NOT LIKE 'Table customer_labo' ;

UPDATE geo_temp_customer SET type = 'STAFF' WHERE id_group = 2 AND src_detail LIKE 'Table customer_labo' ;

UPDATE geo_temp_customer SET type = 'SPEAKER' WHERE id_customer IN (SELECT id_customer from file_speaker) ;

UPDATE geo_temp_customer SET type = 'DELEGATE' WHERE type LIKE '' ;

/*----------------------- AJOUT CHAMPS source et type ------------------------------------*/
ALTER TABLE geo_temp_company ADD source CHAR(50) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_company ADD type CHAR(50) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_company SET source = 'SOFT V2 (COMPANY - OLD)' ;
UPDATE geo_temp_company SET type = 'EXHIBITOR';

/*----------------------- AJOUT CHAMPS source et type ------------------------------------*/
ALTER TABLE geo_temp_labo ADD source CHAR(50) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_labo ADD type CHAR(50) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_labo SET source = 'SOFT V2';
UPDATE geo_temp_labo SET type = 'EXHIBITOR';

/***********************************************************************************/

/*---------------------------------- UNION SELECT ---------------------------------------*/
CREATE TABLE geo_temp_union AS

SELECT (SELECT id_customer) AS id_original, (SELECT source) AS source, (SELECT src_detail) AS src_detail,
(SELECT date_submit) AS date_submit, (SELECT date_maj) AS date_maj, (SELECT edit_telesale) AS edit_telesale, (SELECT type) AS type,
num_customer, last_part, last_manifs, outstanding_order, total_MONTANT_TTC,
dentaire, antiaging, gynecology, gastronomy, cosmetic,
(SELECT speciality) AS speciality, other_speciality, (SELECT raison_sociale) AS raison_sociale,
(SELECT civility) AS civility, (SELECT lastname) AS lastname, (SELECT firstname) AS firstname,
(SELECT address1) AS address1, (SELECT address2) AS address2, (SELECT address3) AS address3,
(SELECT pobox) AS pobox, (SELECT zipcode) AS zipcode, (SELECT city) AS city,
(SELECT state) AS state, (SELECT country) AS country, type_ad,
(SELECT email) AS email, (SELECT email1) AS email1, (SELECT email2) AS email2, (SELECT site_web) AS site_web,
(SELECT area_code_tel) AS code_tel, (SELECT tel) AS tel,
(SELECT area_code_tel2) AS code_tel2, (SELECT tel2) AS tel2, (SELECT area_code_gsm) AS code_gsm, (SELECT gsm) AS gsm,
(SELECT area_code_fax) AS code_fax, (SELECT fax) AS fax,
destination, notes_telesales AS notes, organismes, fichier, invoice
FROM geo_temp_customer


UNION SELECT id_lab_congress, source, 'Table lab_congress',
'', '', '', type,
'None', 'None', 'None', 'None', 0, 
'None', 'None', 'None', 'None', 'None',
'Other', '', name_company,
'', contact, '',
address1, address2, address3, pobox, zipcode, city, state, country, '1',
email, '', '', site_web,
area_code_tel, tel, '', '', area_code_gsm, gsm, area_code_fax, fax,
'', '', 'LABO', fichier, '1'
FROM geo_temp_labo


UNION SELECT id_company, source, 'Table company',
'', '', '', type,
'None', 'None', 'None', 'None', 0, 
'None', 'None', 'None', 'None', 'None',
activity, '', name_company,
civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad,
email, '', '', site_web,
area_code_tel, tel, area_code_tel2, tel2, area_code_gsm, gsm, area_code_fax, fax,
'', '', 'LABO', '', invoice
FROM geo_temp_company ;


/*-------------------------- SUPPRESSION TABLES TEMPORAIRES --------------------------------*/
DROP TABLE geo_temp_customer, geo_temp_company, geo_temp_labo ;

/*--------------------------- MODIFICATION STRUCTURE DE geo_temp_union -----------------------------*/
/* AJOUT CHAMP CLE PRIMAIRE */
ALTER TABLE geo_temp_union ADD cle_id INT NOT NULL AUTO_INCREMENT primary key first ;

/* CHANGEMENT DE MOTEUR POUR PERMETTRE UN PLUS GRAND NOMBRE DE CHAMP TEXTE */
ALTER TABLE geo_temp_union ENGINE = MYISAM ;

/* MODIFICATION DES TYPES DE CHAMPS */
ALTER TABLE geo_temp_union MODIFY source CHAR(150) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY destination CHAR(25) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY last_part CHAR(4) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY last_manifs LONGTEXT CHARACTER SET latin1 NULL ;
ALTER TABLE geo_temp_union MODIFY outstanding_order LONGTEXT CHARACTER SET latin1 NULL ;
ALTER TABLE geo_temp_union MODIFY organismes LONGTEXT CHARACTER SET latin1 NULL ;
ALTER TABLE geo_temp_union MODIFY speciality CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY raison_sociale CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY civility CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY lastname CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY firstname CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY address1 CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY address2 CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY address3 CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY pobox CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY zipcode CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY city CHAR(255) CHARACTER SET utf8 NOT NULL ; 
ALTER TABLE geo_temp_union MODIFY state CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY country CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY email CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY email1 CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY email2 CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY code_tel CHAR(255) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_union MODIFY tel CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY code_tel2 CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY tel2 CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY code_gsm CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY gsm CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY code_fax CHAR(255) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY fax CHAR(255) CHARACTER SET utf8 NOT NULL ;

/* Deplacement de champs */
ALTER TABLE geo_temp_union MODIFY COLUMN organismes LONGTEXT AFTER type ;
ALTER TABLE geo_temp_union MODIFY COLUMN fichier VARCHAR(255) AFTER organismes ;
ALTER TABLE geo_temp_union MODIFY COLUMN invoice varbinary(4) AFTER type_ad ;

/* ************************************************************************************************ */


/* CREATION ET MAJ DU CHAMP theme */
ALTER TABLE geo_temp_union ADD theme VARCHAR(15) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE geo_temp_union MODIFY COLUMN theme VARCHAR(15) AFTER type ;

/* ************************************************************************************************ */

/*--------- IMPORT PROSPECTS ---------*/

/*--------- Modifications Source Prospects ---------*/
ALTER TABLE prospects MODIFY source CHAR(150) CHARACTER SET utf8 NOT NULL ;
UPDATE prospects SET source = CONCAT('PROSPECT: ',source) ;

/*--------- Import Prospects ---------*/
INSERT INTO geo_temp_union
(id_original, theme, source, src_detail,
date_submit, date_maj, edit_telesale,
type, organismes,
speciality, other_speciality, raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad, invoice,
email, email1, email2, site_web,
tel, tel2, gsm, fax,
destination, notes)

SELECT
iden, theme, source, src_detail, 
date_submit, date_edit, '',
type, 'EUROMEDICOM',
speciality, other_speciality, UPPER(raison_sociale) as raison_sociale,
UPPER(civility) as civility, UPPER(lastname) as lastname, UPPER(firstname) as firstname,
UPPER(add1) as add1, UPPER(add2) as add2, UPPER(add3) as add3,
UPPER(pobox) as pobox, UPPER(zipcode) as zipcode, UPPER(city) as city, UPPER(state) as state, UPPER(country) as country, '1', '0',
LOWER(email) as email, LOWER(email2) as email2, LOWER(email3) as email3, LOWER(website) as website,
tel, tel2, mobile, fax,
destination, notes
FROM prospects ;

/*--------- Fin Import Prospects ---------*/


/*--------- IMPORT EXTERN DB ---------*/

/*--------- Modifications Source extern_db ---------*/
ALTER TABLE extern_db MODIFY source CHAR(150) CHARACTER SET utf8 NOT NULL ;
UPDATE extern_db SET source = CONCAT('EXTERN: ',source) ;

/*--------- Import ---------*/
INSERT INTO geo_temp_union
(id_original, theme, source, src_detail, 
date_submit, date_maj, edit_telesale,
type, organismes,
speciality, other_speciality, raison_sociale, civility, lastname, firstname,
address1, address2, address3, pobox, zipcode, city, state, country, type_ad, invoice,
email, email1, email2, site_web,
tel, tel2, gsm, fax,
destination, notes)

SELECT
iden, theme, source, src_detail, 
date_submit, date_edit, '',
type, 'EUROMEDICOM',
speciality, other_speciality, UPPER(raison_sociale) as raison_sociale,
UPPER(civility) as civility, UPPER(lastname) as lastname, UPPER(firstname) as firstname,
UPPER(add1) as add1, UPPER(add2) as add2, UPPER(add3) as add3,
UPPER(pobox) as pobox, UPPER(zipcode) as zipcode, UPPER(city) as city, UPPER(state) as state, UPPER(country) as country, '1', '0',
LOWER(email) as email, LOWER(email2) as email2, LOWER(email3) as email3, LOWER(website) as website,
tel, tel2, mobile, fax,
destination, notes
FROM extern_db ;

/*--------- Fin Import extern_db ---------*/


/*-------------------------------- TRAITEMENT geo_temp_union ------------------------------------*/

/*----------------------- HARMONISATION DU CHAMP destination pour Export email et routage ---------------------*/

UPDATE geo_temp_union SET destination = 'Kate' WHERE destination = '644' ;
UPDATE geo_temp_union SET destination = 'Ella' WHERE destination = '669' ;
UPDATE geo_temp_union SET destination = 'Jessica A' WHERE destination = '702' ;
UPDATE geo_temp_union SET destination = 'Probationer' WHERE destination = '705' ;
UPDATE geo_temp_union SET destination = 'Natacha' WHERE destination = '696' ;
UPDATE geo_temp_union SET destination = 'Awatef' WHERE destination = '682' ;
UPDATE geo_temp_union SET destination = 'Mathilde' WHERE destination = '683' ;
UPDATE geo_temp_union SET destination = 'Katia' WHERE destination = '684' ;
UPDATE geo_temp_union SET destination = 'Serena' WHERE destination = '697' ;
UPDATE geo_temp_union SET destination = 'Jessica' WHERE destination = '700' ;
UPDATE geo_temp_union SET destination = 'Maddy' WHERE destination = '703' ;
UPDATE geo_temp_union SET destination = 'Emilie' WHERE destination = '708' ;

UPDATE geo_temp_union SET destination = 'Simon' WHERE destination = '694' ;
UPDATE geo_temp_union SET destination = 'Ryan' WHERE destination = '691' ;
UPDATE geo_temp_union SET destination = 'La' WHERE destination = '649' ;
UPDATE geo_temp_union SET destination = 'Mathieu' WHERE destination = '690' ;
UPDATE geo_temp_union SET destination = 'Slim' WHERE destination = '656' ;
UPDATE geo_temp_union SET destination = 'Slim' WHERE destination = '647' ;
UPDATE geo_temp_union SET destination = 'Georges' WHERE destination = '678' ;

UPDATE geo_temp_union SET destination = 'Pending' WHERE destination = '604' ;
UPDATE geo_temp_union SET destination = 'Pending' WHERE destination = '' ;


/*--------------------- HARMONISATION DU CHAMP type -------------------------*/
/* TYPE EN MAJUSCULE */
UPDATE geo_temp_union SET type = UPPER(type);

/* MODIFICATION REPLACE TYPE */
UPDATE geo_temp_union SET type = "EXHIBITOR" where type LIKE "EXHIBITORS" ;
UPDATE geo_temp_union SET type = "EXHIBITOR" where type LIKE "EXPOSANT" ;
UPDATE geo_temp_union SET type = "EXHIBITOR" where type LIKE "EXPOSANTS" ;

UPDATE geo_temp_union SET type = "EXHIBITOR" where type LIKE "LABOR%" ;
UPDATE geo_temp_union SET type = "EXHIBITOR" where type = "LABO" ;

UPDATE geo_temp_union SET type = "DELEGATE" where type LIKE "" ;
UPDATE geo_temp_union SET type = "DELEGATE" where type NOT IN ("EXHIBITOR","LABORATORY","SPEAKER") ;

/*--------------------- HARMONISATION DU CHAMP NUM_CUSTOMER -------------------------*/
UPDATE geo_temp_union SET num_customer = 'None' where num_customer is null ;
UPDATE geo_temp_union SET num_customer = 'None' where num_customer like '' ;

/*--------------------- HARMONISATION DU CHAMP LAST_PART -------------------------*/
UPDATE geo_temp_union SET last_part = 'None' where last_part like '' ;
UPDATE geo_temp_union SET last_part = 'None' where last_part is null ;

/*--------------------- HARMONISATION DU CHAMP last_manifs -------------------------*/
UPDATE geo_temp_union SET last_manifs = 'None' where last_manifs like '' ;
UPDATE geo_temp_union SET last_manifs = 'None' where last_manifs is null ;

/*--------------------- HARMONISATION DU CHAMP outstanding_order -------------------------*/
UPDATE geo_temp_union SET outstanding_order = 'None' where outstanding_order like '' ;
UPDATE geo_temp_union SET outstanding_order = 'None' where outstanding_order is null ;

/*--------------------- HARMONISATION DU CHAMP total_MONTANT_TTC -------------------------*/
UPDATE geo_temp_union SET total_MONTANT_TTC = '0' where total_MONTANT_TTC like '' ;
UPDATE geo_temp_union SET total_MONTANT_TTC = '0' where total_MONTANT_TTC like 'None' ;
UPDATE geo_temp_union SET total_MONTANT_TTC = '0' where total_MONTANT_TTC is null ;

/*--------------------- HARMONISATION DU CHAMP fichier -------------------------*/
UPDATE geo_temp_union SET fichier = 'None' where fichier like '' ;
UPDATE geo_temp_union SET fichier = 'None' where fichier is null ;

/*--------------------- HARMONISATION DU CHAMP antiaging -------------------------*/
UPDATE geo_temp_union SET antiaging = 'None' where antiaging is null ;
UPDATE geo_temp_union SET antiaging = 'None' where antiaging like '' ;

/*--------------------- HARMONISATION DU CHAMP dentaire -------------------------*/
UPDATE geo_temp_union SET dentaire = 'None' where dentaire is null ;
UPDATE geo_temp_union SET dentaire = 'None' where dentaire like '' ;

/*--------------------- HARMONISATION DU CHAMP gynecology -------------------------*/
UPDATE geo_temp_union SET gynecology = 'None' where gynecology is null ;
UPDATE geo_temp_union SET gynecology = 'None' where gynecology like '' ;

/*--------------------- HARMONISATION DU CHAMP gastronomy -------------------------*/
UPDATE geo_temp_union SET gastronomy = 'None' where gastronomy is null ;
UPDATE geo_temp_union SET gastronomy = 'None' where gastronomy like '' ;

/*--------------------- HARMONISATION DU CHAMP cosmetic -------------------------*/
UPDATE geo_temp_union SET cosmetic = 'None' where cosmetic is null ;
UPDATE geo_temp_union SET cosmetic = 'None' where cosmetic like '' ;



/*--------------------- HARMONISATION DU CHAMP theme -------------------------*/
/*--------- CORRECTION THEME (Ceux des tables Prospects et Extern_db ---------*/
UPDATE geo_temp_union SET theme = REPLACE(theme, '"', '') ;
UPDATE geo_temp_union SET theme = REPLACE(theme, '[', '') ;
UPDATE geo_temp_union SET theme = REPLACE(theme, ']', '') ;
UPDATE geo_temp_union SET theme = REPLACE(theme, ',', '/') ;


/*---------  THEME A PARTIR DES CHAMPS antiaging ,dentaire ,gynecology ,gastronomy ET cosmetic ---------*/
UPDATE geo_temp_union SET theme = 'AA' WHERE antiaging = 1 AND dentaire = 0 AND gynecology = 0 AND gastronomy = 0 AND cosmetic = 0 ;
UPDATE geo_temp_union SET theme = 'CWS' WHERE antiaging = 0 AND dentaire = 0 AND gynecology = 0 AND gastronomy = 1 AND cosmetic = 0 ;
UPDATE geo_temp_union SET theme = 'DENT' WHERE antiaging = 0 AND dentaire = 1 AND gynecology = 0 AND gastronomy = 0 AND cosmetic = 0 ;
UPDATE geo_temp_union SET theme = 'GYN' WHERE antiaging = 0 AND dentaire = 0 AND gynecology = 1 AND gastronomy = 0 AND cosmetic = 0 ;
UPDATE geo_temp_union SET theme = 'AA' WHERE antiaging = 0 AND dentaire = 0 AND gynecology = 0 AND gastronomy = 0 AND cosmetic = 1 ;

UPDATE geo_temp_union SET theme = 'AA/CWS' WHERE antiaging = 1 AND dentaire = 0 AND gynecology = 0 AND gastronomy = 1 AND cosmetic = 0 ;
UPDATE geo_temp_union SET theme = 'AA/DENT' WHERE antiaging = 1 AND dentaire = 1 AND gynecology = 0 AND gastronomy = 0 AND cosmetic = 0 ;
UPDATE geo_temp_union SET theme = 'AA/GYN' WHERE antiaging = 1 AND dentaire = 0 AND gynecology = 1 AND gastronomy = 0 AND cosmetic = 0 ;
UPDATE geo_temp_union SET theme = 'AA' WHERE antiaging = 1 AND dentaire = 0 AND gynecology = 0 AND gastronomy = 0 AND cosmetic = 1 ;

UPDATE geo_temp_union SET theme = 'AA/DENT' WHERE antiaging = 1 AND dentaire = 1 AND gynecology = 0 AND gastronomy = 0 AND cosmetic = 1 ;
UPDATE geo_temp_union SET theme = 'AA/DENT/CWS' WHERE antiaging = 1 AND dentaire = 1 AND gynecology = 0 AND gastronomy = 1 AND cosmetic = 0 ;
UPDATE geo_temp_union SET theme = 'AA/DENT/GYN' WHERE antiaging = 1 AND dentaire = 1 AND gynecology = 1 AND gastronomy = 0 AND cosmetic = 0 ;

UPDATE geo_temp_union SET theme = 'AA/GYN' WHERE antiaging = 1 AND dentaire = 0 AND gynecology = 1 AND gastronomy = 0 AND cosmetic = 1 ;
UPDATE geo_temp_union SET theme = 'AA/CWS/GYN' WHERE antiaging = 1 AND dentaire = 0 AND gynecology = 1 AND gastronomy = 1 AND cosmetic = 0 ;

UPDATE geo_temp_union SET theme = 'AA/DENT/GYN' WHERE antiaging = 1 AND dentaire = 1 AND gynecology = 1 AND gastronomy = 0 AND cosmetic = 1 ;
UPDATE geo_temp_union SET theme = 'AA/DENT/CWS' WHERE antiaging = 1 AND dentaire = 1 AND gynecology = 0 AND gastronomy = 1 AND cosmetic = 1 ;
UPDATE geo_temp_union SET theme = 'AA/GYN/CWS' WHERE antiaging = 1 AND dentaire = 0 AND gynecology = 1 AND gastronomy = 1 AND cosmetic = 1 ;
UPDATE geo_temp_union SET theme = 'AA/DENT/GYN/CWS' WHERE antiaging = 0 AND dentaire = 1 AND gynecology = 1 AND gastronomy = 1 AND cosmetic = 1 ;

UPDATE geo_temp_union SET theme = 'AA/CWS/DENT/GYN' WHERE antiaging = 1 AND dentaire = 1 AND gynecology = 1 AND gastronomy = 1 AND cosmetic = 1 ;


/* CORRECTION CHAMP THEME */
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE 'AA/' ;
UPDATE geo_temp_union SET theme = 'CWS' WHERE theme LIKE 'CWS/' ;
UPDATE geo_temp_union SET theme = 'GYN' WHERE theme LIKE 'GYN/' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE 'COS/' ;
UPDATE geo_temp_union SET theme = 'DENT' WHERE theme LIKE 'DENT/' ;


/* CORRECTION CHAMP THEME ENCORE VIDE, SELON CONGRES */
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%AMWC%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%VCS%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%FACE%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%ICAD%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%MCA%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%CFA%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%MCS%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%VISAGE%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%AMEC%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%IMAAC%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%TAS %' ;

UPDATE geo_temp_union SET theme = 'CWS' WHERE theme LIKE '' AND last_manifs LIKE '%CWS%' ;

UPDATE geo_temp_union SET theme = 'GYN' WHERE theme LIKE '' AND last_manifs LIKE '%EUROGIN%' ;

UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%AFB%' ;
UPDATE geo_temp_union SET theme = 'AA' WHERE theme LIKE '' AND last_manifs LIKE '%SPA%' ;

/*-------------------------------- TRAITEMENT chaines de texte sur geo_temp_union ------------------------------------*/

/* MODIFICATION SPECIALITY CORRECTION SPECIALITY */

UPDATE geo_temp_union SET speciality = "…picerie Fine" WHERE speciality = "&Eacute;picerie Fine" ;
UPDATE geo_temp_union SET speciality = "Chef GÈrant" WHERE speciality = "Chef G&eacute;rant" ;
UPDATE geo_temp_union SET speciality = "Chef GÈrant" WHERE speciality = "Chef G√©rant" ;
UPDATE geo_temp_union SET speciality = "Company's Medical Staff" WHERE speciality = "Company&#039;s Medical Staff" ;
UPDATE geo_temp_union SET speciality = "MaÓtre d'HÙtel/Head Waiter" WHERE speciality = "Ma&icirc;tre d&#039;H&ocirc;tel/Head Waiter" ;
UPDATE geo_temp_union SET speciality = "PizzaÔolo" WHERE speciality = "Pizza&iuml;olo" ;
UPDATE geo_temp_union SET speciality = "Saucier/SautÈ Chef" WHERE speciality = "Saucier/Saut&eacute; Chef" ;

UPDATE geo_temp_union SET speciality = "Gynecologist/Obstetrician" WHERE speciality = "Gynecologist" ;
UPDATE geo_temp_union SET speciality = "Gynecologist/Obstetrician" WHERE speciality = "Obstetrician" ;
UPDATE geo_temp_union SET speciality = "Gynecologist/Obstetrician" WHERE speciality = "OB" ;
UPDATE geo_temp_union SET speciality = "Gynecologist/Obstetrician" WHERE speciality = "O B" ;
UPDATE geo_temp_union SET speciality = "Gynecologist/Obstetrician" WHERE speciality = "O B " ;

UPDATE geo_temp_union SET speciality = REPLACE(speciality, "&amp;ê", "&");


/* ************************************************************************************************ */

/* MODIFICATION REPLACE RAISON_SOCIALE */
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AAÇ¨U", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AAÇ¨A", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ÖAEí", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A¬ÄZ", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "N¬∞", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ÑEOE", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A ¨A¢", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬®", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AÉ¬®", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬©", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ÉEÜ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A AΩ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬≥", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬Äå", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬Ä", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬∂", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬¥", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬∫", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É≈ì", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬º", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ÉAEí", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬°", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬†", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬§", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬£", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬ß", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬Ø", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É¬≠", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A¬ÄZ", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√£¬©", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AÉA", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A¬±", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A¬¥", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A≈ì", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ºì", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Aºì", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AA ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ä", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¬™", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ì", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√É", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√°", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√Ä", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ü", "SS");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√¢", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√∫", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√Ç", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A£", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√®", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√©", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A©", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "≈Ω", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AΩ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√Æ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√á", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ß", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Aß", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ö", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A∫", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Aì", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√º", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Aº", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "LΩ", "Z");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√ ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A≈", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " ∞", "E");

UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&EGRAVE;", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&EACUTE;", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ECIRC;", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&EUML;", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&AGRAVE;", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&AACUTE;", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ACUTE;", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&AUML;", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ACIRC;", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ATILDE;", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ARING;", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OCIRC;", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OTILDE;", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OSLASH;", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OGRAVE;", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OACUTE;", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OUML;", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&UACUTE;", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&UCIRC;", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&UUML;", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&CCARON;", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&CCEDIL;", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&SZLIG;", "SS");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ZCARON;", "Z");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&SCARON;", "S");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&IEXCL;", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&YUML;", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&YACUTE;", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OELIG;", "OE");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&AELIG;", "AE");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&IGRAVE;", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ICIRC;", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&IUML;", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&NTILDE;", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&IACUTE;", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&AMP;", "AND");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&DEG;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&LRM;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&SUP1;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ORDF;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ORDM;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&RDQUO;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&LDQUO;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&RSQUO;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&LSQUO;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&PLUSMN;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&NDASH;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&RAQUO;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&LAQUO;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&SUP2;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&NBSP;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&BULL;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&SHY;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&EURO;", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&QUOT;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&THORN;", "B") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ETH;", "D") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&LT;", " ") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&GT;", " ") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&YEN;", "Y") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&COPY;", "C") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&REG;", "R") ;

UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#039;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#322;", "L");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#321;", "L");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#324;", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#932;", "T");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#304;", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#919;", "H");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#269;", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#915;", "G");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#346;", "S");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#917;", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#8470;", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#281;", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#305;", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#324;", "N");

UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "»", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "…", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "À", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¿", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¡", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ƒ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "÷", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "’", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "”", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ÿ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "“", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "‘", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Ÿ", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "⁄", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "‹", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "€", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "U", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Ã", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Õ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Œ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "œ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "›", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ü", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "«", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "L", "L");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ﬂ", "SS");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "é", "Z");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "S", "S");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "$", "S");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "?", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "N", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "—", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "C", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "C±", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "–", "TH");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "∆", "AE");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "å", "OE");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "?", "BI");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "?", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "???", "SKV");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "?", "K");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "?", "E");

UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "IUML;", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "EGRAVE;", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "EACUTE;", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "UUML;", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "UACUTE;", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ORDM;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AMP;", " AND ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "#039;", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "#324;", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "#346;", "S");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "346;", "S");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "OUML;", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AACUTE; ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AUML;", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ARING;", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ATILDE;", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "OACUTE;", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CCEDIL;", "C");

 
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, 'Ü', " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, '£', " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, 'Æ', " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, 'î', " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ë", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ï", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ã", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "õ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "∏", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, '"', " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ª", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "´", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "!", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "?", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "|", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "[", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "]", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "<", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "\_", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "=", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "*", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "+", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "`", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "(", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, ")", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "∞", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "™", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "∫", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, ">", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, ",", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, ":", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "®", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "/", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "'", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "\\", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ø", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "@", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "°", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "^", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¬∑", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¬§", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¬Ω", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√â", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√à", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "∑", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "§", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Ω", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "â", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "à", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "©", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "í", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¥", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¨", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "•", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ä", "S");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "≥", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "á", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ó", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Ø", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "≠", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¢", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Ñ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¶", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ºò", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ò", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ò ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "º", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "A", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "≈", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "¬", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "√", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Ç", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Ö", " ");

UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " ;", " ");


/* CORRECTIONS DES CARACTERES SPECIAUX MAL ENCODES */

UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " & 39 ", " ");

UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&EGRAVE ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&EACUTE ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ECIRC ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&EUML ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&AGRAVE ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&AACUTE ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ACUTE ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&AUML ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ACIRC ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ATILDE ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ARING ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OCIRC ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OTILDE ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OSLASH ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OGRAVE ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OACUTE ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OUML ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&UACUTE ", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&UCIRC ", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&UUML ", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&CCARON ", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&CCEDIL ", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&SZLIG ", "SS");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ZCARON ", "Z");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&SCARON ", "S");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&IEXCL ", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&YUML ", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&YACUTE ", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&OELIG ", "OE");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&AELIG ", "AE");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&IGRAVE ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ICIRC ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&IUML ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&NTILDE ", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&IACUTE ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&AMP ", "AND");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&DEG ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&LRM ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&SUP1 ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ORDF ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&ORDM ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&RDQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&LDQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&RSQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&LSQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&PLUSMN ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&NDASH ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&RAQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&LAQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&SUP2 ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&NBSP ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&BULL ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&SHY ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&EURO ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&QUOT ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#039 ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#322 ", "L");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#321 ", "L");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#324 ", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#932 ", "T");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#304 ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#919 ", "H");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#269 ", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#915 ", "G");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#346 ", "S");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#917 ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#8470 ", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#281 ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&#305 ", "I");


UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND EACUTE ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND ECIRC ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND EUML ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND AACUTE ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND ACUTE ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND AUML ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND ACIRC ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND ATILDE ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND ARING ", "A");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND OCIRC ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND OTILDE ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND OSLASH ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND OACUTE ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND OUML ", "O");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND UACUTE ", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND UCIRC ", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND UUML ", "U");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND CCARON ", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND SCARON ", "S");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND YUML ", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND OELIG ", "OE");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND AELIG ", "AE");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND ICIRC ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND IUML ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND NTILDE ", "N");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND IACUTE ", "I");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND AMP ", "AND");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND DEG ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND LRM ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND SUP1 ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND ORDF ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND ORDM ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND RDQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND LDQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND RSQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND LSQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND NDASH ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND RAQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND LAQUO ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND SUP2 ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND NBSP ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND BULL ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND SHY ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND EURO ", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND QUOT ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND THORN ", "B") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND ETH ", "D") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND LT ", " ") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND GT ", " ") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND COPY ", "C") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " AND REG ", "R") ;

/* AUTRES */
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "∂", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ß", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "É", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "Ä", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "\%", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "~", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ô", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "±", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "æ", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ì", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ú", "E");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "π", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "≤", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "-", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, ".", " ");

/* MODIFICATION REPLACE SPECIAL RAISON_SOCIALE */
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "FIRST", "1ST ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "SECOND", "2ND ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "THIRD", "3RD ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "SAINTE ", "STE ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "SAINT ", "ST ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ROAD", "RD");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "STREET", "STR");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "STRASSE", "STR");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "DERECHA", "DCHA");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "IZQUIERDA", "IZQ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "DISTRICT", "DC");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CHEMIN", "CHM");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "RESIDENCE", "RES");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "IMMEUBLE", "IMM");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "AVENIDA", "AVDA");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "APARTADO", "APDO");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "APARTAMENTO", "APTO");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "BULVARI", "BVD");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "BUILDING", "BLDG");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CENTER", "CTR");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CENTRO", "CTR");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CENTRE", "CTR");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " CTRE ", " CTR ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, " ZTR ", " CTR ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CENTRUM", "CTR");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ZENTRUM", "CTR");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CENTRALE", "CTR");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CENTRAL", "CTR");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CLINIC", "CLC");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CLCAL", "CLC");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "CLCA", "CLC");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "KLINIKKEN", "KLK");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "KLINIKK", "KLK");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "KLINIK", "KLK");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "DEPARTEMENT", "DPT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "DEPARTMENT", "DPT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "DIPARTIMENTO", "DPT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "BATIMENT", "BAT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "OFFICE", "OFF");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "DU GENERAL", "DU GAL");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "LE GENERAL", "LE GAL");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "DU GEN ", "DU GAL ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "LE GEN ", "LE GAL ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "COMMANDANT", "CDT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "MARECHAL", "MAL");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "PRESIDENT", "PRES");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "LIEUTENANT", "LT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "LIMITED", "LTD");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "COLONEL", "CL");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ROUTE", "RTE");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "PLACE", "PL");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "PLATZ", "PL");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "PLAZA", "PL");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "SQUARE", "SQ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "FLOOR", "FL");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "APARTEMENT", "APT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "APPARTEMENT", "APT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "APARTMENT", "APT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "APPARTMENT", "APT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "APPT", "APT");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "FAUBOURG", "FB");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "UNIVERSITY", "UNIV");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "UNIVERSITE", "UNIV");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "UNIVERSITI", "UNIV");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ASSOCIATION", "ASS");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "SOCIETE", "SC");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "SOCIETY", "SC");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "HOSPITAL", "HOP");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "HOPITAL", "HOP");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "DRIVE", "DR");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "SANS ADRESSE", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ADRESSE", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "NO ADDRESS", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ADDRESS", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ZIP CODE", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ZIPCODE", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "EXAMPLE", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "EXEMPLE", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ERROR", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "ERREUR", "");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "NO ", "N ");

/* SUPPRESSION raison_sociale */
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="NA" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="N A" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="PTDR" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="NPAI" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="NAME" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="CP" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="NONE" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="CITY" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="PASS" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="PASS 1" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="PASS 2" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="PASS 3" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="PASS 4" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="PASS 5" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="NULL" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="LOL" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="TEST" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="ERR" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="XXXXX" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="XXXX" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="XXX" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="XX" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="X" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="0" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale="NULL" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale ="NO" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale ="VILLE" ;
UPDATE geo_temp_union SET raison_sociale="" where raison_sociale = "PAYS" ;

UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "&", " AND ") ;
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "#", " ") ;

UPDATE geo_temp_union SET raison_sociale = "" where raison_sociale = " " ;
UPDATE geo_temp_union SET raison_sociale = "" where raison_sociale = "OTHERS" ;
UPDATE geo_temp_union SET raison_sociale = "" where raison_sociale = "NSP" ;

UPDATE geo_temp_union SET raison_sociale = "" where raison_sociale like "%e+%" ;

UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "   ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "  ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "   ", " ");
UPDATE geo_temp_union SET raison_sociale = REPLACE(raison_sociale, "  ", " ");

/* SANS LETTRE */
UPDATE geo_temp_union SET raison_sociale = ""
WHERE (raison_sociale not like "%A%" AND raison_sociale not like "%B%" AND raison_sociale not like "%C%" AND raison_sociale not like "%D%" AND raison_sociale not like "%E%" AND raison_sociale not like "%F%" AND raison_sociale not like "%G%" AND raison_sociale not like "%H%" AND raison_sociale not like "%I%" AND raison_sociale not like "%J%" AND raison_sociale not like "%K%" AND raison_sociale not like "%L%" AND raison_sociale not like "%M%" AND raison_sociale not like "%N%" AND raison_sociale not like "%O%" AND raison_sociale not like "%P%" AND raison_sociale not like "%Q%" AND raison_sociale not like "%R%" AND raison_sociale not like "%S%" AND raison_sociale not like "%T%" AND raison_sociale not like "%U%" AND raison_sociale not like "%V%" AND raison_sociale not like "%W%" AND raison_sociale not like "%X%" AND raison_sociale not like "%Y%" AND raison_sociale not like "%Z%");

/* UN SEUL CARACTERE */
UPDATE geo_temp_union SET raison_sociale = "" WHERE LENGTH( raison_sociale ) = 1 ;

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET raison_sociale = SUBSTR(raison_sociale, 2 ) where raison_sociale like " %" ;

/* MODIFICATION REPLACE CIVILITY */
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AAÇ¨U", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AAÇ¨A", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ÖAEí", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A¬ÄZ", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "N¬∞", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ÑEOE", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A ¨A¢", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬®", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AÉ¬®", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬©", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ÉEÜ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A AΩ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬≥", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬Äå", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬Ä", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬∂", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬¥", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬∫", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É≈ì", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬º", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ÉAEí", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬°", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬†", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬§", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬£", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬ß", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬Ø", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É¬≠", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A¬ÄZ", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√£¬©", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AÉA", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A¬±", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A¬¥", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A≈ì", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ºì", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Aºì", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AA ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ä", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¬™", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ì", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√É", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√°", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√Ä", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ü", "SS");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√¢", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√∫", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√Ç", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A£", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√®", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√©", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A©", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "≈Ω", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AΩ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√Æ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√á", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ß", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Aß", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ö", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A∫", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Aì", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√º", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Aº", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "LΩ", "Z");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√ ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A≈", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, " ∞", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&EGRAVE;", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&EACUTE;", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ECIRC;", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&EUML;", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&AGRAVE;", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&AACUTE;", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ACUTE;", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&AUML;", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ACIRC;", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ATILDE;", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ARING;", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OCIRC;", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OTILDE;", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OSLASH;", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OGRAVE;", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OACUTE;", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OUML;", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&UACUTE;", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&UCIRC;", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&UUML;", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&CCARON;", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&CCEDIL;", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&SZLIG;", "SS");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ZCARON;", "Z");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&SCARON;", "S");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&IEXCL;", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&YUML;", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&YACUTE;", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OELIG;", "OE");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&AELIG;", "AE");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&IGRAVE;", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ICIRC;", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&IUML;", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&NTILDE;", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&IACUTE;", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&AMP;", "AND");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&DEG;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&LRM;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&SUP1;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ORDF;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ORDM;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&RDQUO;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&LDQUO;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&RSQUO;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&LSQUO;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&PLUSMN;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&NDASH;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&RAQUO;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&LAQUO;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&SUP2;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&NBSP;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&BULL;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&SHY;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&EURO;", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&QUOT;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&THORN;", "B") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ETH;", "D") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, "&LT;", " ") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, "&GT;", " ") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, "&YEN;", "Y") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, "&COPY;", "C") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, "&REG;", "R") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#039;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#322;", "L");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#321;", "L");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#324;", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#932;", "T");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#304;", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#919;", "H");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#269;", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#915;", "G");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#346;", "S");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#917;", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#8470;", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#281;", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#305;", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#324;", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "»", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "…", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, " ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "À", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¿", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¡", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ƒ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "÷", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "’", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "”", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ÿ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "“", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "‘", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Ÿ", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "⁄", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "‹", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "€", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "U", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Ã", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Õ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Œ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "œ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "›", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ü", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, "«", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "L", "L");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ﬂ", "SS");
UPDATE geo_temp_union SET civility = REPLACE(civility, "é", "Z");
UPDATE geo_temp_union SET civility = REPLACE(civility, "S", "S");
UPDATE geo_temp_union SET civility = REPLACE(civility, "$", "S");
UPDATE geo_temp_union SET civility = REPLACE(civility, "?", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "N", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "—", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "C", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "C±", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "–", "TH");
UPDATE geo_temp_union SET civility = REPLACE(civility, "∆", "AE");
UPDATE geo_temp_union SET civility = REPLACE(civility, "å", "OE");
UPDATE geo_temp_union SET civility = REPLACE(civility, "?", "BI");
UPDATE geo_temp_union SET civility = REPLACE(civility, "?", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "???", "SKV");
UPDATE geo_temp_union SET civility = REPLACE(civility, "?", "K");
UPDATE geo_temp_union SET civility = REPLACE(civility, "?", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "IUML;", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "EGRAVE;", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "EACUTE;", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "UUML;", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "UACUTE;", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ORDM;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AMP;", " AND ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "#039;", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "#324;", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "#346;", "S");
UPDATE geo_temp_union SET civility = REPLACE(civility, "346;", "S");
UPDATE geo_temp_union SET civility = REPLACE(civility, "OUML;", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AACUTE; ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "AUML;", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ARING;", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ATILDE;", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "OACUTE;", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "CCEDIL;", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, 'Ü', " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, '£', " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, 'Æ', " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, 'î', " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ë", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ï", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ã", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "õ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "∏", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, '"', " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ª", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "´", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "!", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "?", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "|", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "[", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "]", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "<", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "\_", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "=", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "*", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "+", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "`", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "(", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, ")", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "∞", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "™", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "∫", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, ">", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, ",", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, ":", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "®", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "/", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "'", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "\\", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ø", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "@", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "°", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "^", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¬∑", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¬§", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¬Ω", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√â", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√à", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "∑", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "§", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Ω", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "â", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "à", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "©", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "í", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¥", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¨", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "•", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ä", "S");
UPDATE geo_temp_union SET civility = REPLACE(civility, "≥", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "á", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ó", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Ø", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "≠", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¢", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Ñ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¶", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ºò", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ò", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ò ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "º", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "A", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "≈", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "¬", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "√", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Ç", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Ö", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " & 39 ", " ");

UPDATE geo_temp_union SET civility = REPLACE(civility, " ;", " ");

UPDATE geo_temp_union SET civility = REPLACE(civility, "&EGRAVE ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&EACUTE ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ECIRC ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&EUML ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&AGRAVE ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&AACUTE ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ACUTE ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&AUML ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ACIRC ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ATILDE ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ARING ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OCIRC ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OTILDE ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OSLASH ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OGRAVE ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OACUTE ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OUML ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&UACUTE ", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&UCIRC ", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&UUML ", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&CCARON ", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&CCEDIL ", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&SZLIG ", "SS");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ZCARON ", "Z");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&SCARON ", "S");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&IEXCL ", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&YUML ", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&YACUTE ", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&OELIG ", "OE");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&AELIG ", "AE");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&IGRAVE ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ICIRC ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&IUML ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&NTILDE ", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&IACUTE ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&AMP ", "AND");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&DEG ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&LRM ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&SUP1 ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ORDF ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&ORDM ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&RDQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&LDQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&RSQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&LSQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&PLUSMN ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&NDASH ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&RAQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&LAQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&SUP2 ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&NBSP ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&BULL ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&SHY ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&EURO ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&QUOT ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#039 ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#322 ", "L");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#321 ", "L");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#324 ", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#932 ", "T");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#304 ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#919 ", "H");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#269 ", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#915 ", "G");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#346 ", "S");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#917 ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#8470 ", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#281 ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "&#305 ", "I");

UPDATE geo_temp_union SET civility = REPLACE(civility, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND EACUTE ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND ECIRC ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND EUML ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND AACUTE ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND ACUTE ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND AUML ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND ACIRC ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND ATILDE ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND ARING ", "A");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND OCIRC ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND OTILDE ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND OSLASH ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND OACUTE ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND OUML ", "O");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND UACUTE ", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND UCIRC ", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND UUML ", "U");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND CCARON ", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND SCARON ", "S");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND YUML ", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND OELIG ", "OE");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND AELIG ", "AE");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND ICIRC ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND IUML ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND NTILDE ", "N");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND IACUTE ", "I");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND AMP ", "AND");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND DEG ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND LRM ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND SUP1 ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND ORDF ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND ORDM ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND RDQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND LDQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND RSQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND LSQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND NDASH ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND RAQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND LAQUO ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND SUP2 ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND NBSP ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND BULL ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND SHY ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND EURO ", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND QUOT ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND THORN ", "B") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND ETH ", "D") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND LT ", " ") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND GT ", " ") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND COPY ", "C") ;
UPDATE geo_temp_union SET civility = REPLACE(civility, " AND REG ", "R") ;


UPDATE geo_temp_union SET civility = REPLACE(civility, "∂", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ß", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "É", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "Ä", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "\%", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "~", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ô", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "±", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "æ", "");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ì", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "ú", "E");
UPDATE geo_temp_union SET civility = REPLACE(civility, "π", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "≤", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "-", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, ".", " ");

UPDATE geo_temp_union SET civility = REPLACE(civility, "&", " AND ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "#", " ");

UPDATE geo_temp_union SET civility = REPLACE(civility, "   ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "  ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "   ", " ");
UPDATE geo_temp_union SET civility = REPLACE(civility, "  ", " ");

/* SUPPRESSION civility */
UPDATE geo_temp_union SET civility = "" where civility = " " ;

/* SANS LETTRE */
UPDATE geo_temp_union SET civility = ""
WHERE (civility not like "%A%" AND civility not like "%B%" AND civility not like "%C%" AND civility not like "%D%" AND civility not like "%E%" AND civility not like "%F%" AND civility not like "%G%" AND civility not like "%H%" AND civility not like "%I%" AND civility not like "%J%" AND civility not like "%K%" AND civility not like "%L%" AND civility not like "%M%" AND civility not like "%N%" AND civility not like "%O%" AND civility not like "%P%" AND civility not like "%Q%" AND civility not like "%R%" AND civility not like "%S%" AND civility not like "%T%" AND civility not like "%U%" AND civility not like "%V%" AND civility not like "%W%" AND civility not like "%X%" AND civility not like "%Y%" AND civility not like "%Z%");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET civility = SUBSTR(civility, 2 ) where civility like " %" ;

/* MODIFICATION REPLACE LASTNAME*/
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AAÇ¨U", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AAÇ¨A", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ÖAEí", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A¬ÄZ", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "N¬∞", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ÑEOE", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A ¨A¢", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬®", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AÉ¬®", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬©", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ÉEÜ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A AΩ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬≥", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬Äå", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬Ä", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬∂", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬¥", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬∫", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É≈ì", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬º", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ÉAEí", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬°", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬†", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬§", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬£", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬ß", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬Ø", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É¬≠", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A¬ÄZ", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√£¬©", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AÉA", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A¬±", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A¬¥", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A≈ì", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ºì", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Aºì", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AA ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ä", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¬™", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ì", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√É", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√°", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√Ä", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ü", "SS");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√¢", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√∫", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√Ç", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A£", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√®", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√©", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A©", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "≈Ω", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AΩ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√Æ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ß", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√á", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Aß", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ö", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A∫", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Aì", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√º", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Aº", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "LΩ", "Z");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√ ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A≈", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " ∞", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&EGRAVE;", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&EACUTE;", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ECIRC;", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&EUML;", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&AGRAVE;", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&AACUTE;", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ACUTE;", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&AUML;", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ACIRC;", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ATILDE;", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ARING;", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OCIRC;", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OTILDE;", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OSLASH;", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OGRAVE;", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OACUTE;", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OUML;", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&UACUTE;", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&UCIRC;", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&UUML;", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&CCARON;", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&CCEDIL;", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&SZLIG;", "SS");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ZCARON;", "Z");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&SCARON;", "S");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&IEXCL;", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&YUML;", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&YACUTE;", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OELIG;", "OE");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&AELIG;", "AE");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&IGRAVE;", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ICIRC;", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&IUML;", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&NTILDE;", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&IACUTE;", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&AMP;", "AND");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&DEG;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&LRM;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&SUP1;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ORDF;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ORDM;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&RDQUO;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&LDQUO;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&RSQUO;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&LSQUO;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&PLUSMN;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&NDASH;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&RAQUO;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&LAQUO;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&SUP2;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&NBSP;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&BULL;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&SHY;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&EURO;", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&QUOT;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&THORN;", "B") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ETH;", "D") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&LT;", " ") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&GT;", " ") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&YEN;", "Y") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&COPY;", "C") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&REG;", "R") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#039;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#322;", "L");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#321;", "L");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#324;", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#932;", "T");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#304;", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#919;", "H");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#269;", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#915;", "G");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#346;", "S");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#917;", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#8470;", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#281;", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#305;", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#324;", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "»", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "…", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "À", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¿", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¡", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ƒ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "÷", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "’", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "”", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ÿ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "“", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "‘", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Ÿ", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "⁄", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "‹", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "€", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "U", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Ã", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Õ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Œ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "œ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "›", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ü", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "«", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "L", "L");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ﬂ", "SS");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "é", "Z");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "S", "S");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "$", "S");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "?", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "N", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "—", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "C", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "C±", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "–", "TH");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "∆", "AE");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "å", "OE");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "?", "BI");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "?", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "???", "SKV");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "?", "K");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "?", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "IUML;", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "EGRAVE;", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "EACUTE;", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "UUML;", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "UACUTE;", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ORDM;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AMP;", " AND ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "#039;", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "#324;", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "#346;", "S");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "346;", "S");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "OUML;", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AACUTE; ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "AUML;", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ARING;", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ATILDE;", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "OACUTE;", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "CCEDIL;", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, 'Ü', " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, '£', " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, 'Æ', " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, 'î', " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ë", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ï", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ã", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "õ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "∏", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, '"', " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ª", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "´", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "!", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "?", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "|", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "[", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "]", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "<", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "\_", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "=", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "*", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "+", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "`", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "(", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, ")", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "∞", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "™", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "∫", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, ">", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, ",", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, ":", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "®", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "/", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "'", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "\\", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ø", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "@", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "°", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "^", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¬∑", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¬§", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¬Ω", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√â", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√à", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "∑", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "§", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Ω", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "â", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "à", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "©", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "í", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¥", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¨", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "•", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ä", "S");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "≥", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "á", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ó", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Ø", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "≠", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¢", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Ñ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¶", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ºò", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ò", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ò ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "º", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "A", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "≈", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "¬", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "√", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Ç", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Ö", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " & 39 ", " ");

UPDATE geo_temp_union SET lastname = REPLACE(lastname, " ;", " ");

UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&EGRAVE ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&EACUTE ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ECIRC ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&EUML ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&AGRAVE ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&AACUTE ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ACUTE ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&AUML ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ACIRC ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ATILDE ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ARING ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OCIRC ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OTILDE ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OSLASH ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OGRAVE ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OACUTE ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OUML ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&UACUTE ", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&UCIRC ", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&UUML ", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&CCARON ", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&CCEDIL ", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&SZLIG ", "SS");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ZCARON ", "Z");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&SCARON ", "S");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&IEXCL ", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&YUML ", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&YACUTE ", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&OELIG ", "OE");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&AELIG ", "AE");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&IGRAVE ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ICIRC ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&IUML ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&NTILDE ", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&IACUTE ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&AMP ", "AND");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&DEG ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&LRM ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&SUP1 ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ORDF ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&ORDM ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&RDQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&LDQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&RSQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&LSQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&PLUSMN ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&NDASH ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&RAQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&LAQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&SUP2 ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&NBSP ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&BULL ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&SHY ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&EURO ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&QUOT ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#039 ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#322 ", "L");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#321 ", "L");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#324 ", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#932 ", "T");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#304 ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#919 ", "H");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#269 ", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#915 ", "G");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#346 ", "S");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#917 ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#8470 ", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#281 ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&#305 ", "I");

UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND EACUTE ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND ECIRC ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND EUML ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND AACUTE ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND ACUTE ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND AUML ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND ACIRC ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND ATILDE ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND ARING ", "A");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND OCIRC ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND OTILDE ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND OSLASH ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND OACUTE ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND OUML ", "O");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND UACUTE ", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND UCIRC ", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND UUML ", "U");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND CCARON ", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND SCARON ", "S");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND YUML ", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND OELIG ", "OE");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND AELIG ", "AE");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND ICIRC ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND IUML ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND NTILDE ", "N");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND IACUTE ", "I");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND AMP ", "AND");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND DEG ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND LRM ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND SUP1 ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND ORDF ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND ORDM ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND RDQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND LDQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND RSQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND LSQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND NDASH ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND RAQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND LAQUO ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND SUP2 ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND NBSP ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND BULL ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND SHY ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND EURO ", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND QUOT ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND THORN ", "B") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND ETH ", "D") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND LT ", " ") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND GT ", " ") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND COPY ", "C") ;
UPDATE geo_temp_union SET lastname = REPLACE(lastname, " AND REG ", "R") ;

UPDATE geo_temp_union SET lastname = REPLACE(lastname, "∂", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ß", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "É", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "Ä", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "\%", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "~", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ô", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "±", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "æ", "");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ì", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "ú", "E");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "π", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "≤", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "-", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, ".", " ");

/* SUPPRESSION lastname */
UPDATE geo_temp_union SET lastname ="" where lastname ="PTDR" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="NPAI" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="NAME" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="CP" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="NONE" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="CITY" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="PASS" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="PASS 1" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="PASS 2" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="PASS 3" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="PASS 4" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="PASS 5" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="NULL" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="LOL" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="TEST" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="ERR" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="XXXXX" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="XXXX" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="XXX" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="XX" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="X" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="0" ;
UPDATE geo_temp_union SET lastname ="" where lastname ="NULL" ;
UPDATE geo_temp_union SET lastname = "" where lastname = "VILLE" ;
UPDATE geo_temp_union SET lastname= "" where lastname = "PAYS" ;
UPDATE geo_temp_union SET lastname= "" where lastname = "CONTACT" ;

UPDATE geo_temp_union SET lastname = "" where lastname = " " ;
UPDATE geo_temp_union SET lastname = "" where lastname = "OTHERS" ;
UPDATE geo_temp_union SET lastname = "" where lastname = "NSP" ;

UPDATE geo_temp_union SET lastname = REPLACE(lastname, "&", " AND ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "#", " ");

UPDATE geo_temp_union SET lastname = "" where lastname like "%e+%" ;

UPDATE geo_temp_union SET lastname = REPLACE(lastname, "   ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "  ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "   ", " ");
UPDATE geo_temp_union SET lastname = REPLACE(lastname, "  ", " ");

/* SANS LETTRE */
UPDATE geo_temp_union SET lastname = ""
WHERE (lastname not like "%A%" AND lastname not like "%B%" AND lastname not like "%C%" AND lastname not like "%D%" AND lastname not like "%E%" AND lastname not like "%F%" AND lastname not like "%G%" AND lastname not like "%H%" AND lastname not like "%I%" AND lastname not like "%J%" AND lastname not like "%K%" AND lastname not like "%L%" AND lastname not like "%M%" AND lastname not like "%N%" AND lastname not like "%O%" AND lastname not like "%P%" AND lastname not like "%Q%" AND lastname not like "%R%" AND lastname not like "%S%" AND lastname not like "%T%" AND lastname not like "%U%" AND lastname not like "%V%" AND lastname not like "%W%" AND lastname not like "%X%" AND lastname not like "%Y%" AND lastname not like "%Z%");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET lastname = SUBSTR(lastname, 2 ) where lastname like " %" ;

/* MODIFICATION REPLACE FIRSTNAME*/
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AAÇ¨U", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AAÇ¨A", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ÖAEí", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A¬ÄZ", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "N¬∞", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ÑEOE", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A ¨A¢", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬®", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AÉ¬®", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬©", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ÉEÜ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A AΩ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬≥", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬Äå", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬Ä", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬∂", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬¥", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬∫", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É≈ì", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬º", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ÉAEí", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬°", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬†", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬§", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬£", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬ß", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬Ø", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É¬≠", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A¬ÄZ", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√£¬©", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AÉA", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A¬±", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A¬¥", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A≈ì", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ºì", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Aºì", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AA ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ä", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¬™", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ì", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√É", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√°", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√Ä", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ü", "SS");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√¢", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√∫", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√Ç", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A£", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√®", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√©", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A©", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "≈Ω", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AΩ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√Æ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√á", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ß", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Aß", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ö", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A∫", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Aì", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√º", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Aº", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "LΩ", "Z");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√ ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A≈", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " ∞", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&EGRAVE;", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&EACUTE;", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ECIRC;", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&EUML;", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&AGRAVE;", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&AACUTE;", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ACUTE;", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&AUML;", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ACIRC;", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ATILDE;", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ARING;", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OCIRC;", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OTILDE;", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OSLASH;", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OGRAVE;", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OACUTE;", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OUML;", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&UACUTE;", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&UCIRC;", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&UUML;", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&CCARON;", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&CCEDIL;", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&SZLIG;", "SS");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ZCARON;", "Z");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&SCARON;", "S");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&IEXCL;", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&YUML;", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&YACUTE;", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OELIG;", "OE");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&AELIG;", "AE");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&IGRAVE;", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ICIRC;", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&IUML;", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&NTILDE;", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&IACUTE;", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&AMP;", "AND");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&DEG;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&LRM;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&SUP1;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ORDF;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ORDM;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&RDQUO;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&LDQUO;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&RSQUO;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&LSQUO;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&PLUSMN;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&NDASH;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&RAQUO;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&LAQUO;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&SUP2;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&NBSP;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&BULL;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&SHY;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&EURO;", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&QUOT;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&THORN;", "B") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ETH;", "D") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&LT;", " ") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&GT;", " ") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&YEN;", "Y") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&COPY;", "C") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&REG;", "R") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#039;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#322;", "L");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#321;", "L");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#324;", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#932;", "T");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#304;", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#919;", "H");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#269;", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#915;", "G");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#346;", "S");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#917;", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#8470;", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#281;", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#305;", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#324;", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "»", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "…", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "À", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¿", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¡", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ƒ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "÷", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "’", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "”", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ÿ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "“", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "‘", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Ÿ", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "⁄", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "‹", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "€", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "U", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Ã", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Õ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Œ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "œ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "›", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ü", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "«", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "L", "L");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ﬂ", "SS");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "é", "Z");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "S", "S");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "$", "S");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "?", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "N", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "—", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "C", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "C±", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "–", "TH");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "∆", "AE");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "å", "OE");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "?", "BI");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "?", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "???", "SKV");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "?", "K");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "?", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "IUML;", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "EGRAVE;", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "EACUTE;", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "UUML;", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "UACUTE;", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ORDM;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AMP;", " AND ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "#039;", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "#324;", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "#346;", "S");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "346;", "S");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "OUML;", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AACUTE; ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "AUML;", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ARING;", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ATILDE;", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "OACUTE;", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "CCEDIL;", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, 'Ü', " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, '£', " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, 'Æ', " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, 'î', " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ë", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ï", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ã", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "õ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "∏", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, '"', " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ª", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "´", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "!", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "?", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "|", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "[", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "]", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "<", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "\_", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "=", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "*", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "+", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "`", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "(", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, ")", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "∞", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "™", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "∫", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, ">", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, ",", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, ":", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "®", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "/", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "'", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "\\", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ø", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "@", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "°", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "^", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¬∑", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¬§", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¬Ω", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√â", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√à", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "∑", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "§", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Ω", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "â", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "à", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "©", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "í", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¥", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¨", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "•", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ä", "S");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "≥", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "á", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ó", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Ø", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "≠", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¢", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Ñ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¶", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ºò", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ò", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ò ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "º", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "A", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "≈", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "¬", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "√", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Ç", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Ö", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " & 39 ", " ");

UPDATE geo_temp_union SET firstname = REPLACE(firstname, " ;", " ");

UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&EGRAVE ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&EACUTE ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ECIRC ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&EUML ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&AGRAVE ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&AACUTE ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ACUTE ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&AUML ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ACIRC ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ATILDE ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ARING ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OCIRC ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OTILDE ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OSLASH ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OGRAVE ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OACUTE ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OUML ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&UACUTE ", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&UCIRC ", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&UUML ", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&CCARON ", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&CCEDIL ", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&SZLIG ", "SS");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ZCARON ", "Z");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&SCARON ", "S");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&IEXCL ", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&YUML ", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&YACUTE ", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&OELIG ", "OE");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&AELIG ", "AE");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&IGRAVE ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ICIRC ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&IUML ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&NTILDE ", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&IACUTE ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&AMP ", "AND");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&DEG ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&LRM ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&SUP1 ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ORDF ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&ORDM ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&RDQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&LDQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&RSQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&LSQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&PLUSMN ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&NDASH ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&RAQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&LAQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&SUP2 ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&NBSP ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&BULL ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&SHY ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&EURO ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&QUOT ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#039 ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#322 ", "L");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#321 ", "L");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#324 ", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#932 ", "T");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#304 ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#919 ", "H");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#269 ", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#915 ", "G");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#346 ", "S");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#917 ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#8470 ", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#281 ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&#305 ", "I");


UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND EACUTE ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND ECIRC ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND EUML ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND AACUTE ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND ACUTE ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND AUML ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND ACIRC ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND ATILDE ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND ARING ", "A");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND OCIRC ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND OTILDE ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND OSLASH ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND OACUTE ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND OUML ", "O");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND UACUTE ", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND UCIRC ", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND UUML ", "U");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND CCARON ", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND SCARON ", "S");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND YUML ", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND OELIG ", "OE");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND AELIG ", "AE");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND ICIRC ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND IUML ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND NTILDE ", "N");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND IACUTE ", "I");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND AMP ", "AND");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND DEG ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND LRM ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND SUP1 ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND ORDF ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND ORDM ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND RDQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND LDQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND RSQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND LSQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND NDASH ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND RAQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND LAQUO ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND SUP2 ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND NBSP ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND BULL ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND SHY ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND EURO ", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND QUOT ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND THORN ", "B") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND ETH ", "D") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND LT ", " ") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND GT ", " ") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND COPY ", "C") ;
UPDATE geo_temp_union SET firstname = REPLACE(firstname, " AND REG ", "R") ;

UPDATE geo_temp_union SET firstname = REPLACE(firstname, "∂", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ß", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "É", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "Ä", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "\%", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "~", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ô", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "±", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "æ", "");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ì", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "ú", "E");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "π", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "≤", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "-", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, ".", " ");

/* SUPPRESSION firstname */
UPDATE geo_temp_union SET firstname ="" where firstname ="PTDR" ;
UPDATE geo_temp_union SET firstname="" where firstname="NPAI" ;
UPDATE geo_temp_union SET firstname="" where firstname="NAME" ;
UPDATE geo_temp_union SET firstname="" where firstname="CP" ;
UPDATE geo_temp_union SET firstname="" where firstname="NONE" ;
UPDATE geo_temp_union SET firstname="" where firstname="CITY" ;
UPDATE geo_temp_union SET firstname="" where firstname="PASS" ;
UPDATE geo_temp_union SET firstname="" where firstname="PASS 1" ;
UPDATE geo_temp_union SET firstname="" where firstname="PASS 2" ;
UPDATE geo_temp_union SET firstname="" where firstname="PASS 3" ;
UPDATE geo_temp_union SET firstname="" where firstname="PASS 4" ;
UPDATE geo_temp_union SET firstname="" where firstname="PASS 5" ;
UPDATE geo_temp_union SET firstname="" where firstname="NULL" ;
UPDATE geo_temp_union SET firstname="" where firstname="LOL" ;
UPDATE geo_temp_union SET firstname="" where firstname="TEST" ;
UPDATE geo_temp_union SET firstname="" where firstname="ERR" ;
UPDATE geo_temp_union SET firstname="" where firstname="XXXXX" ;
UPDATE geo_temp_union SET firstname="" where firstname="XXXX" ;
UPDATE geo_temp_union SET firstname="" where firstname="XXX" ;
UPDATE geo_temp_union SET firstname="" where firstname="XX" ;
UPDATE geo_temp_union SET firstname="" where firstname="X" ;
UPDATE geo_temp_union SET firstname="" where firstname="0" ;
UPDATE geo_temp_union SET firstname="" where firstname="NULL" ;
UPDATE geo_temp_union SET firstname = "" where firstname = "VILLE" ;
UPDATE geo_temp_union SET firstname= "" where firstname = "PAYS" ;
UPDATE geo_temp_union SET firstname= "" where firstname = "CONTACT" ;

UPDATE geo_temp_union SET firstname = "" where firstname = " " ;
UPDATE geo_temp_union SET firstname = "" where firstname = "OTHERS" ;
UPDATE geo_temp_union SET firstname = "" where firstname = "NSP" ;

UPDATE geo_temp_union SET firstname = REPLACE(firstname, "&", " AND ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "#", " ");

UPDATE geo_temp_union SET firstname = "" where firstname like "%e+%" ;

UPDATE geo_temp_union SET firstname = REPLACE(firstname, "   ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "  ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "   ", " ");
UPDATE geo_temp_union SET firstname = REPLACE(firstname, "  ", " ");

/* SANS LETTRE */
UPDATE geo_temp_union SET firstname = ""
WHERE (firstname not like "%A%" AND firstname not like "%B%" AND firstname not like "%C%" AND firstname not like "%D%" AND firstname not like "%E%" AND firstname not like "%F%" AND firstname not like "%G%" AND firstname not like "%H%" AND firstname not like "%I%" AND firstname not like "%J%" AND firstname not like "%K%" AND firstname not like "%L%" AND firstname not like "%M%" AND firstname not like "%N%" AND firstname not like "%O%" AND firstname not like "%P%" AND firstname not like "%Q%" AND firstname not like "%R%" AND firstname not like "%S%" AND firstname not like "%T%" AND firstname not like "%U%" AND firstname not like "%V%" AND firstname not like "%W%" AND firstname not like "%X%" AND firstname not like "%Y%" AND firstname not like "%Z%");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET firstname = SUBSTR(firstname, 2 ) where firstname like " %" ;

/* firstname ET lastname AVEC UN SEUL CARACTERE ET AUTRE CHAMP VIDE */
UPDATE geo_temp_union SET firstname = "" WHERE LENGTH( firstname ) =1 AND lastname =  '' ;
UPDATE geo_temp_union SET lastname = "" WHERE LENGTH( lastname ) =1 AND firstname =  '' ;

/* MODIFICATION REPLACE ADDRESS1 */
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AAÇ¨U", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AAÇ¨A", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ÖAEí", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A¬ÄZ", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "N¬∞", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ÑEOE", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A ¨A¢", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬®", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AÉ¬®", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√£¬©", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬©", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ÉEÜ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A AΩ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬≥", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬Äå", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬Ä", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬∂", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬¥", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬∫", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É≈ì", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬º", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ÉAEí", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬°", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬†", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬§", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬£", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬ß", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬Ø", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É¬≠", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A¬ÄZ", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AÉA", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A¬±", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A¬¥", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A≈ì", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ºì", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Aºì", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AA ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ä", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¬™", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ì", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√É", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√°", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√Ä", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ü", "SS");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√¢", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√∫", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√Ç", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A£", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√®", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√©", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A©", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "≈Ω", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AΩ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√Æ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√á", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ß", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Aß", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ö", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A∫", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Aì", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√º", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Aº", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "LΩ", "Z");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√ ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A≈", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " ∞", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&EGRAVE;", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&EACUTE;", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ECIRC;", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&EUML;", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&AGRAVE;", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&AACUTE;", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ACUTE;", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&AUML;", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ACIRC;", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ATILDE;", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ARING;", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OCIRC;", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OTILDE;", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OSLASH;", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OGRAVE;", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OACUTE;", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OUML;", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&UACUTE;", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&UCIRC;", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&UUML;", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&CCARON;", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&CCEDIL;", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&SZLIG;", "SS");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ZCARON;", "Z");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&SCARON;", "S");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&IEXCL;", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&YUML;", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&YACUTE;", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OELIG;", "OE");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&AELIG;", "AE");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&IGRAVE;", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ICIRC;", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&IUML;", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&NTILDE;", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&IACUTE;", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&AMP;", "AND");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&DEG;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&LRM;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&SUP1;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ORDF;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ORDM;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&RDQUO;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&LDQUO;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&RSQUO;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&LSQUO;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&PLUSMN;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&NDASH;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&RAQUO;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&LAQUO;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&SUP2;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&NBSP;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&BULL;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&SHY;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&EURO;", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&QUOT;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&THORN;", "B") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ETH;", "D") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&LT;", " ") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&GT;", " ") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&YEN;", "Y") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&COPY;", "C") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&REG;", "R") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#039;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#322;", "L");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#321;", "L");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#324;", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#932;", "T");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#304;", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#919;", "H");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#269;", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#915;", "G");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#346;", "S");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#917;", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#8470;", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#281;", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#305;", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#324;", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "»", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "…", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "À", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¿", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¡", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ƒ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "÷", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "’", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "”", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ÿ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "“", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "‘", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Ÿ", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "⁄", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "‹", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "€", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "U", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Ã", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Õ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Œ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "œ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "›", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ü", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "«", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "L", "L");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ﬂ", "SS");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "é", "Z");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "S", "S");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "$", "S");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "?", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "N", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "—", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "C", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "C±", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "–", "TH");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "∆", "AE");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "å", "OE");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "?", "BI");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "?", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "???", "SKV");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "?", "K");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "?", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "IUML;", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "EGRAVE;", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "EACUTE;", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "UUML;", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "UACUTE;", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ORDM;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AMP;", " AND ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "#039;", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "#324;", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "#346;", "S");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "346;", "S");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "OUML;", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AACUTE; ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AUML;", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ARING;", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ATILDE;", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "OACUTE;", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CCEDIL;", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, 'Ü', " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, '£', " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, 'Æ', " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, 'î', " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ë", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ï", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ã", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "õ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "∏", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, '"', " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ª", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "´", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "!", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "?", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "|", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "[", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "]", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "<", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "\_", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "=", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "*", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "+", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "`", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "(", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, ")", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "∞", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "™", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "∫", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, ">", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, ",", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, ":", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "®", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "'", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "/", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "\\", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ø", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "@", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "°", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "^", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¬∑", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¬§", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¬Ω", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√â", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√à", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "∑", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "§", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Ω", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "â", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "à", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "©", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "í", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¥", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¨", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "•", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ä", "S");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "≥", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "á", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ó", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Ø", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "≠", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¢", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Ñ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¶", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ºò", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ò", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ò ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "º", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "A", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "≈", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "¬", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "√", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Ç", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Ö", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " & 39 ", " ");

UPDATE geo_temp_union SET address1 = REPLACE(address1, " ;", " ");

UPDATE geo_temp_union SET address1 = REPLACE(address1, "&EGRAVE ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&EACUTE ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ECIRC ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&EUML ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&AGRAVE ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&AACUTE ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ACUTE ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&AUML ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ACIRC ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ATILDE ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ARING ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OCIRC ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OTILDE ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OSLASH ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OGRAVE ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OACUTE ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OUML ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&UACUTE ", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&UCIRC ", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&UUML ", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&CCARON ", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&CCEDIL ", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&SZLIG ", "SS");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ZCARON ", "Z");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&SCARON ", "S");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&IEXCL ", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&YUML ", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&YACUTE ", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&OELIG ", "OE");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&AELIG ", "AE");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&IGRAVE ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ICIRC ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&IUML ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&NTILDE ", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&IACUTE ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&AMP ", "AND");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&DEG ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&LRM ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&SUP1 ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ORDF ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&ORDM ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&RDQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&LDQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&RSQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&LSQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&PLUSMN ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&NDASH ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&RAQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&LAQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&SUP2 ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&NBSP ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&BULL ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&SHY ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&EURO ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&QUOT ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#039 ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#322 ", "L");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#321 ", "L");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#324 ", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#932 ", "T");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#304 ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#919 ", "H");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#269 ", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#915 ", "G");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#346 ", "S");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#917 ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#8470 ", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#281 ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "&#305 ", "I");


UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND EACUTE ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ECIRC ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND EUML ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND AACUTE ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ACUTE ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND AUML ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ACIRC ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ATILDE ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ARING ", "A");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND OCIRC ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND OTILDE ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND OSLASH ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND OACUTE ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND OUML ", "O");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND UACUTE ", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND UCIRC ", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND UUML ", "U");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND CCARON ", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND SCARON ", "S");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND YUML ", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND OELIG ", "OE");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND AELIG ", "AE");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ICIRC ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND IUML ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND NTILDE ", "N");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND IACUTE ", "I");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND AMP ", "AND");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND DEG ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND LRM ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND SUP1 ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ORDF ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ORDM ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND RDQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND LDQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND RSQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND LSQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND NDASH ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND RAQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND LAQUO ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND SUP2 ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND NBSP ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND BULL ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND SHY ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND EURO ", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND QUOT ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND THORN ", "B") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ETH ", "D") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND LT ", " ") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND GT ", " ") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND COPY ", "C") ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND REG ", "R") ;

UPDATE geo_temp_union SET address1 = REPLACE(address1, "∂", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ß", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "É", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "Ä", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "\%", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "~", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ô", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "±", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "æ", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ì", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ú", "E");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "π", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "≤", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "-", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, ".", " ");

/* MODIFICATION REPLACE SPECIALE ADDRESS1 */
UPDATE geo_temp_union SET address1 = REPLACE(address1, "FIRST", "1ST ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "SECOND", "2ND ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "THIRD", "3RD ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "SAINTE ", "STE ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "SAINT ", "ST ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ROAD", "RD");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "STREET", "STR");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "STRASSE", "STR");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "DERECHA", "DCHA");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "IZQUIERDA", "IZQ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "DISTRICT", "DC");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CHEMIN", "CHM");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "RESIDENCE", "RES");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "IMMEUBLE", "IMM");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVENIDA", "AVDA");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "APARTADO", "APDO");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "APARTAMENTO", "APTO");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BULVARI", "BVD");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BUILDING", "BLDG");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CENTER", "CTR");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CENTRO", "CTR");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CENTRE", "CTR");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " CTRE ", " CTR ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " ZTR ", " CTR ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CENTRUM", "CTR");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ZENTRUM", "CTR");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CENTRALE", "CTR");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CENTRAL", "CTR");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CLINIC", "CLC");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CLCAL", "CLC");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "CLCA", "CLC");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "KLINIKKEN", "KLK");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "KLINIKK", "KLK");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "KLINIK", "KLK");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "DEPARTEMENT", "DPT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "DEPARTMENT", "DPT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "DIPARTIMENTO", "DPT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BATIMENT", "BAT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "OFFICE", "OFF");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "DU GENERAL", "DU GAL");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "LE GENERAL", "LE GAL");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "DU GEN ", "DU GAL ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "LE GEN ", "LE GAL ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "COMMANDANT", "CDT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "MARECHAL", "MAL");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "PRESIDENT", "PRES");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "LIEUTENANT", "LT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "LIMITED", "LTD");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "COLONEL", "CL");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ROUTE", "RTE");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "PLACE", "PL");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "PLATZ", "PL");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "PLAZA", "PL");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "SQUARE", "SQ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "FLOOR", "FL");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BLOCK ", "BLK ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " BLOCK", " BLK");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BLOK ", "BLK ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, " BLOK", " BLK");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "APARTEMENT", "APT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "APPARTEMENT", "APT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "APARTMENT", "APT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "APPARTMENT", "APT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "APPT", "APT");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "FAUBOURG", "FB");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "UNIVERSITY", "UNIV");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "UNIVERSITE", "UNIV");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "UNIVERSITI", "UNIV");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ASSOCIATION", "ASS");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "SOCIETE", "SC");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "SOCIETY", "SC");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "HOSPITAL", "HOP");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "HOPITAL", "HOP");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "DRIVE", "DR");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "SANS ADRESSE", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ADRESSE", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "NO ADDRESS", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ADDRESS", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ZIP CODE", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ZIPCODE", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "EXAMPLE", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "EXEMPLE", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ERROR", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "ERREUR", "");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "NO ", "N ");

/* SUPPRESSION ADDRESS1 */
UPDATE geo_temp_union SET address1 ="" where address1 ="PTDR" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="NPAI" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="NAME" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="CP" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="NONE" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="CITY" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="PASS" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="PASS 1" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="PASS 2" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="PASS 3" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="PASS 4" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="PASS 5" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="NULL" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="LOL" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="TEST" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="ERR" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="XXXXX" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="XXXX" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="XXX" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="XX" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="X" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="0" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="NULL" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="NO" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="VILLE" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="NA" ;
UPDATE geo_temp_union SET address1 ="" where address1 ="N A" ;
UPDATE geo_temp_union SET address1= "" where address1 = "PAYS" ;

UPDATE geo_temp_union SET address1 = "" where address1 = " " ;
UPDATE geo_temp_union SET address1 = "" where address1 = "OTHERS" ;
UPDATE geo_temp_union SET address1 = "" where address1 = "NSP" ;

UPDATE geo_temp_union SET address1 = REPLACE(address1, "&", " AND ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "#", " ");

UPDATE geo_temp_union SET address1 = "" where address1 like "%e+%" ;

UPDATE geo_temp_union SET address1 = REPLACE(address1, "   ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "  ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "   ", " ");
UPDATE geo_temp_union SET address1 = REPLACE(address1, "  ", " ");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET address1 = SUBSTR(address1, 2 ) where address1 like " %" ;

/* MODIFICATION REPLACE ADDRESS2 */
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AAÇ¨U", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AAÇ¨A", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ÖAEí", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A¬ÄZ", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "N¬∞", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ÑEOE", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A ¨A¢", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬®", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AÉ¬®", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬©", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ÉEÜ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A AΩ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬≥", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬Äå", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬Ä", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬∂", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬¥", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬∫", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É≈ì", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬º", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ÉAEí", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬°", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬†", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬§", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬£", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬ß", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬Ø", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É¬≠", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A¬ÄZ", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√£¬©", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AÉA", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A¬±", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A¬¥", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A≈ì", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ºì", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Aºì", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AA ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ä", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¬™", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ì", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√É", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√°", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√Ä", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ü", "SS");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√¢", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√∫", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√Ç", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A£", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√®", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√©", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A©", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "≈Ω", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AΩ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√Æ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√á", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ß", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Aß", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ö", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A∫", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Aì", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√º", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Aº", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "LΩ", "Z");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√ ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A≈", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " ∞", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&EGRAVE;", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&EACUTE;", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ECIRC;", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&EUML;", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&AGRAVE;", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&AACUTE;", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ACUTE;", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&AUML;", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ACIRC;", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ATILDE;", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ARING;", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OCIRC;", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OTILDE;", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OSLASH;", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OGRAVE;", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OACUTE;", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OUML;", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&UACUTE;", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&UCIRC;", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&UUML;", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&CCARON;", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&CCEDIL;", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&SZLIG;", "SS");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ZCARON;", "Z");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&SCARON;", "S");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&IEXCL;", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&YUML;", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&YACUTE;", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OELIG;", "OE");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&AELIG;", "AE");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&IGRAVE;", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ICIRC;", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&IUML;", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&NTILDE;", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&IACUTE;", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&AMP;", "AND");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&DEG;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&LRM;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&SUP1;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ORDF;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ORDM;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&RDQUO;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&LDQUO;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&RSQUO;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&LSQUO;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&PLUSMN;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&NDASH;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&RAQUO;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&LAQUO;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&SUP2;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&NBSP;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&BULL;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&SHY;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&EURO;", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&QUOT;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&THORN;", "B") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ETH;", "D") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&LT;", " ") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&GT;", " ") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&YEN;", "Y") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&COPY;", "C") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&REG;", "R") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#039;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#322;", "L");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#321;", "L");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#324;", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#932;", "T");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#304;", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#919;", "H");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#269;", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#915;", "G");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#346;", "S");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#917;", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#8470;", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#281;", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#305;", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#324;", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "»", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "…", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "À", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¿", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¡", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ƒ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "÷", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "’", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "”", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ÿ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "“", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "‘", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Ÿ", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "⁄", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "‹", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "€", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "U", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Ã", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Õ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Œ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "œ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "›", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ü", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "«", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "L", "L");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ﬂ", "SS");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "é", "Z");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "S", "S");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "$", "S");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "?", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "N", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "—", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "C", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "C±", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "–", "TH");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "∆", "AE");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "å", "OE");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "?", "BI");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "?", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "???", "SKV");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "?", "K");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "?", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "IUML;", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "EGRAVE;", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "EACUTE;", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "UUML;", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "UACUTE;", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ORDM;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AMP;", " AND ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "#039;", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "#324;", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "#346;", "S");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "346;", "S");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "OUML;", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AACUTE; ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AUML;", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ARING;", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ATILDE;", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "OACUTE;", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CCEDIL;", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, 'Ü', " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, '£', " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, 'Æ', " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, 'î', " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ë", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ï", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ã", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "õ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "∏", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, '"', " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ª", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "´", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "!", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "?", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "|", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "[", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "]", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "<", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "\_", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "=", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "*", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "+", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "`", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "(", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, ")", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "∞", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "™", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "∫", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, ">", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, ",", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, ":", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "®", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "'", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "\\", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "/", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ø", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "@", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "°", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "^", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¬∑", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¬§", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¬Ω", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√â", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√à", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "∑", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "§", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Ω", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "â", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "à", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "©", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "í", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¥", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¨", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "•", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ä", "S");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "≥", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "á", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ó", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Ø", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "≠", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¢", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Ñ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¶", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ºò", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ò", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ò ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "º", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "A", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "≈", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "¬", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "√", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Ç", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Ö", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " & 39 ", " ");

UPDATE geo_temp_union SET address2 = REPLACE(address2, " ;", " ");

UPDATE geo_temp_union SET address2 = REPLACE(address2, "&EGRAVE ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&EACUTE ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ECIRC ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&EUML ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&AGRAVE ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&AACUTE ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ACUTE ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&AUML ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ACIRC ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ATILDE ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ARING ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OCIRC ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OTILDE ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OSLASH ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OGRAVE ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OACUTE ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OUML ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&UACUTE ", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&UCIRC ", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&UUML ", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&CCARON ", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&CCEDIL ", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&SZLIG ", "SS");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ZCARON ", "Z");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&SCARON ", "S");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&IEXCL ", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&YUML ", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&YACUTE ", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&OELIG ", "OE");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&AELIG ", "AE");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&IGRAVE ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ICIRC ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&IUML ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&NTILDE ", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&IACUTE ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&AMP ", "AND");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&DEG ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&LRM ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&SUP1 ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ORDF ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&ORDM ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&RDQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&LDQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&RSQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&LSQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&PLUSMN ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&NDASH ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&RAQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&LAQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&SUP2 ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&NBSP ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&BULL ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&SHY ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&EURO ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&QUOT ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#039 ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#322 ", "L");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#321 ", "L");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#324 ", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#932 ", "T");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#304 ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#919 ", "H");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#269 ", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#915 ", "G");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#346 ", "S");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#917 ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#8470 ", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#281 ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "&#305 ", "I");


UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND EACUTE ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ECIRC ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND EUML ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND AACUTE ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ACUTE ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND AUML ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ACIRC ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ATILDE ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ARING ", "A");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND OCIRC ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND OTILDE ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND OSLASH ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND OACUTE ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND OUML ", "O");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND UACUTE ", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND UCIRC ", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND UUML ", "U");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND CCARON ", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND SCARON ", "S");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND YUML ", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND OELIG ", "OE");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND AELIG ", "AE");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ICIRC ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND IUML ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND NTILDE ", "N");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND IACUTE ", "I");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND AMP ", "AND");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND DEG ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND LRM ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND SUP1 ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ORDF ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ORDM ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND RDQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND LDQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND RSQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND LSQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND NDASH ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND RAQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND LAQUO ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND SUP2 ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND NBSP ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND BULL ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND SHY ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND EURO ", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND QUOT ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND THORN ", "B") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ETH ", "D") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND LT ", " ") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND GT ", " ") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND COPY ", "C") ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND REG ", "R") ;

UPDATE geo_temp_union SET address2 = REPLACE(address2, "∂", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ß", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "É", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "Ä", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "\%", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "~", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ô", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "±", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "æ", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ì", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ú", "E");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "π", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "≤", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "-", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, ".", " ");

/* MODIFICATION REPLACE SPECIALE ADDRESS2 */
UPDATE geo_temp_union SET address2 = REPLACE(address2, "FIRST", "1ST ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "SECOND", "2ND ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "THIRD", "3RD ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "SAINTE ", "STE ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "SAINT ", "ST ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ROAD", "RD");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "STREET", "STR");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "STRASSE", "STR");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "DERECHA", "DCHA");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "IZQUIERDA", "IZQ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "DISTRICT", "DC");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CHEMIN", "CHM");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "RESIDENCE", "RES");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "IMMEUBLE", "IMM");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVENIDA", "AVDA");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "APARTADO", "APDO");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "APARTAMENTO", "APTO");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BULVARI", "BVD");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BUILDING", "BLDG");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CENTER", "CTR");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CENTRO", "CTR");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CENTRE", "CTR");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " CTRE ", " CTR ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " ZTR ", " CTR ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CENTRUM", "CTR");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ZENTRUM", "CTR");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CENTRALE", "CTR");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CENTRAL", "CTR");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CLINIC", "CLC");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CLCAL", "CLC");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "CLCA", "CLC");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "KLINIKKEN", "KLK");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "KLINIKK", "KLK");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "KLINIK", "KLK");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "DEPARTEMENT", "DPT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "DEPARTMENT", "DPT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "DIPARTIMENTO", "DPT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BATIMENT", "BAT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "OFFICE", "OFF");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "DU GENERAL", "DU GAL");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "LE GENERAL", "LE GAL");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "DU GEN ", "DU GAL ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "LE GEN ", "LE GAL ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "COMMANDANT", "CDT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "MARECHAL", "MAL");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "PRESIDENT", "PRES");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "LIEUTENANT", "LT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "LIMITED", "LTD");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "COLONEL", "CL");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ROUTE", "RTE");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "PLACE", "PL");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "PLATZ", "PL");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "PLAZA", "PL");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "SQUARE", "SQ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "FLOOR", "FL");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BLOCK ", "BLK ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " BLOCK", " BLK");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BLOK ", "BLK ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, " BLOK", " BLK");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "APARTEMENT", "APT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "APPARTEMENT", "APT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "APARTMENT", "APT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "APPARTMENT", "APT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "APPT", "APT");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "FAUBOURG", "FB");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "UNIVERSITY", "UNIV");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "UNIVERSITE", "UNIV");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "UNIVERSITI", "UNIV");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ASSOCIATION", "ASS");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "SOCIETE", "SC");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "SOCIETY", "SC");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "HOSPITAL", "HOP");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "HOPITAL", "HOP");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "DRIVE", "DR");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "SANS ADRESSE", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ADRESSE", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "NO ADDRESS", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ADDRESS", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ZIP CODE", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ZIPCODE", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "EXAMPLE", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "EXEMPLE", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ERROR", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "ERREUR", "");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "NO ", "N ");

/* SUPPRESSION address2 */
UPDATE geo_temp_union SET address2 ="" where address2 ="PTDR" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="NPAI" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="NAME" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="CP" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="NONE" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="CITY" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="PASS" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="PASS 1" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="PASS 2" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="PASS 3" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="PASS 4" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="PASS 5" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="NULL" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="LOL" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="TEST" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="ERR" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="XXXXX" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="XXXX" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="XXX" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="XX" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="X" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="0" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="NULL" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="NO" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="VILLE" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="NA" ;
UPDATE geo_temp_union SET address2 ="" where address2 ="N A" ;
UPDATE geo_temp_union SET address2= "" where address2 = "PAYS" ;

UPDATE geo_temp_union SET address2 = "" where address2 = " " ;
UPDATE geo_temp_union SET address2 = "" where address2 = "OTHERS" ;
UPDATE geo_temp_union SET address2 = "" where address2 = "NSP" ;

UPDATE geo_temp_union SET address2 = REPLACE(address2, "&", " AND ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "#", " ");

UPDATE geo_temp_union SET address2 = "" where address2 like "%e+%" ;

UPDATE geo_temp_union SET address2 = REPLACE(address2, "   ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "  ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "   ", " ");
UPDATE geo_temp_union SET address2 = REPLACE(address2, "  ", " ");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET address2 = SUBSTR(address2, 2 ) where address2 like " %" ;

/* MODIFICATION REPLACE ADDRESS3 */
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AAÇ¨U", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AAÇ¨A", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ÖAEí", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A¬ÄZ", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "N¬∞", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ÑEOE", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A ¨A¢", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬®", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AÉ¬®", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬©", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ÉEÜ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A AΩ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬≥", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬Äå", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬Ä", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬∂", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬¥", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬∫", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É≈ì", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬º", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ÉAEí", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬°", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬†", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬§", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬£", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬ß", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬Ø", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É¬≠", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A¬ÄZ", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√£¬©", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AÉA", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A¬±", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A¬¥", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A≈ì", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ºì", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Aºì", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AA ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ä", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¬™", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ì", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√É", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√°", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√Ä", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ü", "SS");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√¢", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√∫", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√Ç", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A£", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√®", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√©", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A©", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "≈Ω", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AΩ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√Æ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√á", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ß", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Aß", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ö", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A∫", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Aì", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√º", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Aº", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "LΩ", "Z");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√ ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A≈", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " ∞", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&EGRAVE;", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&EACUTE;", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ECIRC;", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&EUML;", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&AGRAVE;", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&AACUTE;", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ACUTE;", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&AUML;", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ACIRC;", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ATILDE;", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ARING;", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OCIRC;", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OTILDE;", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OSLASH;", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OGRAVE;", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OACUTE;", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OUML;", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&UACUTE;", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&UCIRC;", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&UUML;", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&CCARON;", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&CCEDIL;", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&SZLIG;", "SS");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ZCARON;", "Z");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&SCARON;", "S");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&IEXCL;", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&YUML;", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&YACUTE;", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OELIG;", "OE");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&AELIG;", "AE");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&IGRAVE;", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ICIRC;", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&IUML;", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&NTILDE;", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&IACUTE;", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&AMP;", "AND");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&DEG;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&LRM;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&SUP1;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ORDF;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ORDM;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&RDQUO;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&LDQUO;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&RSQUO;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&LSQUO;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&PLUSMN;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&NDASH;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&RAQUO;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&LAQUO;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&SUP2;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&NBSP;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&BULL;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&SHY;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&EURO;", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&QUOT;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&THORN;", "B") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ETH;", "D") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&LT;", " ") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&GT;", " ") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&YEN;", "Y") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&COPY;", "C") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&REG;", "R") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#039;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#322;", "L");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#321;", "L");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#324;", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#932;", "T");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#304;", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#919;", "H");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#269;", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#915;", "G");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#346;", "S");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#917;", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#8470;", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#281;", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#305;", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#324;", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "»", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "…", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "À", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¿", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¡", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ƒ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "÷", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "’", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "”", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ÿ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "“", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "‘", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Ÿ", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "⁄", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "‹", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "€", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "U", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Ã", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Õ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Œ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "œ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "›", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ü", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "«", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "L", "L");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ﬂ", "SS");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "é", "Z");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "S", "S");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "$", "S");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "?", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "N", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "—", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "C", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "C±", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "–", "TH");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "∆", "AE");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "å", "OE");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "?", "BI");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "?", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "???", "SKV");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "?", "K");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "?", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "IUML;", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "EGRAVE;", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "EACUTE;", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "UUML;", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "UACUTE;", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ORDM;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AMP;", " AND ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "#039;", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "#324;", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "#346;", "S");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "346;", "S");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "OUML;", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AACUTE; ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AUML;", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ARING;", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ATILDE;", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "OACUTE;", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CCEDIL;", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, 'Ü', " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, '£', " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, 'Æ', " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, 'î', " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ë", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ï", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ã", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "õ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "∏", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, '"', " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ª", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "´", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "!", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "?", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "|", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "[", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "]", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "<", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "\_", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "=", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "*", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "+", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "`", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "(", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, ")", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "∞", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "™", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "∫", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, ">", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, ",", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, ":", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "®", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "'", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "\\", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "/", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ø", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "@", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "°", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "^", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¬∑", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¬§", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¬Ω", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√â", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√à", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "∑", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "§", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Ω", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "â", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "à", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "©", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "í", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¥", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¨", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "•", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ä", "S");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "≥", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "á", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ó", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Ø", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "≠", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¢", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Ñ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¶", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ºò", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ò", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ò ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "º", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "A", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "≈", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "¬", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "√", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Ç", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Ö", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " & 39 ", " ");

UPDATE geo_temp_union SET address3 = REPLACE(address3, " ;", " ");

UPDATE geo_temp_union SET address3 = REPLACE(address3, "&EGRAVE ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&EACUTE ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ECIRC ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&EUML ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&AGRAVE ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&AACUTE ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ACUTE ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&AUML ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ACIRC ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ATILDE ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ARING ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OCIRC ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OTILDE ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OSLASH ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OGRAVE ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OACUTE ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OUML ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&UACUTE ", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&UCIRC ", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&UUML ", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&CCARON ", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&CCEDIL ", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&SZLIG ", "SS");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ZCARON ", "Z");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&SCARON ", "S");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&IEXCL ", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&YUML ", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&YACUTE ", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&OELIG ", "OE");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&AELIG ", "AE");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&IGRAVE ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ICIRC ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&IUML ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&NTILDE ", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&IACUTE ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&AMP ", "AND");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&DEG ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&LRM ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&SUP1 ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ORDF ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&ORDM ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&RDQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&LDQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&RSQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&LSQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&PLUSMN ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&NDASH ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&RAQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&LAQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&SUP2 ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&NBSP ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&BULL ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&SHY ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&EURO ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&QUOT ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#039 ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#322 ", "L");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#321 ", "L");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#324 ", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#932 ", "T");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#304 ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#919 ", "H");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#269 ", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#915 ", "G");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#346 ", "S");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#917 ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#8470 ", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#281 ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "&#305 ", "I");


UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND EACUTE ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ECIRC ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND EUML ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND AACUTE ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ACUTE ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND AUML ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ACIRC ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ATILDE ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ARING ", "A");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND OCIRC ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND OTILDE ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND OSLASH ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND OACUTE ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND OUML ", "O");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND UACUTE ", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND UCIRC ", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND UUML ", "U");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND CCARON ", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND SCARON ", "S");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND YUML ", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND OELIG ", "OE");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND AELIG ", "AE");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ICIRC ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND IUML ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND NTILDE ", "N");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND IACUTE ", "I");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND AMP ", "AND");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND DEG ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND LRM ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND SUP1 ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ORDF ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ORDM ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND RDQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND LDQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND RSQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND LSQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND NDASH ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND RAQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND LAQUO ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND SUP2 ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND NBSP ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND BULL ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND SHY ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND EURO ", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND QUOT ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND THORN ", "B") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ETH ", "D") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND LT ", " ") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND GT ", " ") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND COPY ", "C") ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND REG ", "R") ;

UPDATE geo_temp_union SET address3 = REPLACE(address3, "∂", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ß", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "É", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "Ä", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "\%", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "~", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ô", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "±", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "æ", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ì", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ú", "E");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "π", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "≤", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "-", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, ".", " ");

/* MODIFICATION REPLACE SPECIALE ADDRESS3 */
UPDATE geo_temp_union SET address3 = REPLACE(address3, "FIRST", "1ST ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "SECOND", "2ND ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "THIRD", "3RD ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "SAINTE ", "STE ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "SAINT ", "ST ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ROAD", "RD");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "STREET", "STR");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "STRASSE", "STR");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "DERECHA", "DCHA");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "IZQUIERDA", "IZQ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "DISTRICT", "DC");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CHEMIN", "CHM");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "RESIDENCE", "RES");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "IMMEUBLE", "IMM");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVENIDA", "AVDA");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "APARTADO", "APDO");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "APARTAMENTO", "APTO");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BULVARI", "BVD");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BUILDING", "BLDG");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CENTER", "CTR");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CENTRO", "CTR");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CENTRE", "CTR");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " CTRE ", " CTR ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " ZTR ", " CTR ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CENTRUM", "CTR");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ZENTRUM", "CTR");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CENTRALE", "CTR");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CENTRAL", "CTR");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CLINIC", "CLC");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CLCAL", "CLC");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "CLCA", "CLC");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "KLINIKKEN", "KLK");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "KLINIKK", "KLK");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "KLINIK", "KLK");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "DEPARTEMENT", "DPT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "DEPARTMENT", "DPT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "DIPARTIMENTO", "DPT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BATIMENT", "BAT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "OFFICE", "OFF");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "DU GENERAL", "DU GAL");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "LE GENERAL", "LE GAL");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "DU GEN ", "DU GAL ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "LE GEN ", "LE GAL ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "COMMANDANT", "CDT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "MARECHAL", "MAL");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "PRESIDENT", "PRES");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "LIEUTENANT", "LT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "LIMITED", "LTD");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "COLONEL", "CL");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ROUTE", "RTE");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "PLACE", "PL");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "PLATZ", "PL");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "PLAZA", "PL");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "SQUARE", "SQ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "FLOOR", "FL");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BLOCK ", "BLK ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " BLOCK", " BLK");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BLOK ", "BLK ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, " BLOK", " BLK");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "APARTEMENT", "APT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "APPARTEMENT", "APT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "APARTMENT", "APT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "APPARTMENT", "APT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "APPT", "APT");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "FAUBOURG", "FB");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "UNIVERSITY", "UNIV");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "UNIVERSITE", "UNIV");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "UNIVERSITI", "UNIV");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ASSOCIATION", "ASS");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "SOCIETE", "SC");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "SOCIETY", "SC");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "HOSPITAL", "HOP");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "HOPITAL", "HOP");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "DRIVE", "DR");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "SANS ADRESSE", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ADRESSE", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "NO ADDRESS", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ADDRESS", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ZIP CODE", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ZIPCODE", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "EXAMPLE", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "EXEMPLE", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ERROR", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "ERREUR", "");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "NO ", "N ");

/* SUPPRESSION address3 */
UPDATE geo_temp_union SET address3 ="" where address3 ="PTDR" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="NPAI" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="NAME" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="CP" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="NONE" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="CITY" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="PASS" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="PASS 1" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="PASS 2" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="PASS 3" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="PASS 4" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="PASS 5" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="LOL" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="TEST" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="ERR" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="XXXXX" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="XXXX" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="XXX" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="XX" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="X" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="0" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="NULL" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="NO" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="VILLE" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="NA" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="N A" ;
UPDATE geo_temp_union SET address3 ="" where address3 ="PAYS" ;

UPDATE geo_temp_union SET address3 = "" where address3 = " " ;
UPDATE geo_temp_union SET address3 = "" where address3 = "OTHERS" ;
UPDATE geo_temp_union SET address3 = "" where address3 = "NSP" ;

UPDATE geo_temp_union SET address3 = REPLACE(address3, "&", " AND ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "#", " ");

UPDATE geo_temp_union SET address3 = "" where address3 like "%e+%" ;

UPDATE geo_temp_union SET address3 = REPLACE(address3, "   ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "  ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "   ", " ");
UPDATE geo_temp_union SET address3 = REPLACE(address3, "  ", " ");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET address3 = SUBSTR(address3, 2 ) where address3 like " %" ;

/* address1 ET address2 ET address3 AVEC UN SEUL CARACTERE ET AUTRE CHAMP VIDE */
UPDATE geo_temp_union SET address1 = "" WHERE LENGTH( address1 ) =1 AND address2 = '' AND address3 = '' ;
UPDATE geo_temp_union SET address2 = "" WHERE LENGTH( address2 ) =1 AND address1 = '' AND address3 = '' ;
UPDATE geo_temp_union SET address3 = "" WHERE LENGTH( address3 ) =1 AND address1 = '' AND address2 = '' ;

/* MODIFICATION REPLACE POBOX */
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AAÇ¨U", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AAÇ¨A", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ÖAEí", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A¬ÄZ", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "N¬∞", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ÑEOE", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A ¨A¢", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬®", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AÉ¬®", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬©", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ÉEÜ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A AΩ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬≥", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬Äå", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬Ä", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬∂", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬¥", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬∫", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É≈ì", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬º", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ÉAEí", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬°", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬†", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬§", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬£", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬ß", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬Ø", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A¬ÄZ", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É¬≠", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AÉA", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√£¬©", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A¬±", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A¬¥", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A≈ì", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ºì", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Aºì", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AA ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ä", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¬™", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ì", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√É", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√°", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√Ä", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ü", "SS");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√¢", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√∫", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√Ç", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A£", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√®", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√©", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A©", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "≈Ω", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AΩ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√Æ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√á", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ß", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Aß", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ö", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A∫", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Aì", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√º", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Aº", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "LΩ", "Z");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√ ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A≈", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " ∞", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&EGRAVE;", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&EACUTE;", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ECIRC;", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&EUML;", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&AGRAVE;", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&AACUTE;", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ACUTE;", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&AUML;", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ACIRC;", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ATILDE;", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ARING;", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OCIRC;", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OTILDE;", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OSLASH;", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OGRAVE;", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OACUTE;", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OUML;", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&UACUTE;", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&UCIRC;", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&UUML;", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&CCARON;", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&CCEDIL;", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&SZLIG;", "SS");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ZCARON;", "Z");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&SCARON;", "S");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&IEXCL;", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&YUML;", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&YACUTE;", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OELIG;", "OE");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&AELIG;", "AE");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&IGRAVE;", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ICIRC;", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&IUML;", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&NTILDE;", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&IACUTE;", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&AMP;", "AND");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&DEG;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&LRM;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&SUP1;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ORDF;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ORDM;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&RDQUO;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&LDQUO;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&RSQUO;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&LSQUO;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&PLUSMN;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&NDASH;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&RAQUO;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&LAQUO;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&SUP2;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&NBSP;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&BULL;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&SHY;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&EURO;", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&QUOT;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&THORN;", "B") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ETH;", "D") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&LT;", " ") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&GT;", " ") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&YEN;", "Y") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&COPY;", "C") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&REG;", "R") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#039;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#322;", "L");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#321;", "L");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#324;", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#932;", "T");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#304;", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#919;", "H");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#269;", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#915;", "G");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#346;", "S");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#917;", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#8470;", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#281;", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#305;", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#324;", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "»", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "…", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "À", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¿", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¡", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ƒ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "÷", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "’", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "”", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ÿ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "“", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "‘", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Ÿ", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "⁄", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "‹", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "€", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "U", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Ã", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Õ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Œ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "œ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "›", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ü", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "«", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "L", "L");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ﬂ", "SS");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "é", "Z");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "S", "S");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "$", "S");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "?", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "N", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "—", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "C", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "C±", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "–", "TH");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "∆", "AE");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "å", "OE");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "?", "BI");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "?", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "???", "SKV");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "?", "K");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "?", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "IUML;", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "EGRAVE;", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "EACUTE;", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "UUML;", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "UACUTE;", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ORDM;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AMP;", " AND ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "#039;", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "#324;", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "#346;", "S");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "346;", "S");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "OUML;", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AACUTE; ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "AUML;", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ARING;", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ATILDE;", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "OACUTE;", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "CCEDIL;", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, 'Ü', " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, '£', " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, 'Æ', " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, 'î', " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ë", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ï", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ã", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "õ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "∏", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, '"', " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ª", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "´", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "!", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "?", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "|", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "[", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "]", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "<", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "\_", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "=", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "*", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "+", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "`", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "(", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, ")", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "∞", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "™", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "∫", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, ">", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, ",", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, ":", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "®", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "'", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "\\", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "/", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ø", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "@", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "°", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "^", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¬∑", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¬§", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¬Ω", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√â", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√à", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "∑", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "§", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Ω", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "â", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "à", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "©", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "í", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¥", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¨", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "•", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ä", "S");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "≥", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "á", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ó", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Ø", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "≠", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¢", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Ñ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¶", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ºò", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ò", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ò ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "º", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "≈", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "¬", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "√", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Ç", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Ö", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " & 39 ", " ");

UPDATE geo_temp_union SET pobox = REPLACE(pobox, " ;", " ");

UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&EGRAVE ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&EACUTE ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ECIRC ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&EUML ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&AGRAVE ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&AACUTE ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ACUTE ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&AUML ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ACIRC ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ATILDE ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ARING ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OCIRC ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OTILDE ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OSLASH ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OGRAVE ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OACUTE ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OUML ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&UACUTE ", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&UCIRC ", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&UUML ", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&CCARON ", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&CCEDIL ", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&SZLIG ", "SS");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ZCARON ", "Z");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&SCARON ", "S");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&IEXCL ", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&YUML ", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&YACUTE ", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&OELIG ", "OE");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&AELIG ", "AE");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&IGRAVE ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ICIRC ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&IUML ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&NTILDE ", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&IACUTE ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&AMP ", "AND");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&DEG ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&LRM ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&SUP1 ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ORDF ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&ORDM ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&RDQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&LDQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&RSQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&LSQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&PLUSMN ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&NDASH ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&RAQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&LAQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&SUP2 ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&NBSP ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&BULL ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&SHY ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&EURO ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&QUOT ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#039 ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#322 ", "L");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#321 ", "L");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#324 ", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#932 ", "T");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#304 ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#919 ", "H");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#269 ", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#915 ", "G");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#346 ", "S");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#917 ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#8470 ", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#281 ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&#305 ", "I");


UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND EACUTE ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND ECIRC ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND EUML ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND AACUTE ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND ACUTE ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND AUML ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND ACIRC ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND ATILDE ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND ARING ", "A");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND OCIRC ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND OTILDE ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND OSLASH ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND OACUTE ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND OUML ", "O");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND UACUTE ", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND UCIRC ", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND UUML ", "U");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND CCARON ", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND SCARON ", "S");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND YUML ", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND OELIG ", "OE");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND AELIG ", "AE");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND ICIRC ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND IUML ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND NTILDE ", "N");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND IACUTE ", "I");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND AMP ", "AND");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND DEG ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND LRM ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND SUP1 ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND ORDF ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND ORDM ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND RDQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND LDQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND RSQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND LSQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND NDASH ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND RAQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND LAQUO ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND SUP2 ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND NBSP ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND BULL ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND SHY ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND EURO ", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND QUOT ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND THORN ", "B") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND ETH ", "D") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND LT ", " ") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND GT ", " ") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND COPY ", "C") ;
UPDATE geo_temp_union SET pobox = REPLACE(pobox, " AND REG ", "R") ;

UPDATE geo_temp_union SET pobox = REPLACE(pobox, "∂", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ß", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "É", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Ä", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "\%", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "~", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ô", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "±", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "æ", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ì", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "ú", "E");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "π", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "≤", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "-", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, ".", " ");

/* MODIFICATION REPLACE pobox */
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "NO ", "N ");

/* EFFECEMENT pobox */
UPDATE geo_temp_union SET pobox ="" where pobox ="PTDR" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="NPAI" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="NAME" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="CP" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="NONE" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="CITY" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="PASS" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="PASS 1" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="PASS 2" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="PASS 3" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="PASS 4" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="PASS 5" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="NULL" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="LOL" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="TEST" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="ERR" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="XXXXX" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="XXXX" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="XXX" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="XX" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="X" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="0" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="NULL" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="NO" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="VILLE" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="9999999" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="999999" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="99999" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="9999" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="999" ;
UPDATE geo_temp_union SET pobox ="" where pobox ="PAYS" ;

UPDATE geo_temp_union SET pobox = "" where pobox = " " ;
UPDATE geo_temp_union SET pobox = "" where pobox = "OTHERS" ;
UPDATE geo_temp_union SET pobox = "" where pobox = "NSP" ;

UPDATE geo_temp_union SET pobox = REPLACE(pobox, "&", " AND ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "#", " ");

UPDATE geo_temp_union SET pobox = "" where pobox like "%e+%" ;

UPDATE geo_temp_union SET pobox = REPLACE(pobox, "   ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "  ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "   ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "  ", " ");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET pobox = SUBSTR(pobox, 2 ) where pobox like " %" ;

/* MODIFICATION REPLACE ZIPCODE */
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AAÇ¨U", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AAÇ¨A", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ÖAEí", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A¬ÄZ", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "N¬∞", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ÑEOE", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A ¨A¢", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬®", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AÉ¬®", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬©", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ÉEÜ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A AΩ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬≥", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬Äå", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬Ä", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬∂", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬¥", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬∫", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É≈ì", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬º", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ÉAEí", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬°", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬†", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬§", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬£", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬ß", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬Ø", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É¬≠", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A¬ÄZ", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√£¬©", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AÉA", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A¬±", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A¬¥", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A≈ì", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ºì", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Aºì", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AA ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ä", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¬™", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ì", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√É", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√°", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√Ä", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ü", "SS");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√¢", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√∫", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√Ç", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A£", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√®", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√©", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A©", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "≈Ω", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AΩ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√Æ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√á", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ß", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Aß", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ö", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A∫", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Aì", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√º", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Aº", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "LΩ", "Z");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√ ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A≈", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " ∞", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&EGRAVE;", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&EACUTE;", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ECIRC;", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&EUML;", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&AGRAVE;", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&AACUTE;", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ACUTE;", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&AUML;", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ACIRC;", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ATILDE;", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ARING;", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OCIRC;", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OTILDE;", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OSLASH;", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OGRAVE;", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OACUTE;", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OUML;", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&UACUTE;", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&UCIRC;", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&UUML;", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&CCARON;", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&CCEDIL;", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&SZLIG;", "SS");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ZCARON;", "Z");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&SCARON;", "S");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&IEXCL;", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&YUML;", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&YACUTE;", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OELIG;", "OE");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&AELIG;", "AE");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&IGRAVE;", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ICIRC;", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&IUML;", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&NTILDE;", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&IACUTE;", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&AMP;", "AND");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&DEG;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&LRM;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&SUP1;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ORDF;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ORDM;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&RDQUO;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&LDQUO;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&RSQUO;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&LSQUO;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&PLUSMN;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&NDASH;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&RAQUO;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&LAQUO;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&SUP2;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&NBSP;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&BULL;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&SHY;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&EURO;", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&QUOT;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&THORN;", "B") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ETH;", "D") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&LT;", " ") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&GT;", " ") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&YEN;", "Y") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&COPY;", "C") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&REG;", "R") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#039;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#322;", "L");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#321;", "L");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#324;", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#932;", "T");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#304;", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#919;", "H");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#269;", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#915;", "G");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#346;", "S");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#917;", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#8470;", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#281;", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#305;", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#324;", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "»", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "…", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "À", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¿", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¡", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ƒ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "÷", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "’", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "”", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ÿ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "“", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "‘", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Ÿ", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "⁄", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "‹", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "€", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "U", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Ã", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Õ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Œ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "œ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "›", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ü", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "«", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "L", "L");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ﬂ", "SS");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "é", "Z");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "S", "S");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "$", "S");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "?", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "N", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "—", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "C", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "C±", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "–", "TH");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "∆", "AE");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "å", "OE");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "?", "BI");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "?", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "???", "SKV");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "?", "K");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "?", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "IUML;", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "EGRAVE;", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "EACUTE;", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "UUML;", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "UACUTE;", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ORDM;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AMP;", " AND ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "#039;", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "#324;", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "#346;", "S");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "346;", "S");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "OUML;", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AACUTE; ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "AUML;", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ARING;", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ATILDE;", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "OACUTE;", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "CCEDIL;", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, 'Ü', " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, '£', " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, 'Æ', " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, 'î', " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ë", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ï", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ã", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "õ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "∏", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, '"', " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ª", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "´", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "!", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "?", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "|", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "[", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "]", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "<", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "\_", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "=", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "*", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "+", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "`", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "(", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, ")", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "∞", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "™", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "∫", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, ">", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, ",", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, ":", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "®", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "/", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "'", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "\\", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ø", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "@", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "°", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "^", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¬∑", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¬§", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¬Ω", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√â", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√à", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "∑", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "§", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Ω", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "â", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "à", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "©", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "í", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¥", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¨", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "•", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ä", "S");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "≥", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "á", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ó", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Ø", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "≠", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¢", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Ñ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¶", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ºò", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ò", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ò ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "º", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "A", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "≈", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "¬", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "√", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Ç", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Ö", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " & 39 ", " ");

UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " ;", " ");

UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&EGRAVE ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&EACUTE ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ECIRC ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&EUML ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&AGRAVE ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&AACUTE ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ACUTE ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&AUML ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ACIRC ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ATILDE ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ARING ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OCIRC ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OTILDE ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OSLASH ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OGRAVE ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OACUTE ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OUML ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&UACUTE ", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&UCIRC ", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&UUML ", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&CCARON ", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&CCEDIL ", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&SZLIG ", "SS");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ZCARON ", "Z");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&SCARON ", "S");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&IEXCL ", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&YUML ", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&YACUTE ", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&OELIG ", "OE");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&AELIG ", "AE");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&IGRAVE ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ICIRC ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&IUML ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&NTILDE ", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&IACUTE ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&AMP ", "AND");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&DEG ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&LRM ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&SUP1 ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ORDF ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&ORDM ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&RDQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&LDQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&RSQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&LSQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&PLUSMN ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&NDASH ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&RAQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&LAQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&SUP2 ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&NBSP ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&BULL ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&SHY ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&EURO ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&QUOT ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#039 ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#322 ", "L");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#321 ", "L");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#324 ", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#932 ", "T");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#304 ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#919 ", "H");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#269 ", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#915 ", "G");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#346 ", "S");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#917 ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#8470 ", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#281 ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&#305 ", "I");


UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND EACUTE ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND ECIRC ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND EUML ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND AACUTE ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND ACUTE ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND AUML ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND ACIRC ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND ATILDE ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND ARING ", "A");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND OCIRC ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND OTILDE ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND OSLASH ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND OACUTE ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND OUML ", "O");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND UACUTE ", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND UCIRC ", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND UUML ", "U");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND CCARON ", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND SCARON ", "S");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND YUML ", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND OELIG ", "OE");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND AELIG ", "AE");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND ICIRC ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND IUML ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND NTILDE ", "N");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND IACUTE ", "I");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND AMP ", "AND");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND DEG ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND LRM ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND SUP1 ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND ORDF ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND ORDM ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND RDQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND LDQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND RSQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND LSQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND NDASH ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND RAQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND LAQUO ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND SUP2 ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND NBSP ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND BULL ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND SHY ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND EURO ", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND QUOT ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND THORN ", "B") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND ETH ", "D") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND LT ", " ") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND GT ", " ") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND COPY ", "C") ;
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, " AND REG ", "R") ;

UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "∂", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ß", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "É", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "Ä", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "\%", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "~", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ô", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "±", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "æ", "");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ì", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ú", "E");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "π", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "≤", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "-", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, ".", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "   ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "  ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "   ", " ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "  ", " ");

/* MODIFICATION REPLACE SPECIALE zipcode */
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "ZIP", "");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "NO ", "N ");

/* SUPPRESSION zipcode */
UPDATE geo_temp_union SET zipcode ="" where zipcode ="PTDR" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="NPAI" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="NAME" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="CP" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="NONE" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="CITY" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="PASS" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="PASS 1" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="PASS 2" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="PASS 3" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="PASS 4" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="PASS 5" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="NULL" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="LOL" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="TEST" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="ERR" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="XXXXX" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="XXXX" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="XXX" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="XX" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="X" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="0" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="NULL" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="NO" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="VILLE" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="9999999" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="999999" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="99999" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="9999" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="999" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="0000000" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="000000" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="00000" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="0000" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="000" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="00" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="0" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="1" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="2" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="3" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="4" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="5" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="6" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="7" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="8" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="9" ;
UPDATE geo_temp_union SET zipcode ="" where zipcode ="PAYS" ;

UPDATE geo_temp_union SET zipcode = "" where zipcode = " " ;
UPDATE geo_temp_union SET zipcode = "" where zipcode = "OTHERS" ;
UPDATE geo_temp_union SET zipcode = "" where zipcode = "NSP" ;

UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "&", " AND ");
UPDATE geo_temp_union SET zipcode = REPLACE(zipcode, "#", " ");

UPDATE geo_temp_union SET zipcode = "" where zipcode like "%e+%" ;

UPDATE geo_temp_union SET pobox = REPLACE(pobox, "   ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "  ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "   ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "  ", " ");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET zipcode = SUBSTR(zipcode, 2 ) where zipcode like " %" ;

/* MODIFICATION REPLACE CITY */
UPDATE geo_temp_union SET city = REPLACE(city, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET city = REPLACE(city, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "AAÇ¨U", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "AAÇ¨A", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "√ÖAEí", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "A¬ÄZ", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "N¬∞", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET city = REPLACE(city, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET city = REPLACE(city, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "√ÑEOE", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "A ¨A¢", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬®", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "AÉ¬®", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬©", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "√ÉEÜ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "A AΩ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬≥", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬Äå", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬Ä", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬∂", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬¥", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬∫", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "√É≈ì", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬º", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "√ÉAEí", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬°", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬†", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬§", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬£", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬ß", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬Ø", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "√É¬≠", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "A¬ÄZ", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "√£¬©", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "AÉA", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "A¬±", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "A¬¥", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "A≈ì", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "√ºì", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "Aºì", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "AA ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "√ä", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "¬™", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√ì", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√É", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√°", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√Ä", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√ü", "SS");
UPDATE geo_temp_union SET city = REPLACE(city, "√¢", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√∫", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√Ç", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "A£", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√®", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "√©", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "A©", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "≈Ω", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "AΩ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "√Æ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "√á", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "√ß", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "Aß", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "√ö", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "A∫", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "Aì", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "√º", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "Aº", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "LΩ", "Z");
UPDATE geo_temp_union SET city = REPLACE(city, "√ ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "A≈", "A");
UPDATE geo_temp_union SET city = REPLACE(city, " ∞", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&EGRAVE;", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&EACUTE;", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&ECIRC;", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&EUML;", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&AGRAVE;", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&AACUTE;", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&ACUTE;", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&AUML;", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&ACIRC;", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&ATILDE;", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&ARING;", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&OCIRC;", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&OTILDE;", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&OSLASH;", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&OGRAVE;", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&OACUTE;", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&OUML;", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&UACUTE;", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "&UCIRC;", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "&UUML;", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "&CCARON;", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "&CCEDIL;", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "&SZLIG;", "SS");
UPDATE geo_temp_union SET city = REPLACE(city, "&ZCARON;", "Z");
UPDATE geo_temp_union SET city = REPLACE(city, "&SCARON;", "S");
UPDATE geo_temp_union SET city = REPLACE(city, "&IEXCL;", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, "&YUML;", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, "&YACUTE;", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, "&OELIG;", "OE");
UPDATE geo_temp_union SET city = REPLACE(city, "&AELIG;", "AE");
UPDATE geo_temp_union SET city = REPLACE(city, "&IGRAVE;", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&ICIRC;", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&IUML;", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&NTILDE;", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "&IACUTE;", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&AMP;", "AND");
UPDATE geo_temp_union SET city = REPLACE(city, "&DEG;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&LRM;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&SUP1;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&ORDF;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&ORDM;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&RDQUO;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&LDQUO;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&RSQUO;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&LSQUO;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&PLUSMN;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&NDASH;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&RAQUO;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&LAQUO;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&SUP2;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&NBSP;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&BULL;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&SHY;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&EURO;", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&QUOT;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&THORN;", "B") ;
UPDATE geo_temp_union SET city = REPLACE(city, "&ETH;", "D") ;
UPDATE geo_temp_union SET city = REPLACE(city, "&LT;", " ") ;
UPDATE geo_temp_union SET city = REPLACE(city, "&GT;", " ") ;
UPDATE geo_temp_union SET city = REPLACE(city, "&YEN;", "Y") ;
UPDATE geo_temp_union SET city = REPLACE(city, "&COPY;", "C") ;
UPDATE geo_temp_union SET city = REPLACE(city, "&REG;", "R") ;
UPDATE geo_temp_union SET city = REPLACE(city, "&#039;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&#322;", "L");
UPDATE geo_temp_union SET city = REPLACE(city, "&#321;", "L");
UPDATE geo_temp_union SET city = REPLACE(city, "&#324;", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "&#932;", "T");
UPDATE geo_temp_union SET city = REPLACE(city, "&#304;", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&#919;", "H");
UPDATE geo_temp_union SET city = REPLACE(city, "&#269;", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "&#915;", "G");
UPDATE geo_temp_union SET city = REPLACE(city, "&#346;", "S");
UPDATE geo_temp_union SET city = REPLACE(city, "&#917;", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&#8470;", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "&#281;", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&#305;", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&#324;", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "»", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "…", "E");
UPDATE geo_temp_union SET city = REPLACE(city, " ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "À", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "¿", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "¡", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "ƒ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "÷", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "’", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "”", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "ÿ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "“", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "‘", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "Ÿ", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "⁄", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "‹", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "€", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "U", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "Ã", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "Õ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "Œ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "œ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "›", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, "ü", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, "«", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "L", "L");
UPDATE geo_temp_union SET city = REPLACE(city, "ﬂ", "SS");
UPDATE geo_temp_union SET city = REPLACE(city, "é", "Z");
UPDATE geo_temp_union SET city = REPLACE(city, "S", "S");
UPDATE geo_temp_union SET city = REPLACE(city, "$", "S");
UPDATE geo_temp_union SET city = REPLACE(city, "?", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "N", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "—", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "C", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "C±", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "–", "TH");
UPDATE geo_temp_union SET city = REPLACE(city, "∆", "AE");
UPDATE geo_temp_union SET city = REPLACE(city, "å", "OE");
UPDATE geo_temp_union SET city = REPLACE(city, "?", "BI");
UPDATE geo_temp_union SET city = REPLACE(city, "?", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "???", "SKV");
UPDATE geo_temp_union SET city = REPLACE(city, "?", "K");
UPDATE geo_temp_union SET city = REPLACE(city, "?", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "IUML;", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "EGRAVE;", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "EACUTE;", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "UUML;", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "UACUTE;", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "ORDM;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET city = REPLACE(city, "AMP;", " AND ");
UPDATE geo_temp_union SET city = REPLACE(city, "#039;", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "#324;", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "#346;", "S");
UPDATE geo_temp_union SET city = REPLACE(city, "346;", "S");
UPDATE geo_temp_union SET city = REPLACE(city, "OUML;", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "AACUTE; ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "AUML;", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "ARING;", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "ATILDE;", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "OACUTE;", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "CCEDIL;", "C");
UPDATE geo_temp_union SET city = REPLACE(city, 'Ü', " ");
UPDATE geo_temp_union SET city = REPLACE(city, '£', " ");
UPDATE geo_temp_union SET city = REPLACE(city, 'Æ', " ");
UPDATE geo_temp_union SET city = REPLACE(city, 'î', " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ë", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ï", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ã", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "õ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "∏", " ");
UPDATE geo_temp_union SET city = REPLACE(city, '"', " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ª", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "´", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "!", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "?", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "|", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "[", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "]", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "<", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "\_", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "=", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "*", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "+", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "`", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "(", " ");
UPDATE geo_temp_union SET city = REPLACE(city, ")", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "∞", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "™", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "∫", " ");
UPDATE geo_temp_union SET city = REPLACE(city, ">", " ");
UPDATE geo_temp_union SET city = REPLACE(city, ",", " ");
UPDATE geo_temp_union SET city = REPLACE(city, ":", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "®", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "/", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "'", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "\\", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ø", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "@", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "°", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "^", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "¬∑", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "¬§", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "¬Ω", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "√â", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "√à", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "∑", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "§", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "Ω", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "â", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "à", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "©", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "í", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "¥", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "¨", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "•", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, "ä", "S");
UPDATE geo_temp_union SET city = REPLACE(city, "≥", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "á", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ó", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "Ø", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "≠", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "¢", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "Ñ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "¶", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ºò", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ò", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ò ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "º", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "A", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "≈", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "¬", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "√", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "Ç", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "Ö", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " & 39 ", " ");

UPDATE geo_temp_union SET city = REPLACE(city, " ;", " ");

UPDATE geo_temp_union SET city = REPLACE(city, "&EGRAVE ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&EACUTE ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&ECIRC ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&EUML ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&AGRAVE ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&AACUTE ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&ACUTE ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&AUML ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&ACIRC ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&ATILDE ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&ARING ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, "&OCIRC ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&OTILDE ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&OSLASH ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&OGRAVE ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&OACUTE ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&OUML ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, "&UACUTE ", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "&UCIRC ", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "&UUML ", "U");
UPDATE geo_temp_union SET city = REPLACE(city, "&CCARON ", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "&CCEDIL ", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "&SZLIG ", "SS");
UPDATE geo_temp_union SET city = REPLACE(city, "&ZCARON ", "Z");
UPDATE geo_temp_union SET city = REPLACE(city, "&SCARON ", "S");
UPDATE geo_temp_union SET city = REPLACE(city, "&IEXCL ", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, "&YUML ", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, "&YACUTE ", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, "&OELIG ", "OE");
UPDATE geo_temp_union SET city = REPLACE(city, "&AELIG ", "AE");
UPDATE geo_temp_union SET city = REPLACE(city, "&IGRAVE ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&ICIRC ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&IUML ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&NTILDE ", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "&IACUTE ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&AMP ", "AND");
UPDATE geo_temp_union SET city = REPLACE(city, "&DEG ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&LRM ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&SUP1 ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&ORDF ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&ORDM ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&RDQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&LDQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&RSQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&LSQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&PLUSMN ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&NDASH ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&RAQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&LAQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&SUP2 ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&NBSP ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&BULL ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&SHY ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&EURO ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&QUOT ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&#039 ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "&#322 ", "L");
UPDATE geo_temp_union SET city = REPLACE(city, "&#321 ", "L");
UPDATE geo_temp_union SET city = REPLACE(city, "&#324 ", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "&#932 ", "T");
UPDATE geo_temp_union SET city = REPLACE(city, "&#304 ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, "&#919 ", "H");
UPDATE geo_temp_union SET city = REPLACE(city, "&#269 ", "C");
UPDATE geo_temp_union SET city = REPLACE(city, "&#915 ", "G");
UPDATE geo_temp_union SET city = REPLACE(city, "&#346 ", "S");
UPDATE geo_temp_union SET city = REPLACE(city, "&#917 ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&#8470 ", "N");
UPDATE geo_temp_union SET city = REPLACE(city, "&#281 ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "&#305 ", "I");


UPDATE geo_temp_union SET city = REPLACE(city, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, " AND EACUTE ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, " AND ECIRC ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, " AND EUML ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, " AND AACUTE ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, " AND ACUTE ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, " AND AUML ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, " AND ACIRC ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, " AND ATILDE ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, " AND ARING ", "A");
UPDATE geo_temp_union SET city = REPLACE(city, " AND OCIRC ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, " AND OTILDE ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, " AND OSLASH ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, " AND OACUTE ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, " AND OUML ", "O");
UPDATE geo_temp_union SET city = REPLACE(city, " AND UACUTE ", "U");
UPDATE geo_temp_union SET city = REPLACE(city, " AND UCIRC ", "U");
UPDATE geo_temp_union SET city = REPLACE(city, " AND UUML ", "U");
UPDATE geo_temp_union SET city = REPLACE(city, " AND CCARON ", "C");
UPDATE geo_temp_union SET city = REPLACE(city, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET city = REPLACE(city, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET city = REPLACE(city, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET city = REPLACE(city, " AND SCARON ", "S");
UPDATE geo_temp_union SET city = REPLACE(city, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, " AND YUML ", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET city = REPLACE(city, " AND OELIG ", "OE");
UPDATE geo_temp_union SET city = REPLACE(city, " AND AELIG ", "AE");
UPDATE geo_temp_union SET city = REPLACE(city, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, " AND ICIRC ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, " AND IUML ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, " AND NTILDE ", "N");
UPDATE geo_temp_union SET city = REPLACE(city, " AND IACUTE ", "I");
UPDATE geo_temp_union SET city = REPLACE(city, " AND AMP ", "AND");
UPDATE geo_temp_union SET city = REPLACE(city, " AND DEG ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND LRM ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND SUP1 ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND ORDF ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND ORDM ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND RDQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND LDQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND RSQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND LSQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND NDASH ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND RAQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND LAQUO ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND SUP2 ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND NBSP ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND BULL ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND SHY ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND EURO ", "E");
UPDATE geo_temp_union SET city = REPLACE(city, " AND QUOT ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, " AND THORN ", "B") ;
UPDATE geo_temp_union SET city = REPLACE(city, " AND ETH ", "D") ;
UPDATE geo_temp_union SET city = REPLACE(city, " AND LT ", " ") ;
UPDATE geo_temp_union SET city = REPLACE(city, " AND GT ", " ") ;
UPDATE geo_temp_union SET city = REPLACE(city, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET city = REPLACE(city, " AND COPY ", "C") ;
UPDATE geo_temp_union SET city = REPLACE(city, " AND REG ", "R") ;

UPDATE geo_temp_union SET city = REPLACE(city, "∂", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ß", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "É", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "Ä", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "\%", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "~", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ô", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "±", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "æ", "");
UPDATE geo_temp_union SET city = REPLACE(city, "ì", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "ú", "E");
UPDATE geo_temp_union SET city = REPLACE(city, "π", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "≤", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "-", " ");
UPDATE geo_temp_union SET city = REPLACE(city, ".", " ");

UPDATE geo_temp_union SET city = REPLACE(city, "CEDEX", "") WHERE city like "%CEDEX%" and city not like "%1%" and city not like "%2%" and city not like "%3%" and city not like "%4%" and city not like "%5%" and city not like "%6%" and city not like "%7%" and city not like "%8%" and city not like "%9%" and city not like "%0%" ;

/* SUPPRESSION city */
UPDATE geo_temp_union SET city ="" where city ="PTDR" ;
UPDATE geo_temp_union SET city ="" where city ="NPAI" ;
UPDATE geo_temp_union SET city ="" where city ="NAME" ;
UPDATE geo_temp_union SET city ="" where city ="CP" ;
UPDATE geo_temp_union SET city ="" where city ="NONE" ;
UPDATE geo_temp_union SET city ="" where city ="CITY" ;
UPDATE geo_temp_union SET city ="" where city ="PASS" ;
UPDATE geo_temp_union SET city ="" where city ="PASS 1" ;
UPDATE geo_temp_union SET city ="" where city ="PASS 2" ;
UPDATE geo_temp_union SET city ="" where city ="PASS 3" ;
UPDATE geo_temp_union SET city ="" where city ="PASS 4" ;
UPDATE geo_temp_union SET city ="" where city ="PASS 5" ;
UPDATE geo_temp_union SET city ="" where city ="NULL" ;
UPDATE geo_temp_union SET city ="" where city ="LOL" ;
UPDATE geo_temp_union SET city ="" where city ="TEST" ;
UPDATE geo_temp_union SET city ="" where city ="ERR" ;
UPDATE geo_temp_union SET city ="" where city ="XXXXX" ;
UPDATE geo_temp_union SET city ="" where city ="XXXX" ;
UPDATE geo_temp_union SET city ="" where city ="XXX" ;
UPDATE geo_temp_union SET city ="" where city ="XX" ;
UPDATE geo_temp_union SET city ="" where city ="X" ;
UPDATE geo_temp_union SET city ="" where city ="0" ;
UPDATE geo_temp_union SET city ="" where city ="NULL" ;
UPDATE geo_temp_union SET city ="" where city ="NO" ;
UPDATE geo_temp_union SET city ="" where city ="VILLE" ;
UPDATE geo_temp_union SET city ="" where city ="SANS ADRESSE" ;
UPDATE geo_temp_union SET city ="" where city ="PAYS" ;

UPDATE geo_temp_union SET city = "" where city = " " ;
UPDATE geo_temp_union SET city = "" where city = "OTHERS" ;
UPDATE geo_temp_union SET city = "" where city = "NSP" ;

UPDATE geo_temp_union SET city = REPLACE(city, "&", " AND ");
UPDATE geo_temp_union SET city = REPLACE(city, "#", " ");

UPDATE geo_temp_union SET city = "" where city like "%e+%" ;

UPDATE geo_temp_union SET city = REPLACE(city, "   ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "  ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "   ", " ");
UPDATE geo_temp_union SET city = REPLACE(city, "  ", " ");

/* SANS LETTRE */
UPDATE geo_temp_union SET city = ""
WHERE (city not like "%A%" AND city not like "%B%" AND city not like "%C%" AND city not like "%D%" AND city not like "%E%" AND city not like "%F%" AND city not like "%G%" AND city not like "%H%" AND city not like "%I%" AND city not like "%J%" AND city not like "%K%" AND city not like "%L%" AND city not like "%M%" AND city not like "%N%" AND city not like "%O%" AND city not like "%P%" AND city not like "%Q%" AND city not like "%R%" AND city not like "%S%" AND city not like "%T%" AND city not like "%U%" AND city not like "%V%" AND city not like "%W%" AND city not like "%X%" AND city not like "%Y%" AND city not like "%Z%");

/* UN SEUL CARACTERE */
UPDATE geo_temp_union SET city = "" WHERE LENGTH( city ) = 1 ;

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET city = SUBSTR(city, 2 ) where city like " %" ;

/* MODIFICATION REPLACE STATE */
UPDATE geo_temp_union SET state = REPLACE(state, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET state = REPLACE(state, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "AAÇ¨U", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "AAÇ¨A", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "√ÖAEí", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "A¬ÄZ", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "N¬∞", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET state = REPLACE(state, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET state = REPLACE(state, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "√ÑEOE", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "A ¨A¢", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬®", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "AÉ¬®", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬©", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "√ÉEÜ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "A AΩ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬≥", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬Äå", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬Ä", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬∂", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬¥", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬∫", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "√É≈ì", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬º", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "√ÉAEí", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬°", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬†", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬§", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬£", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬ß", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬Ø", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "√É¬≠", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "A¬ÄZ", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "√£¬©", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "AÉA", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "A¬±", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "A¬¥", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "A≈ì", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "√ºì", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "Aºì", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "AA ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "√ä", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "¬™", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√ì", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√É", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√°", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√Ä", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√ü", "SS");
UPDATE geo_temp_union SET state = REPLACE(state, "√¢", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√∫", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√Ç", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "A£", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√®", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "√©", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "A©", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "≈Ω", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "AΩ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "√Æ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "√á", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "√ß", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "Aß", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "√ö", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "A∫", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "Aì", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "√º", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "Aº", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "LΩ", "Z");
UPDATE geo_temp_union SET state = REPLACE(state, "√ ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "A≈", "A");
UPDATE geo_temp_union SET state = REPLACE(state, " ∞", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&EGRAVE;", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&EACUTE;", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&ECIRC;", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&EUML;", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&AGRAVE;", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&AACUTE;", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&ACUTE;", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&AUML;", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&ACIRC;", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&ATILDE;", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&ARING;", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&OCIRC;", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&OTILDE;", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&OSLASH;", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&OGRAVE;", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&OACUTE;", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&OUML;", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&UACUTE;", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "&UCIRC;", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "&UUML;", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "&CCARON;", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "&CCEDIL;", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "&SZLIG;", "SS");
UPDATE geo_temp_union SET state = REPLACE(state, "&ZCARON;", "Z");
UPDATE geo_temp_union SET state = REPLACE(state, "&SCARON;", "S");
UPDATE geo_temp_union SET state = REPLACE(state, "&IEXCL;", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, "&YUML;", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, "&YACUTE;", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, "&OELIG;", "OE");
UPDATE geo_temp_union SET state = REPLACE(state, "&AELIG;", "AE");
UPDATE geo_temp_union SET state = REPLACE(state, "&IGRAVE;", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&ICIRC;", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&IUML;", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&NTILDE;", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "&IACUTE;", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&AMP;", "AND");
UPDATE geo_temp_union SET state = REPLACE(state, "&DEG;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&LRM;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&SUP1;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&ORDF;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&ORDM;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&RDQUO;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&LDQUO;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&RSQUO;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&LSQUO;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&PLUSMN;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&NDASH;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&RAQUO;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&LAQUO;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&SUP2;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&NBSP;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&BULL;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&SHY;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&EURO;", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&QUOT;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&THORN;", "B") ;
UPDATE geo_temp_union SET state = REPLACE(state, "&ETH;", "D") ;
UPDATE geo_temp_union SET state = REPLACE(state, "&LT;", " ") ;
UPDATE geo_temp_union SET state = REPLACE(state, "&GT;", " ") ;
UPDATE geo_temp_union SET state = REPLACE(state, "&YEN;", "Y") ;
UPDATE geo_temp_union SET state = REPLACE(state, "&COPY;", "C") ;
UPDATE geo_temp_union SET state = REPLACE(state, "&REG;", "R") ;
UPDATE geo_temp_union SET state = REPLACE(state, "&#039;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&#322;", "L");
UPDATE geo_temp_union SET state = REPLACE(state, "&#321;", "L");
UPDATE geo_temp_union SET state = REPLACE(state, "&#324;", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "&#932;", "T");
UPDATE geo_temp_union SET state = REPLACE(state, "&#304;", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&#919;", "H");
UPDATE geo_temp_union SET state = REPLACE(state, "&#269;", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "&#915;", "G");
UPDATE geo_temp_union SET state = REPLACE(state, "&#346;", "S");
UPDATE geo_temp_union SET state = REPLACE(state, "&#917;", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&#8470;", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "&#281;", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&#305;", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&#324;", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "»", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "…", "E");
UPDATE geo_temp_union SET state = REPLACE(state, " ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "À", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "¿", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "¡", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "ƒ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "÷", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "’", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "”", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "ÿ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "“", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "‘", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "Ÿ", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "⁄", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "‹", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "€", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "U", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "Ã", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "Õ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "Œ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "œ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "›", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, "ü", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, "«", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "L", "L");
UPDATE geo_temp_union SET state = REPLACE(state, "ﬂ", "SS");
UPDATE geo_temp_union SET state = REPLACE(state, "é", "Z");
UPDATE geo_temp_union SET state = REPLACE(state, "S", "S");
UPDATE geo_temp_union SET state = REPLACE(state, "$", "S");
UPDATE geo_temp_union SET state = REPLACE(state, "?", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "N", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "—", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "C", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "C±", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "–", "TH");
UPDATE geo_temp_union SET state = REPLACE(state, "∆", "AE");
UPDATE geo_temp_union SET state = REPLACE(state, "å", "OE");
UPDATE geo_temp_union SET state = REPLACE(state, "?", "BI");
UPDATE geo_temp_union SET state = REPLACE(state, "?", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "???", "SKV");
UPDATE geo_temp_union SET state = REPLACE(state, "?", "K");
UPDATE geo_temp_union SET state = REPLACE(state, "?", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "IUML;", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "EGRAVE;", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "EACUTE;", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "UUML;", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "UACUTE;", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "ORDM;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET state = REPLACE(state, "AMP;", " AND ");
UPDATE geo_temp_union SET state = REPLACE(state, "#039;", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "#324;", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "#346;", "S");
UPDATE geo_temp_union SET state = REPLACE(state, "346;", "S");
UPDATE geo_temp_union SET state = REPLACE(state, "OUML;", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "AACUTE; ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "AUML;", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "ARING;", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "ATILDE;", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "OACUTE;", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "CCEDIL;", "C");
UPDATE geo_temp_union SET state = REPLACE(state, 'Ü', " ");
UPDATE geo_temp_union SET state = REPLACE(state, '£', " ");
UPDATE geo_temp_union SET state = REPLACE(state, 'Æ', " ");
UPDATE geo_temp_union SET state = REPLACE(state, 'î', " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ë", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ï", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ã", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "õ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "∏", " ");
UPDATE geo_temp_union SET state = REPLACE(state, '"', " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ª", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "´", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "!", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "?", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "|", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "[", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "]", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "<", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "\_", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "=", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "*", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "+", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "`", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "(", " ");
UPDATE geo_temp_union SET state = REPLACE(state, ")", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "∞", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "™", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "∫", " ");
UPDATE geo_temp_union SET state = REPLACE(state, ">", " ");
UPDATE geo_temp_union SET state = REPLACE(state, ",", " ");
UPDATE geo_temp_union SET state = REPLACE(state, ":", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "®", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "/", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "'", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "\\", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ø", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "@", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "°", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "^", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "¬∑", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "¬§", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "¬Ω", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "√â", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "√à", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "∑", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "§", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "Ω", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "â", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "à", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "©", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "í", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "¥", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "¨", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "•", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, "ä", "S");
UPDATE geo_temp_union SET state = REPLACE(state, "≥", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "á", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ó", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "Ø", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "≠", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "¢", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "Ñ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "¶", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ºò", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ò", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ò ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "º", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "A", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "≈", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "¬", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "√", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "Ç", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "Ö", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " & 39 ", " ");

UPDATE geo_temp_union SET state = REPLACE(state, " ;", " ");

UPDATE geo_temp_union SET state = REPLACE(state, "&EGRAVE ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&EACUTE ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&ECIRC ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&EUML ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&AGRAVE ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&AACUTE ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&ACUTE ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&AUML ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&ACIRC ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&ATILDE ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&ARING ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, "&OCIRC ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&OTILDE ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&OSLASH ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&OGRAVE ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&OACUTE ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&OUML ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, "&UACUTE ", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "&UCIRC ", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "&UUML ", "U");
UPDATE geo_temp_union SET state = REPLACE(state, "&CCARON ", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "&CCEDIL ", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "&SZLIG ", "SS");
UPDATE geo_temp_union SET state = REPLACE(state, "&ZCARON ", "Z");
UPDATE geo_temp_union SET state = REPLACE(state, "&SCARON ", "S");
UPDATE geo_temp_union SET state = REPLACE(state, "&IEXCL ", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, "&YUML ", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, "&YACUTE ", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, "&OELIG ", "OE");
UPDATE geo_temp_union SET state = REPLACE(state, "&AELIG ", "AE");
UPDATE geo_temp_union SET state = REPLACE(state, "&IGRAVE ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&ICIRC ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&IUML ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&NTILDE ", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "&IACUTE ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&AMP ", "AND");
UPDATE geo_temp_union SET state = REPLACE(state, "&DEG ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&LRM ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&SUP1 ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&ORDF ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&ORDM ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&RDQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&LDQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&RSQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&LSQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&PLUSMN ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&NDASH ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&RAQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&LAQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&SUP2 ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&NBSP ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&BULL ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&SHY ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&EURO ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&QUOT ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&#039 ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "&#322 ", "L");
UPDATE geo_temp_union SET state = REPLACE(state, "&#321 ", "L");
UPDATE geo_temp_union SET state = REPLACE(state, "&#324 ", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "&#932 ", "T");
UPDATE geo_temp_union SET state = REPLACE(state, "&#304 ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, "&#919 ", "H");
UPDATE geo_temp_union SET state = REPLACE(state, "&#269 ", "C");
UPDATE geo_temp_union SET state = REPLACE(state, "&#915 ", "G");
UPDATE geo_temp_union SET state = REPLACE(state, "&#346 ", "S");
UPDATE geo_temp_union SET state = REPLACE(state, "&#917 ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&#8470 ", "N");
UPDATE geo_temp_union SET state = REPLACE(state, "&#281 ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "&#305 ", "I");


UPDATE geo_temp_union SET state = REPLACE(state, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, " AND EACUTE ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, " AND ECIRC ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, " AND EUML ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, " AND AACUTE ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, " AND ACUTE ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, " AND AUML ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, " AND ACIRC ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, " AND ATILDE ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, " AND ARING ", "A");
UPDATE geo_temp_union SET state = REPLACE(state, " AND OCIRC ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, " AND OTILDE ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, " AND OSLASH ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, " AND OACUTE ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, " AND OUML ", "O");
UPDATE geo_temp_union SET state = REPLACE(state, " AND UACUTE ", "U");
UPDATE geo_temp_union SET state = REPLACE(state, " AND UCIRC ", "U");
UPDATE geo_temp_union SET state = REPLACE(state, " AND UUML ", "U");
UPDATE geo_temp_union SET state = REPLACE(state, " AND CCARON ", "C");
UPDATE geo_temp_union SET state = REPLACE(state, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET state = REPLACE(state, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET state = REPLACE(state, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET state = REPLACE(state, " AND SCARON ", "S");
UPDATE geo_temp_union SET state = REPLACE(state, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, " AND YUML ", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET state = REPLACE(state, " AND OELIG ", "OE");
UPDATE geo_temp_union SET state = REPLACE(state, " AND AELIG ", "AE");
UPDATE geo_temp_union SET state = REPLACE(state, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, " AND ICIRC ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, " AND IUML ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, " AND NTILDE ", "N");
UPDATE geo_temp_union SET state = REPLACE(state, " AND IACUTE ", "I");
UPDATE geo_temp_union SET state = REPLACE(state, " AND AMP ", "AND");
UPDATE geo_temp_union SET state = REPLACE(state, " AND DEG ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND LRM ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND SUP1 ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND ORDF ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND ORDM ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND RDQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND LDQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND RSQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND LSQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND NDASH ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND RAQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND LAQUO ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND SUP2 ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND NBSP ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND BULL ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND SHY ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND EURO ", "E");
UPDATE geo_temp_union SET state = REPLACE(state, " AND QUOT ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, " AND THORN ", "B") ;
UPDATE geo_temp_union SET state = REPLACE(state, " AND ETH ", "D") ;
UPDATE geo_temp_union SET state = REPLACE(state, " AND LT ", " ") ;
UPDATE geo_temp_union SET state = REPLACE(state, " AND GT ", " ") ;
UPDATE geo_temp_union SET state = REPLACE(state, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET state = REPLACE(state, " AND COPY ", "C") ;
UPDATE geo_temp_union SET state = REPLACE(state, " AND REG ", "R") ;

UPDATE geo_temp_union SET state = REPLACE(state, "∂", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ß", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "É", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "Ä", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "\%", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "~", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ô", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "±", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "æ", "");
UPDATE geo_temp_union SET state = REPLACE(state, "ì", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "ú", "E");
UPDATE geo_temp_union SET state = REPLACE(state, "π", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "≤", " ");
UPDATE geo_temp_union SET state = REPLACE(state, ".", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "-", " ");

/* SUPPRESSION state */
UPDATE geo_temp_union SET state ="" where state ="PTDR" ;
UPDATE geo_temp_union SET state ="" where state ="NPAI" ;
UPDATE geo_temp_union SET state ="" where state ="NAME" ;
UPDATE geo_temp_union SET state ="" where state ="CP" ;
UPDATE geo_temp_union SET state ="" where state ="NONE" ;
UPDATE geo_temp_union SET state ="" where state ="CITY" ;
UPDATE geo_temp_union SET state ="" where state ="PASS" ;
UPDATE geo_temp_union SET state ="" where state ="PASS 1" ;
UPDATE geo_temp_union SET state ="" where state ="PASS 2" ;
UPDATE geo_temp_union SET state ="" where state ="PASS 3" ;
UPDATE geo_temp_union SET state ="" where state ="PASS 4" ;
UPDATE geo_temp_union SET state ="" where state ="PASS 5" ;
UPDATE geo_temp_union SET state ="" where state ="NULL" ;
UPDATE geo_temp_union SET state ="" where state ="LOL" ;
UPDATE geo_temp_union SET state ="" where state ="TEST" ;
UPDATE geo_temp_union SET state ="" where state ="ERR" ;
UPDATE geo_temp_union SET state ="" where state ="XXXXX" ;
UPDATE geo_temp_union SET state ="" where state ="XXXX" ;
UPDATE geo_temp_union SET state ="" where state ="XXX" ;
UPDATE geo_temp_union SET state ="" where state ="XX" ;
UPDATE geo_temp_union SET state ="" where state ="X" ;
UPDATE geo_temp_union SET state ="" where state ="0" ;
UPDATE geo_temp_union SET state ="" where state ="NULL" ;
UPDATE geo_temp_union SET state ="" where state ="NO" ;
UPDATE geo_temp_union SET state ="" where state ="VILLE" ;
UPDATE geo_temp_union SET state ="" where state ="PAYS" ;

UPDATE geo_temp_union SET state = "" where state = " " ;
UPDATE geo_temp_union SET state = "" where state = "OTHERS" ;
UPDATE geo_temp_union SET state = "" where state = "NSP" ;

UPDATE geo_temp_union SET state = REPLACE(state, "&", " AND ");
UPDATE geo_temp_union SET state = REPLACE(state, "#", " ");

UPDATE geo_temp_union SET state = "" where state like "%e+%" ;

UPDATE geo_temp_union SET state = REPLACE(state, "   ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "  ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "   ", " ");
UPDATE geo_temp_union SET state = REPLACE(state, "  ", " ");

/* SANS LETTRE */
UPDATE geo_temp_union SET state = ""
WHERE (state not like "%A%" AND state not like "%B%" AND state not like "%C%" AND state not like "%D%" AND state not like "%E%" AND state not like "%F%" AND state not like "%G%" AND state not like "%H%" AND state not like "%I%" AND state not like "%J%" AND state not like "%K%" AND state not like "%L%" AND state not like "%M%" AND state not like "%N%" AND state not like "%O%" AND state not like "%P%" AND state not like "%Q%" AND state not like "%R%" AND state not like "%S%" AND state not like "%T%" AND state not like "%U%" AND state not like "%V%" AND state not like "%W%" AND state not like "%X%" AND state not like "%Y%" AND state not like "%Z%");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET state = SUBSTR(state, 2 ) where state like " %" ;

/* MODIFICATION REPLACE COUNTRY */
UPDATE geo_temp_union SET country = REPLACE(country, "√ê≈ì√ê≈æ√ê¬°KB√ê¬ê", "MOSCOW");
UPDATE geo_temp_union SET country = REPLACE(country, "√¢¬Ç¨¬Ñ¢", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "AAÇ¨AÑ¢", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "A¬Ç¨≈ì", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "AAÇ¨U", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "AAÇ¨A", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "√Ø¬ø¬Ω", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "A¬Äé¬Äì", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "√ÖAEí", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "A¬ÄZ", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "N¬∞", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "√ê≈°√ê¬Äô", "KB");
UPDATE geo_temp_union SET country = REPLACE(country, "√Ö≈∏C±", "SI");
UPDATE geo_temp_union SET country = REPLACE(country, "A¬Ç¨¬", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "√ÑEOE", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "¬ ¨A¢", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "A ¨A¢", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬®", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "AÉ¬®", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬Ä∞", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬©", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "√ÉEÜ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "A AΩ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬≥", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬Äå", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬Ä", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬∂", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬¥", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬∫", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "√É≈ì", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬º", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "√ÉAEí", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬°", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬†", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬§", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬£", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬ß", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬Ø", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "√É¬≠", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "AÉ¬Ø", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "A¬ÄZ", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "√£¬©", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "AÉA", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "A¬±", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "AA ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "A¬¥", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "A≈ì", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "√ºì", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "Aºì", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "√ä", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "¬™", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√ì", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√É", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√°", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√Ä", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√ü", "SS");
UPDATE geo_temp_union SET country = REPLACE(country, "√¢", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√∫", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√Ç", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "A£", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√®", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "√©", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "A©", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "≈Ω", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "AΩ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "√Æ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "√á", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "√ß", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "Aß", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "√ö", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "A∫", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "Aì", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "√º", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "Aº", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "LΩ", "Z");
UPDATE geo_temp_union SET country = REPLACE(country, "√ ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "A≈", "A");
UPDATE geo_temp_union SET country = REPLACE(country, " ∞", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&EGRAVE;", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&EACUTE;", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&ECIRC;", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&EUML;", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&AGRAVE;", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&AACUTE;", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&ACUTE;", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&AUML;", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&ACIRC;", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&ATILDE;", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&ARING;", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&OCIRC;", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&OTILDE;", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&OSLASH;", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&OGRAVE;", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&OACUTE;", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&OUML;", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&UACUTE;", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "&UCIRC;", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "&UUML;", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "&CCARON;", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "&CCEDIL;", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "&SZLIG;", "SS");
UPDATE geo_temp_union SET country = REPLACE(country, "&ZCARON;", "Z");
UPDATE geo_temp_union SET country = REPLACE(country, "&SCARON;", "S");
UPDATE geo_temp_union SET country = REPLACE(country, "&IEXCL;", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, "&YUML;", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, "&YACUTE;", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, "&OELIG;", "OE");
UPDATE geo_temp_union SET country = REPLACE(country, "&AELIG;", "AE");
UPDATE geo_temp_union SET country = REPLACE(country, "&IGRAVE;", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&ICIRC;", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&IUML;", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&NTILDE;", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "&IACUTE;", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&AMP;", "AND");
UPDATE geo_temp_union SET country = REPLACE(country, "&DEG;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&LRM;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&SUP1;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&ORDF;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&ORDM;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&RDQUO;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&LDQUO;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&RSQUO;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&LSQUO;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&PLUSMN;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&NDASH;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&RAQUO;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&LAQUO;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&SUP2;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&NBSP;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&BULL;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&SHY;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&EURO;", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&QUOT;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&THORN;", "B") ;
UPDATE geo_temp_union SET country = REPLACE(country, "&ETH;", "D") ;
UPDATE geo_temp_union SET country = REPLACE(country, "&LT;", " ") ;
UPDATE geo_temp_union SET country = REPLACE(country, "&GT;", " ") ;
UPDATE geo_temp_union SET country = REPLACE(country, "&YEN;", "Y") ;
UPDATE geo_temp_union SET country = REPLACE(country, "&COPY;", "C") ;
UPDATE geo_temp_union SET country = REPLACE(country, "&REG;", "R") ;
UPDATE geo_temp_union SET country = REPLACE(country, "&#039;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&#322;", "L");
UPDATE geo_temp_union SET country = REPLACE(country, "&#321;", "L");
UPDATE geo_temp_union SET country = REPLACE(country, "&#324;", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "&#932;", "T");
UPDATE geo_temp_union SET country = REPLACE(country, "&#304;", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&#919;", "H");
UPDATE geo_temp_union SET country = REPLACE(country, "&#269;", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "&#915;", "G");
UPDATE geo_temp_union SET country = REPLACE(country, "&#346;", "S");
UPDATE geo_temp_union SET country = REPLACE(country, "&#917;", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&#8470;", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "&#281;", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&#305;", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&#324;", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "»", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "…", "E");
UPDATE geo_temp_union SET country = REPLACE(country, " ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "À", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "¿", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "¡", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "ƒ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "÷", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "’", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "”", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "ÿ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "“", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "‘", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "Ÿ", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "⁄", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "‹", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "€", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "U", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "Ã", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "Õ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "Œ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "œ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "›", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, "ü", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, "«", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "L", "L");
UPDATE geo_temp_union SET country = REPLACE(country, "ﬂ", "SS");
UPDATE geo_temp_union SET country = REPLACE(country, "é", "Z");
UPDATE geo_temp_union SET country = REPLACE(country, "S", "S");
UPDATE geo_temp_union SET country = REPLACE(country, "$", "S");
UPDATE geo_temp_union SET country = REPLACE(country, "?", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "N", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "—", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "C", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "C±", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "–", "TH");
UPDATE geo_temp_union SET country = REPLACE(country, "∆", "AE");
UPDATE geo_temp_union SET country = REPLACE(country, "å", "OE");
UPDATE geo_temp_union SET country = REPLACE(country, "?", "BI");
UPDATE geo_temp_union SET country = REPLACE(country, "?", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "???", "SKV");
UPDATE geo_temp_union SET country = REPLACE(country, "?", "K");
UPDATE geo_temp_union SET country = REPLACE(country, "?", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "IUML;", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "EGRAVE;", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "EACUTE;", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "UUML;", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "UACUTE;", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "ORDM;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ANDAMP;", " AND ");
UPDATE geo_temp_union SET country = REPLACE(country, "AMP;", " AND ");
UPDATE geo_temp_union SET country = REPLACE(country, "#039;", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "#324;", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "#346;", "S");
UPDATE geo_temp_union SET country = REPLACE(country, "346;", "S");
UPDATE geo_temp_union SET country = REPLACE(country, "OUML;", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "AACUTE; ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "AUML;", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "ARING;", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "ATILDE;", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "OACUTE;", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "CCEDIL;", "C");
UPDATE geo_temp_union SET country = REPLACE(country, 'Ü', " ");
UPDATE geo_temp_union SET country = REPLACE(country, '£', " ");
UPDATE geo_temp_union SET country = REPLACE(country, 'Æ', " ");
UPDATE geo_temp_union SET country = REPLACE(country, 'î', " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ë", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ï", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ã", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "õ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "∏", " ");
UPDATE geo_temp_union SET country = REPLACE(country, '"', " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ª", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "´", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "!", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "?", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "|", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "[", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "]", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "<", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "\_", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "=", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "*", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "+", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "`", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "(", " ");
UPDATE geo_temp_union SET country = REPLACE(country, ")", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "∞", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "™", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "∫", " ");
UPDATE geo_temp_union SET country = REPLACE(country, ">", " ");
UPDATE geo_temp_union SET country = REPLACE(country, ",", " ");
UPDATE geo_temp_union SET country = REPLACE(country, ":", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "®", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "/", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "'", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "\\", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ø", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "@", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "°", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "^", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "¬∑", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "¬§", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "¬Ω", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "√â", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "√à", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "∑", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "§", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "Ω", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "â", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "à", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "©", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "í", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "¥", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "¨", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "•", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, "ä", "S");
UPDATE geo_temp_union SET country = REPLACE(country, "≥", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "á", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ó", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "Ø", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "≠", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "¢", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "Ñ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "¶", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ºò", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ò", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ò ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "º", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "A", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "≈", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "¬", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "√", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "Ç", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "Ö", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " & 39 ", " ");

UPDATE geo_temp_union SET country = REPLACE(country, " ;", " ");

UPDATE geo_temp_union SET country = REPLACE(country, "&EGRAVE ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&EACUTE ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&ECIRC ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&EUML ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&AGRAVE ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&AACUTE ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&ACUTE ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&AUML ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&ACIRC ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&ATILDE ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&ARING ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, "&OCIRC ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&OTILDE ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&OSLASH ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&OGRAVE ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&OACUTE ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&OUML ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, "&UACUTE ", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "&UCIRC ", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "&UUML ", "U");
UPDATE geo_temp_union SET country = REPLACE(country, "&CCARON ", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "&CCEDIL ", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "&SZLIG ", "SS");
UPDATE geo_temp_union SET country = REPLACE(country, "&ZCARON ", "Z");
UPDATE geo_temp_union SET country = REPLACE(country, "&SCARON ", "S");
UPDATE geo_temp_union SET country = REPLACE(country, "&IEXCL ", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, "&YUML ", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, "&YACUTE ", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, "&OELIG ", "OE");
UPDATE geo_temp_union SET country = REPLACE(country, "&AELIG ", "AE");
UPDATE geo_temp_union SET country = REPLACE(country, "&IGRAVE ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&ICIRC ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&IUML ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&NTILDE ", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "&IACUTE ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&AMP ", "AND");
UPDATE geo_temp_union SET country = REPLACE(country, "&DEG ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&LRM ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&SUP1 ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&ORDF ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&ORDM ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&RDQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&LDQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&RSQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&LSQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&PLUSMN ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&NDASH ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&RAQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&LAQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&SUP2 ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&NBSP ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&BULL ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&SHY ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&EURO ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&QUOT ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&#039 ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "&#322 ", "L");
UPDATE geo_temp_union SET country = REPLACE(country, "&#321 ", "L");
UPDATE geo_temp_union SET country = REPLACE(country, "&#324 ", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "&#932 ", "T");
UPDATE geo_temp_union SET country = REPLACE(country, "&#304 ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, "&#919 ", "H");
UPDATE geo_temp_union SET country = REPLACE(country, "&#269 ", "C");
UPDATE geo_temp_union SET country = REPLACE(country, "&#915 ", "G");
UPDATE geo_temp_union SET country = REPLACE(country, "&#346 ", "S");
UPDATE geo_temp_union SET country = REPLACE(country, "&#917 ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&#8470 ", "N");
UPDATE geo_temp_union SET country = REPLACE(country, "&#281 ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "&#305 ", "I");


UPDATE geo_temp_union SET country = REPLACE(country, " AND EGRAVE ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, " AND EACUTE ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, " AND ECIRC ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, " AND EUML ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, " AND AGRAVE ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, " AND AACUTE ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, " AND ACUTE ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, " AND AUML ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, " AND ACIRC ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, " AND ATILDE ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, " AND ARING ", "A");
UPDATE geo_temp_union SET country = REPLACE(country, " AND OCIRC ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, " AND OTILDE ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, " AND OSLASH ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, " AND OGRAVE ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, " AND OACUTE ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, " AND OUML ", "O");
UPDATE geo_temp_union SET country = REPLACE(country, " AND UACUTE ", "U");
UPDATE geo_temp_union SET country = REPLACE(country, " AND UCIRC ", "U");
UPDATE geo_temp_union SET country = REPLACE(country, " AND UUML ", "U");
UPDATE geo_temp_union SET country = REPLACE(country, " AND CCARON ", "C");
UPDATE geo_temp_union SET country = REPLACE(country, " AND CCEDIL ", "C");
UPDATE geo_temp_union SET country = REPLACE(country, " AND SZLIG ", "SS");
UPDATE geo_temp_union SET country = REPLACE(country, " AND ZCARON ", "Z");
UPDATE geo_temp_union SET country = REPLACE(country, " AND SCARON ", "S");
UPDATE geo_temp_union SET country = REPLACE(country, " AND IEXCL ", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, " AND YUML ", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, " AND YACUTE ", "Y");
UPDATE geo_temp_union SET country = REPLACE(country, " AND OELIG ", "OE");
UPDATE geo_temp_union SET country = REPLACE(country, " AND AELIG ", "AE");
UPDATE geo_temp_union SET country = REPLACE(country, " AND IGRAVE ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, " AND ICIRC ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, " AND IUML ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, " AND NTILDE ", "N");
UPDATE geo_temp_union SET country = REPLACE(country, " AND IACUTE ", "I");
UPDATE geo_temp_union SET country = REPLACE(country, " AND AMP ", "AND");
UPDATE geo_temp_union SET country = REPLACE(country, " AND DEG ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND LRM ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND SUP1 ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND ORDF ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND ORDM ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND RDQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND LDQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND RSQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND LSQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND PLUSMN ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND NDASH ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND RAQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND LAQUO ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND SUP2 ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND NBSP ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND BULL ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND SHY ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND EURO ", "E");
UPDATE geo_temp_union SET country = REPLACE(country, " AND QUOT ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, " AND THORN ", "B") ;
UPDATE geo_temp_union SET country = REPLACE(country, " AND ETH ", "D") ;
UPDATE geo_temp_union SET country = REPLACE(country, " AND LT ", " ") ;
UPDATE geo_temp_union SET country = REPLACE(country, " AND GT ", " ") ;
UPDATE geo_temp_union SET country = REPLACE(country, " AND YEN ", "Y") ;
UPDATE geo_temp_union SET country = REPLACE(country, " AND COPY ", "C") ;
UPDATE geo_temp_union SET country = REPLACE(country, " AND REG ", "R") ;

UPDATE geo_temp_union SET country = REPLACE(country, "∂", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ß", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "É", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "Ä", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "\%", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "~", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ô", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "±", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "æ", "");
UPDATE geo_temp_union SET country = REPLACE(country, "ì", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "ú", "E");
UPDATE geo_temp_union SET country = REPLACE(country, "π", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "≤", " ");
UPDATE geo_temp_union SET country = REPLACE(country, ".", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "-", " ");

/* SUPPRESION country */
UPDATE geo_temp_union SET country ="OTHER" where country ="PTDR" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="NPAI" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="NAME" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="CP" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="NONE" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="CITY" ;
UPDATE geo_temp_union SET country ="OTHER" where country = "PASS" ;
UPDATE geo_temp_union SET country ="OTHER" where country LIKE "PASS%" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="NULL" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="NON DERTMINE" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="NON DETERMINE" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="OF" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="NNNN" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="SKKK" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="LOL" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="TEST" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="ERR" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="XXXXX" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="XXXX" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="XXX" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="XX" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="X" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="0" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="NULL" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="NO" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="VILLE" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="COUNTRY" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="PAYS" ;

UPDATE geo_temp_union SET country ="OTHER" where country ="" ;
UPDATE geo_temp_union SET country ="OTHER" where country =" " ;
UPDATE geo_temp_union SET country ="OTHER" where country ="OTHERS" ;
UPDATE geo_temp_union SET country ="OTHER" where country ="NSP" ;

UPDATE geo_temp_union SET country = REPLACE(country, "&", " AND ");
UPDATE geo_temp_union SET country = REPLACE(country, "#", " ");

UPDATE geo_temp_union SET country = "OTHER" where country like "%e+%" ;

UPDATE geo_temp_union SET country = REPLACE(country, "   ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "  ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "   ", " ");
UPDATE geo_temp_union SET country = REPLACE(country, "  ", " ");

/* SANS LETTRE */
UPDATE geo_temp_union SET country = "OTHER"
WHERE (country not like "%A%" AND country not like "%B%" AND country not like "%C%" AND country not like "%D%" AND country not like "%E%" AND country not like "%F%" AND country not like "%G%" AND country not like "%H%" AND country not like "%I%" AND country not like "%J%" AND country not like "%K%" AND country not like "%L%" AND country not like "%M%" AND country not like "%N%" AND country not like "%O%" AND country not like "%P%" AND country not like "%Q%" AND country not like "%R%" AND country not like "%S%" AND country not like "%T%" AND country not like "%U%" AND country not like "%V%" AND country not like "%W%" AND country not like "%X%" AND country not like "%Y%" AND country not like "%Z%");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET country = SUBSTR(country, 2 ) where country like " %" ;

/* MODIFICATION REPLACE notes */
UPDATE geo_temp_union SET notes = REPLACE(notes, "√©", "È");
UPDATE geo_temp_union SET notes = REPLACE(notes, "√ ", "‡ ");
UPDATE geo_temp_union SET notes = REPLACE(notes, "√¥", "Ù");
UPDATE geo_temp_union SET notes = REPLACE(notes, "√Æ", "Ó");
UPDATE geo_temp_union SET notes = REPLACE(notes, "√®", "Ë");

UPDATE geo_temp_union SET notes = REPLACE(notes, "‚Ä¶", " ");
UPDATE geo_temp_union SET notes = REPLACE(notes, "‚Ç¨", " ");
UPDATE geo_temp_union SET notes = REPLACE(notes, "¨", " ");

UPDATE geo_temp_union SET notes = REPLACE(notes, "'", " ");
UPDATE geo_temp_union SET notes = REPLACE(notes, '"', " ");
UPDATE geo_temp_union SET notes = REPLACE(notes, " ;", " - ");
UPDATE geo_temp_union SET notes = REPLACE(notes, "\\", " - ");

UPDATE geo_temp_union SET notes = REPLACE(notes, "  ", " ");

/* MODIFICATION REPLACE EMAIL */
UPDATE geo_temp_union SET email = REPLACE(email, "noemail@euromedicom.com", "");
UPDATE geo_temp_union SET email = REPLACE(email, "nomail@mail.com", "");
UPDATE geo_temp_union SET email = REPLACE(email, "name@mail.com", "");

UPDATE geo_temp_union SET email = REPLACE(email, "mailto:", "") WHERE email LIKE 'mailto:%' ;
UPDATE geo_temp_union SET email = REPLACE(email, "mail to:", "") WHERE email LIKE 'mail to:%' ;
UPDATE geo_temp_union SET email = REPLACE(email, "mailto", "") WHERE email LIKE 'mailto%' ;
UPDATE geo_temp_union SET email = REPLACE(email, "mail to", "") WHERE email LIKE 'mail to%' ;

UPDATE geo_temp_union SET email = REPLACE(email, "A¬±", "n");
UPDATE geo_temp_union SET email = REPLACE(email, "a¬±", "n");
UPDATE geo_temp_union SET email = REPLACE(email, "¬ ", " ");

UPDATE geo_temp_union SET email = REPLACE(email, "Ë", "e");
UPDATE geo_temp_union SET email = REPLACE(email, "È", "e");
UPDATE geo_temp_union SET email = REPLACE(email, "Í", "e");
UPDATE geo_temp_union SET email = REPLACE(email, "Î", "e");
UPDATE geo_temp_union SET email = REPLACE(email, "‡", "a");
UPDATE geo_temp_union SET email = REPLACE(email, "·", "a");
UPDATE geo_temp_union SET email = REPLACE(email, "‰", "a");
UPDATE geo_temp_union SET email = REPLACE(email, "Â", "a");
UPDATE geo_temp_union SET email = REPLACE(email, "‚", "a");
UPDATE geo_temp_union SET email = REPLACE(email, "„", "a");
UPDATE geo_temp_union SET email = REPLACE(email, "ˆ", "o");
UPDATE geo_temp_union SET email = REPLACE(email, "ı", "o");
UPDATE geo_temp_union SET email = REPLACE(email, "Û", "o");
UPDATE geo_temp_union SET email = REPLACE(email, "¯", "o");
UPDATE geo_temp_union SET email = REPLACE(email, "Ú", "o");
UPDATE geo_temp_union SET email = REPLACE(email, "Ù", "o");
UPDATE geo_temp_union SET email = REPLACE(email, "˘", "u");
UPDATE geo_temp_union SET email = REPLACE(email, "˙", "u");
UPDATE geo_temp_union SET email = REPLACE(email, "¸", "u");
UPDATE geo_temp_union SET email = REPLACE(email, "˚", "u");
UPDATE geo_temp_union SET email = REPLACE(email, "Ï", "i");
UPDATE geo_temp_union SET email = REPLACE(email, "Ì", "i");
UPDATE geo_temp_union SET email = REPLACE(email, "Ó", "i");
UPDATE geo_temp_union SET email = REPLACE(email, "Ô", "i");
UPDATE geo_temp_union SET email = REPLACE(email, "˝", "y");
UPDATE geo_temp_union SET email = REPLACE(email, "ˇ", "y");
UPDATE geo_temp_union SET email = REPLACE(email, "Á", "c");
UPDATE geo_temp_union SET email = REPLACE(email, "@@", "@");
UPDATE geo_temp_union SET email = REPLACE(email, "   ", " ");
UPDATE geo_temp_union SET email = REPLACE(email, "  ", " ");
UPDATE geo_temp_union SET email = REPLACE(email, ",", "/");
UPDATE geo_temp_union SET email = REPLACE(email, " ;", "/");
UPDATE geo_temp_union SET email = REPLACE(email, "/ ", "/");
UPDATE geo_temp_union SET email = REPLACE(email, " /", "/");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET email = SUBSTR(email, 2 ) where email like " %" ;

/* SUPPRESSION email */
UPDATE geo_temp_union SET email = "" where email like "%±%" ;
UPDATE geo_temp_union SET email = "" where email NOT LIKE "%@%.%" ;

/* MODIFICATION REPLACE EMAIL1 */
UPDATE geo_temp_union SET email1 = REPLACE(email1, "noemail@euromedicom.com", "");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "nomail@mail.com", "");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "name@mail.com", "");

UPDATE geo_temp_union SET email1 = REPLACE(email1, "mailto:", "") WHERE email1 LIKE 'mailto:%' ;
UPDATE geo_temp_union SET email1 = REPLACE(email1, "mail to:", "") WHERE email1 LIKE 'mail to:%' ;
UPDATE geo_temp_union SET email1 = REPLACE(email1, "mailto", "") WHERE email1 LIKE 'mailto%' ;
UPDATE geo_temp_union SET email1 = REPLACE(email1, "mail to", "") WHERE email1 LIKE 'mail to%' ;

UPDATE geo_temp_union SET email1 = REPLACE(email1, "A¬±", "n");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "a¬±", "n");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "¬ ", " ");

UPDATE geo_temp_union SET email1 = REPLACE(email1, "Ë", "e");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "È", "e");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Í", "e");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Î", "e");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "‡", "a");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "·", "a");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "‰", "a");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Â", "a");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "‚", "a");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "„", "a");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "ˆ", "o");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "ı", "o");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Û", "o");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "¯", "o");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Ú", "o");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Ù", "o");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "˘", "u");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "˙", "u");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "¸", "u");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "˚", "u");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Ï", "i");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Ì", "i");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Ó", "i");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Ô", "i");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "˝", "y");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "ˇ", "y");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "Á", "c");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "@@", "@");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "   ", " ");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "  ", " ");
UPDATE geo_temp_union SET email1 = REPLACE(email1, ",", "/");
UPDATE geo_temp_union SET email1 = REPLACE(email1, " ;", "/");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "/ ", "/");
UPDATE geo_temp_union SET email1 = REPLACE(email1, " /", "/");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET email1 = SUBSTR(email1, 2 ) where email1 like " %" ;

/* SUPPRESSION email1 */
UPDATE geo_temp_union SET email1 = "" where email1 like "%±%" ;
UPDATE geo_temp_union SET email1 = "" where email1 NOT LIKE "%@%.%" ;

/* MODIFICATION REPLACE EMAIL2 */
UPDATE geo_temp_union SET email2 = REPLACE(email2, "noemail@euromedicom.com", "");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "nomail@mail.com", "");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "name@mail.com", "");

UPDATE geo_temp_union SET email2 = REPLACE(email2, "mailto:", "") WHERE email2 LIKE 'mailto:%' ;
UPDATE geo_temp_union SET email2 = REPLACE(email2, "mail to:", "") WHERE email2 LIKE 'mail to:%' ;
UPDATE geo_temp_union SET email2 = REPLACE(email2, "mailto", "") WHERE email2 LIKE 'mailto%' ;
UPDATE geo_temp_union SET email2 = REPLACE(email2, "mail to", "") WHERE email2 LIKE 'mail to%' ;

UPDATE geo_temp_union SET email2 = REPLACE(email2, "A¬±", "n");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "a¬±", "n");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "¬ ", " ");

UPDATE geo_temp_union SET email2 = REPLACE(email2, "Ë", "e");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "È", "e");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Í", "e");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Î", "e");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "‡", "a");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "·", "a");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "‰", "a");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Â", "a");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "‚", "a");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "„", "a");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "ˆ", "o");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "ı", "o");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Û", "o");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "¯", "o");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Ú", "o");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Ù", "o");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "˘", "u");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "˙", "u");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "¸", "u");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "˚", "u");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Ï", "i");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Ì", "i");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Ó", "i");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Ô", "i");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "˝", "y");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "ˇ", "y");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "Á", "c");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "@@", "@");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "   ", " ");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "  ", " ");
UPDATE geo_temp_union SET email2 = REPLACE(email2, ",", "/");
UPDATE geo_temp_union SET email2 = REPLACE(email2, " ;", "/");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "/ ", "/");
UPDATE geo_temp_union SET email2 = REPLACE(email2, " /", "/");

/* ESPACE AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET email2 = SUBSTR(email2, 2 ) where email2 like " %" ;

/* SUPPRESSION email2 */
UPDATE geo_temp_union SET email2 = "" where email2 like "%±%" ;
UPDATE geo_temp_union SET email2 = "" where email2 NOT LIKE "%@%.%" ;

/**************************************************************************************/

/* SUPPRESSIONS D EMAILS EGAUX ENTRE EUX*/
UPDATE geo_temp_union SET email2 = "" WHERE email2 = email1 ;
UPDATE geo_temp_union SET email1 = "" WHERE email1 = email ;
UPDATE geo_temp_union SET email2 = "" WHERE email2 = email ;

/* TRANSFERTS D EMAILS REMPLIS MAIS AVEC LE CHAMP PRECEDENTS VIDES */
UPDATE geo_temp_union SET email1 = email2 WHERE email1 like '' AND email2 not like '' ;
UPDATE geo_temp_union SET email2 = "" WHERE email2 = email1 ;
UPDATE geo_temp_union SET email = email1 WHERE email like '' AND email1 not like '' ;
UPDATE geo_temp_union SET email1 = "" WHERE email1 = email ;
UPDATE geo_temp_union SET email1 = email2 WHERE email1 like '' AND email2 not like '' ;
UPDATE geo_temp_union SET email2 = "" WHERE email2 = email1 ;
UPDATE geo_temp_union SET email = email1 WHERE email like '' AND email1 not like '' ;
UPDATE geo_temp_union SET email1 = "" WHERE email1 = email ;

/* TRANSFERTS DES EMAILS A PLUSIEURS DANS UN CHAMP */

/* SEPARE PAR PLUSIEURS / */
UPDATE geo_temp_union SET email1 = email WHERE email like '%/%/%' AND email1 like '' ;
UPDATE geo_temp_union SET email = SUBSTRING(email, 1, LOCATE('/', email) -1 ) WHERE email like '%/%/%' ;

/* REMPLACER EN CHERCHER L OCCURRENCE D UN CHAMP DANS UN AUTRE */
UPDATE geo_temp_union SET email1 = REPLACE(email1,email,'') WHERE email1 like '%/%/%' ;

/* / AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET email1 = SUBSTR(email1, 2 ) where email1 like "/%" ;

/* SEPARE PAR PLUSIEURS espace */
UPDATE geo_temp_union SET email1 = email WHERE email like '% % %' AND email1 like '' ;
UPDATE geo_temp_union SET email = SUBSTRING(email, 1, LOCATE(' ', email) -1 ) WHERE email like '% % %' ;

/* REMPLACER EN CHERCHER L OCCURRENCE D UN CHAMP DANS UN AUTRE */
UPDATE geo_temp_union SET email1 = REPLACE(email1,email,'') WHERE email1 like '% % %' ;

/* espace AU DEBUT DU CHAMP */
UPDATE geo_temp_union SET email1 = SUBSTR(email1, 2 ) where email1 like " %" ;

/* SEPARE PAR / */
UPDATE geo_temp_union SET email2 = email1 WHERE email1 like '%/%' AND email2 like '' ;
UPDATE geo_temp_union SET email2 = SUBSTRING(email2, LOCATE('/', email2 ) +1 ) WHERE email2 like '%/%' ;
UPDATE geo_temp_union SET email1 = SUBSTRING(email1, 1, LOCATE('/', email1) -1 ) WHERE email1 like '%/%' ;

UPDATE geo_temp_union SET email1 = email WHERE email like '%/%' AND email1 like '' ;
UPDATE geo_temp_union SET email1 = SUBSTRING(email1, LOCATE('/', email1 ) +1 ) WHERE email1 like '%/%' ;
UPDATE geo_temp_union SET email = SUBSTRING(email, 1, LOCATE('/', email) -1 ) WHERE email like '%/%' ;

/* SEPARE PAR espace */
UPDATE geo_temp_union SET email2 = email1 WHERE email1 like '% %' AND email2 like '' ;
UPDATE geo_temp_union SET email2 = SUBSTRING(email2, LOCATE(' ', email2 ) +1 ) WHERE email2 like '% %' ;
UPDATE geo_temp_union SET email1 = SUBSTRING(email1, 1, LOCATE(' ', email1) -1 ) WHERE email1 like '% %' ;

UPDATE geo_temp_union SET email1 = email WHERE email like '% %' AND email1 like '' ;
UPDATE geo_temp_union SET email1 = SUBSTRING(email1, LOCATE(' ', email1 ) +1 ) WHERE email1 like '% %' ;
UPDATE geo_temp_union SET email = SUBSTRING(email, 1, LOCATE(' ', email) -1 ) WHERE email like '% %' ;

/* SUPPRESSIONS DES EMAILS EN TROP */
UPDATE geo_temp_union SET email2 = SUBSTRING(email2, 1, LOCATE('/', email2) -1 ) WHERE email2 like '%/%' ;
UPDATE geo_temp_union SET email2 = SUBSTRING(email2, 1, LOCATE(' ', email2) -1 ) WHERE email2 like '% %' ;

/* NOUVELLES SUPPRESSIONS APRES LES TRANSFERTS */
UPDATE geo_temp_union SET email = "" WHERE email NOT LIKE "%@%.%" ;
UPDATE geo_temp_union SET email1 = "" WHERE email1 NOT LIKE "%@%.%" ;
UPDATE geo_temp_union SET email2 = "" WHERE email2 NOT LIKE "%@%.%" ;

/* NOUVELLES SUPPRESSIONS D EMAILS EGAUX ENTRE EUX APRES LES TRANSFERTS */
UPDATE geo_temp_union SET email2 = "" WHERE email2 = email1 ;
UPDATE geo_temp_union SET email1 = "" WHERE email1 = email ;
UPDATE geo_temp_union SET email2 = "" WHERE email2 = email ;

/* NOUVEAUX TRANSFERTS D EMAILS REMPLIS MAIS AVEC LE CHAMP PRECEDENTS VIDES, APRES LES TRANSFERTS */
UPDATE geo_temp_union SET email1 = email2 WHERE email1 like '' AND email2 not like '' ;
UPDATE geo_temp_union SET email2 = "" WHERE email2 = email1 ;
UPDATE geo_temp_union SET email = email1 WHERE email like '' AND email1 not like '' ;
UPDATE geo_temp_union SET email1 = "" WHERE email1 = email ;
UPDATE geo_temp_union SET email1 = email2 WHERE email1 like '' AND email2 not like '' ;
UPDATE geo_temp_union SET email2 = "" WHERE email2 = email1 ;
UPDATE geo_temp_union SET email = email1 WHERE email like '' AND email1 not like '' ;
UPDATE geo_temp_union SET email1 = "" WHERE email1 = email ;

/* DERNIERS REMPLACEMENTS DANS LES EMAILS */
UPDATE geo_temp_union SET email = REPLACE(email, "/", "");
UPDATE geo_temp_union SET email = REPLACE(email, " ", "");
UPDATE geo_temp_union SET email1 = REPLACE(email1, "/", "");
UPDATE geo_temp_union SET email1 = REPLACE(email1, " ", "");
UPDATE geo_temp_union SET email2 = REPLACE(email2, "/", "");
UPDATE geo_temp_union SET email2 = REPLACE(email2, " ", "");

/**************************************************************************************/

/* Correction des types selon email */
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE "doctor%" ;
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE "docteur%" ;
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE 'dr-%' ;
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE 'dr.%' ;
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE 'dr\_%' ;
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE 'doc-%' ;
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE 'doc.%' ;
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE 'doc\_%' ;
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE 'dra-%' ;
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE 'dra.%' ;
UPDATE geo_temp_union SET type = "DELEGATE" WHERE type IN ('EXHIBITOR','LABORATORY') AND email LIKE 'dra\_%' ;

UPDATE geo_temp_union SET type = "EXHIBITOR" WHERE type NOT IN ('EXHIBITOR','LABORATORY') AND email LIKE '%laboratory%' ;
UPDATE geo_temp_union SET type = "EXHIBITOR" WHERE type NOT IN ('EXHIBITOR','LABORATORY') AND email LIKE '%laboratoire%' ;
UPDATE geo_temp_union SET type = "EXHIBITOR" WHERE type NOT IN ('EXHIBITOR','LABORATORY') AND email LIKE '%laboratorio%' ;

/**************************************************************************************/

/* COUNTRY VIDE, DANS AUTRES LANGUES OU MAL ORTHOGRAPHIES */

UPDATE geo_temp_union SET country = "ALGERIA" where country LIKE "%ALGER%" ;
UPDATE geo_temp_union SET country = "ALGERIA" where country LIKE "%ALGIER%" ;

UPDATE geo_temp_union SET country = "AMERICAN SAMOA" where country LIKE "%WEST%SAMOA%" ;
UPDATE geo_temp_union SET country = "AMERICAN SAMOA" where country LIKE "%AMERI%SAMOA%" ;
UPDATE geo_temp_union SET country = "AMERICAN SAMOA" where country LIKE "%SAMOA%WEST%" ;
UPDATE geo_temp_union SET country = "AMERICAN SAMOA" where country LIKE "%SAMOA%AMERI%" ;

UPDATE geo_temp_union SET country = "ARGENTINA" where country LIKE "%ARGENTIN%" ;

UPDATE geo_temp_union SET country = "ASCENSION ISLAND" where country = "ASCENSION ISLANDS" ;

UPDATE geo_temp_union SET country = "AUSTRALIA" where country LIKE "%AUSTRALI%" ;
UPDATE geo_temp_union SET country = "AUSTRALIA", state="CHRISTMAS ISLAND" where country ="CHRISTMAS ISLAND" ;

UPDATE geo_temp_union SET country = "AUSTRIA" where country LIKE "%AUSTRIA%" ;
UPDATE geo_temp_union SET country = "AUSTRIA" where country LIKE "%AUTRICHE%" ;

UPDATE geo_temp_union SET country = "ARMENIA" where country LIKE "%ARMENI%" ;

UPDATE geo_temp_union SET country = "AZERBAIJAN" where country LIKE "%AZERBAI%" ;

UPDATE geo_temp_union SET country = "BAHRAIN" where country LIKE "%BAHRAIN%" ;

UPDATE geo_temp_union SET country = "BELGIUM" where country LIKE "%BELGI%" ;

UPDATE geo_temp_union SET country = "BELGIUM", city = "BRUXELLES" where country LIKE "%BRUXELLE%" ;
UPDATE geo_temp_union SET country = "BELGIUM", city = "BRASSCHAAT" where country LIKE "%BRAS%CHA%" ;
UPDATE geo_temp_union SET country = "BELGIUM", city = "ZONHOVEN" where country LIKE "%ZONHOVEN%" ;

UPDATE geo_temp_union SET country = "BELARUS" where country LIKE "%BIELORUSS%" ;
UPDATE geo_temp_union SET country = "BELARUS" where country LIKE "%BELORUSS%" ;

UPDATE geo_temp_union SET country = "BOLIVIA" where country LIKE "%BOLIVIA%" ;
UPDATE geo_temp_union SET country = "BOLIVIA" where country LIKE "BOLIVIA (PLURINATIONAL STATE OF)" ;
UPDATE geo_temp_union SET country = "BOLIVIA" where country LIKE "BOLIVIA PLURINATIONAL STATE OF" ;

UPDATE geo_temp_union SET country = "BOSNIA AND HERZEGOVINA" where country LIKE "%BOSNI%" ;

UPDATE geo_temp_union SET country = "BRAZIL" where country LIKE "%BREZIL%" ;
UPDATE geo_temp_union SET country = "BRAZIL" where country LIKE "%BRESIL%" ;
UPDATE geo_temp_union SET country = "BRAZIL" where country LIKE "%BRASIL%" ;

UPDATE geo_temp_union SET country = "BULGARIA" where country LIKE "%BULGA%" ;

UPDATE geo_temp_union SET country = "CANADA", state = "QUEBEC" where country LIKE "%QUEBEC%" ;
UPDATE geo_temp_union SET country = "CANADA", state = "QUEBEC" where country = "QC" ;

UPDATE geo_temp_union SET country = "CAPE VERDE" where country LIKE "%CAP%VERD%" ;

UPDATE geo_temp_union SET country = "CHILE" where country LIKE "%CHILE%" ;
UPDATE geo_temp_union SET country = "CHILE" where country LIKE "%CHILI%" ;

UPDATE geo_temp_union SET country = "CHINA" where country = "CHINE" ;
UPDATE geo_temp_union SET country = "CHINA" where country = "P R CHINA" ;
UPDATE geo_temp_union SET country = "CHINA" where country LIKE "%POPUL%CHIN%" ;

UPDATE geo_temp_union SET country = "COCOS ISLANDS" where country LIKE "%COCOS%ISLAND%" ;

UPDATE geo_temp_union SET country = "CONGO KINSHASA" where country LIKE "%KINSHASA%" ;
UPDATE geo_temp_union SET country = "CONGO KINSHASA" where country LIKE "%DEMOCRATI%CONGO%" ;
UPDATE geo_temp_union SET country = "CONGO KINSHASA" where country LIKE "%CONGO%DEMOCRATI%" ;

UPDATE geo_temp_union SET country = "CYPRUS" where country LIKE "%CYPRUS%" ;
UPDATE geo_temp_union SET country = "CYPRUS" where country LIKE "%CHYPRE%" ;

UPDATE geo_temp_union SET country = "COLOMBIA" where country = "COLUMBIA" ;
UPDATE geo_temp_union SET country = "COLOMBIA" where country LIKE "%COLOMBI%" ;

UPDATE geo_temp_union SET country = "CROATIA" where country LIKE "%CROATI%" ;

UPDATE geo_temp_union SET country = "CZECH REPUBLIC" where country LIKE "%CZECH%" ;
UPDATE geo_temp_union SET country = "CZECH REPUBLIC" where country LIKE "%TCHE%" ;

UPDATE geo_temp_union SET country = "DENMARK" where country LIKE "%DENMARK%" ;
UPDATE geo_temp_union SET country = "DENMARK" where country LIKE "%DANEMARK%" ;

UPDATE geo_temp_union SET country = "DENMARK", state= "FEROE ISLANDS" where country LIKE "%FEROE%" ;

UPDATE geo_temp_union SET country = "DJIBOUTI" where country LIKE "%DJIBOUTI%" ;

UPDATE geo_temp_union SET country = "DOMINICAN REPUBLIC" where country LIKE "%REPUB%DOMINI%" ;
UPDATE geo_temp_union SET country = "DOMINICAN REPUBLIC" where country LIKE "%DOMINI%REPUB%" ;
UPDATE geo_temp_union SET country = "DOMINICAN REPUBLIC" where country LIKE "%DOMINICA%" ;

UPDATE geo_temp_union SET country = "ECUADOR" where country LIKE "%ECUADOR%" ;
UPDATE geo_temp_union SET country = "ECUADOR" where country LIKE "EQUATEUR" ;

UPDATE geo_temp_union SET country = "EGYPT" where country LIKE "%EGYPT%" ;

UPDATE geo_temp_union SET country = "ESTONIA" where country LIKE "%ESTON%" ;

UPDATE geo_temp_union SET country = "FIJI" where country LIKE "%FIJI%" ;

UPDATE geo_temp_union SET country = "FINLAND" where country LIKE "%FINLAND%" ;
UPDATE geo_temp_union SET country = "FINLAND" where country LIKE "SUOMI" ;

UPDATE geo_temp_union SET country = "FRANCE" where country LIKE "%FRANCE%" ;
UPDATE geo_temp_union SET country = "FRANCE" where country LIKE "%FRANCIA%" ;
UPDATE geo_temp_union SET country = "FRANCE" where country = "FR" ;

UPDATE geo_temp_union SET country = "FRANCE", city = "PARIS" where country LIKE "%PARIS%" ;
UPDATE geo_temp_union SET country = "FRANCE" where city LIKE "PARIS" AND country LIKE '';
UPDATE geo_temp_union SET country = "FRANCE" where city LIKE "PARIS" AND country LIKE 'OTHER';
UPDATE geo_temp_union SET country = "FRANCE" where city LIKE "%PARIS CEDEX%" AND country LIKE '';
UPDATE geo_temp_union SET country = "FRANCE" where city LIKE "%PARIS CEDEX%" AND country LIKE 'OTHER';
UPDATE geo_temp_union SET country = "FRANCE", city = "PARIS" where country LIKE "%CREIL%" ;

UPDATE geo_temp_union SET country = "GERMANY" where country LIKE "%GERMANY%" ;
UPDATE geo_temp_union SET country = "GERMANY" where country LIKE "%ALLEMA%" ;

UPDATE geo_temp_union SET country = "GERMANY", city = "ZURICH" where country LIKE "%ZURIC%" ;
UPDATE geo_temp_union SET country = "GERMANY", city = "MUNCHEN" where country LIKE "%MUNCHEN%" ;
UPDATE geo_temp_union SET country = "GERMANY", city = "MUNCHEN" where country LIKE "%MUNICH%" ;
UPDATE geo_temp_union SET country = "GERMANY", city = "BERLIN" where country LIKE "%BERLIN%" ;

UPDATE geo_temp_union SET country = "GREECE" where country LIKE "%GREECE%" ;
UPDATE geo_temp_union SET country = "GREECE" where country LIKE "%GREEKE%" ;

UPDATE geo_temp_union SET country = "GUINEA" where country LIKE "%GUINE%CONAK%" ;
UPDATE geo_temp_union SET country = "GUINEA" where country LIKE "%CONAK%GUINE%" ;

UPDATE geo_temp_union SET country = "GUINEA BISSAU" where country LIKE "%GUINE%BISSAU%" ;
UPDATE geo_temp_union SET country = "GUINEA BISSAU" where country LIKE "%BISSAU%GUINE%" ;

UPDATE geo_temp_union SET country = "EQUATORIAL GUINEA" where country LIKE "%GUINE%EQUATO%" ;
UPDATE geo_temp_union SET country = "EQUATORIAL GUINEA" where country LIKE "%EQUATO%GUINE%" ;

UPDATE geo_temp_union SET country = "PAPUA NEW GUINEA" where country LIKE "%GUINE%PAPUA%" ;
UPDATE geo_temp_union SET country = "PAPUA NEW GUINEA" where country LIKE "%PAPUA%GUINE%" ;
UPDATE geo_temp_union SET country = "PAPUA NEW GUINEA" where country LIKE "%GUINE%NEW%" ;
UPDATE geo_temp_union SET country = "PAPUA NEW GUINEA" where country LIKE "%NEW%GUINE%" ;

UPDATE geo_temp_union SET country = "GUYANA" where country LIKE "%GUYAN%FR%" ;
UPDATE geo_temp_union SET country = "GUYANA" where country LIKE "%FR%GUYAN%" ;

UPDATE geo_temp_union SET country = "HONG KONG" where country LIKE "%HONGKON%" ;
UPDATE geo_temp_union SET country = "HONG KONG" where country LIKE "%HONG%KON%" ;
UPDATE geo_temp_union SET country = "HONG KONG" where city = "HONGKONG" ;
UPDATE geo_temp_union SET country = "HONG KONG" where city = "HONGKONG CITY" ;
UPDATE geo_temp_union SET country = "HONG KONG" where city = "HONG KONG" ;
UPDATE geo_temp_union SET country = "HONG KONG" where city = "HONG KONG CITY" ;
UPDATE geo_temp_union SET country = "HONG KONG" where city = "HONG KONG SAR" ;

UPDATE geo_temp_union SET country = "HUNGARY" where country LIKE "%HUNGRI%" ;
UPDATE geo_temp_union SET country = "HUNGARY" where country LIKE "%HONGRI%" ;

UPDATE geo_temp_union SET country = "INDIA" where country = "INDIA" ;
UPDATE geo_temp_union SET country = "INDIA" where country = "INDE" ;
UPDATE geo_temp_union SET country = "INDIA" where country = "LNDIA" ;
UPDATE geo_temp_union SET country = "INDIA", state = "BENGAL" where country LIKE "%BENGAL%" ;

UPDATE geo_temp_union SET country = "IRAN" where country = "ISLAMIC REPUBLIC OF" ;

UPDATE geo_temp_union SET country = "IRAQ" where country ="KURDISTAN" ;

UPDATE geo_temp_union SET country = "IRELAND" where country LIKE "%IRELAND%" ;
UPDATE geo_temp_union SET country = "IRELAND" where country LIKE "%IRLAND%" ;

UPDATE geo_temp_union SET country = "ISRAEL" where country LIKE "%ISRAEL%" ;
UPDATE geo_temp_union SET country = "ISRAEL" where country = "LSRAEL" ;

UPDATE geo_temp_union SET country = "ITALY" where country = "ITALIA" ;
UPDATE geo_temp_union SET country = "ITALY" where country = "ITALIE" ;
UPDATE geo_temp_union SET country = "ITALY" where country = "LTALY" ;
UPDATE geo_temp_union SET country = "ITALY" where country = "ITLAY" ;
UPDATE geo_temp_union SET country = "ITALY" where country = "IT" ;

UPDATE geo_temp_union SET country = "ITALY", city = "ROMA" where country = "ROMA" ;
UPDATE geo_temp_union SET country = "ITALY", city = "ROMA" where country = "ROME" ;
UPDATE geo_temp_union SET country = "ITALY", city = "ROMA" where country = "ROZZANO" ;
UPDATE geo_temp_union SET country = "ITALY", city = "ROMA" where country = "GENOVA" ;
UPDATE geo_temp_union SET country = "ITALY", city = "GENOVA PORTO" where country = "GENOVA PORTO" ;
UPDATE geo_temp_union SET country = "ITALY", city = "ROMA" where country = "MILANO" ;

UPDATE geo_temp_union SET country= "IVORY COAST" where country LIKE "%IVORY%" ;
UPDATE geo_temp_union SET country= "IVORY COAST" where country LIKE "%IVOIRE%" ;

UPDATE geo_temp_union SET country = "JAPAN" where country LIKE "%JAPON%" ;
UPDATE geo_temp_union SET country = "JAPAN" where country LIKE "%JAPAN%" ;

UPDATE geo_temp_union SET country = "JAPAN", city = "TOKYO" where country LIKE "%TOKOYO%" ;
UPDATE geo_temp_union SET country = "JAPAN", city = "TOKYO" where country LIKE "%TOKYO%" ;

UPDATE geo_temp_union SET country = "JORDAN" where country ="JORDANIA" ;
UPDATE geo_temp_union SET country = "JORDAN" where country ="JORDANIE" ;

UPDATE geo_temp_union SET country = "KAZAKHSTAN" where country LIKE "KAZAKSTAN" ;

UPDATE geo_temp_union SET country = "KYRGYZSTAN" where country LIKE "%KYRGYZ%" ;

UPDATE geo_temp_union SET country = "KUWAIT" where country ="KOWAIT" ;
UPDATE geo_temp_union SET country = "KUWAIT" where country ="KOWEIT" ;
UPDATE geo_temp_union SET country = "KUWAIT" where country ="KUWEIT" ;

UPDATE geo_temp_union SET country = "LATVIA" where country LIKE "%LATVIA%" ;
UPDATE geo_temp_union SET country = "LATVIA" where country LIKE "%LETTONNI%" ;
UPDATE geo_temp_union SET country = "LATVIA" where country LIKE "%LETTONI%" ;

UPDATE geo_temp_union SET country = "LATVIA", city = "RIGA" where country LIKE "RIGA" ;

UPDATE geo_temp_union SET country = "LEBANON" where country ="LIBAN" ;

UPDATE geo_temp_union SET country = "LIBYA" where country ="LIBYE" ;

UPDATE geo_temp_union SET country = "LITHUANIA" where country LIKE "%LITHUA%" ;
UPDATE geo_temp_union SET country = "LITHUANIA" where country LIKE "%LITUA%" ;
UPDATE geo_temp_union SET country = "LITHUANIA" where country LIKE "LIETUVA" ;

UPDATE geo_temp_union SET country = "LITHUANIA", city = "KAUNAS", state = "KAUNO APSKRITIS" where country LIKE "%KAUNAS%" ;

UPDATE geo_temp_union SET country = "MACEDONIA" where country ="MACEDOINE" ;
UPDATE geo_temp_union SET country = "MACEDONIA" where country ="NORTH MACEDONIA" ;
UPDATE geo_temp_union SET country = "MACEDONIA" where country ="MACEDONIA" ;

UPDATE geo_temp_union SET country = "MACAO SAR CHINA" where country ="MACAO S A R CHINA" ;
UPDATE geo_temp_union SET country = "MACAO SAR CHINA" where country ="MACAO" ;
UPDATE geo_temp_union SET country = "MACAO SAR CHINA" where country ="MACAU" ;

UPDATE geo_temp_union SET country = "MALAYSIA" where country LIKE "%MALAY%" ;
UPDATE geo_temp_union SET country = "MALAYSIA" where country LIKE "%MALAI%" ;

UPDATE geo_temp_union SET country = "MAURITANIA" where country LIKE "%MAURITA%" ;

UPDATE geo_temp_union SET country = "MAURITIUS" where country LIKE "%MAURITIUS%" ;
UPDATE geo_temp_union SET country = "MAURITIUS" where country LIKE "%MAURICE%" ;

UPDATE geo_temp_union SET country = "MEXICO" where country LIKE "%MEXICO%" ;
UPDATE geo_temp_union SET country = "MEXICO" where country LIKE "%MEXIQUE%" ;

UPDATE geo_temp_union SET country = "MOLDOVA" where country LIKE "MOLDOVA REPUBLIC OF" ;

UPDATE geo_temp_union SET country = "MONACO" where country LIKE "%MONACO%" ;
UPDATE geo_temp_union SET country = "MONACO", city = "MONACO" where country = "MONACO" AND city LIKE "%MONACO%" ;
UPDATE geo_temp_union SET country = "MONACO", city = "MONTE CARLO" where country = "MONACO" AND city LIKE "%MONTE CARLO%" ;
UPDATE geo_temp_union SET country = "MONACO", city = "MONACO" where country = "FRANCE" AND city LIKE "%MONACO%" ;
UPDATE geo_temp_union SET country = "MONACO", city = "MONTE CARLO" where country = "FRANCE" AND city LIKE "%MONTE CARLO%" ;
UPDATE geo_temp_union SET country = "MONACO", city = "MONACO" where country = "OTHER" AND city LIKE "%MONACO%" ;
UPDATE geo_temp_union SET country = "MONACO", city = "MONTE CARLO" where country = "OTHER" AND city LIKE "%MONTE CARLO%" ;

UPDATE geo_temp_union SET country = "MOROCCO" where country LIKE "%MOROCCO%" ;
UPDATE geo_temp_union SET country = "MOROCCO" where country LIKE "%MOROCO%" ;
UPDATE geo_temp_union SET country = "MOROCCO" where country LIKE "%MAROC%" ;

UPDATE geo_temp_union SET country = "NETHERLANDS" where country LIKE "%NETHERLAND%" ;
UPDATE geo_temp_union SET country = "NETHERLANDS" where country LIKE "%NEDERLAND%" ;
UPDATE geo_temp_union SET country = "NETHERLANDS" where country LIKE "%NETHETLAND%" ;
UPDATE geo_temp_union SET country = "NETHERLANDS" where country LIKE "%PAYS%BAS%" ;
UPDATE geo_temp_union SET country = "NETHERLANDS" where country LIKE "%HOLLAND%" ;

UPDATE geo_temp_union SET country = "NORTH KOREA" where country LIKE "%COREE%NORD" ;
UPDATE geo_temp_union SET country = "NORTH KOREA" where country LIKE "%KOREA%NORTH" ;

UPDATE geo_temp_union SET country = "NETHERLANDS" where city LIKE "%DIEMEN%" ;

UPDATE geo_temp_union SET country = "NEW ZEALAND" where country ="NEWZEALAND" ;

UPDATE geo_temp_union SET country = "PALESTINIAN TERRITORY" where country LIKE "PALESTINE" ;
UPDATE geo_temp_union SET country = "PALESTINIAN TERRITORY" where country LIKE "%PALESTI%" ;

UPDATE geo_temp_union SET country = "PHILIPPINES" where country LIKE "PHILIPPINE" ;
UPDATE geo_temp_union SET country = "PHILIPPINES" where country LIKE "PHILIPINE" ;
UPDATE geo_temp_union SET country = "PHILIPPINES" where country LIKE "PHILIPINES" ;
UPDATE geo_temp_union SET country = "PHILIPPINES" where country LIKE "%ILIPPINE%" ;

UPDATE geo_temp_union SET country = "PITCAIRN" where country LIKE "PIT CAIRN" ;
UPDATE geo_temp_union SET country = "PITCAIRN" where country LIKE "PIT CAIRN%" ;
UPDATE geo_temp_union SET country = "PITCAIRN" where country LIKE "PITCAIRN%" ;

UPDATE geo_temp_union SET country = "POLAND" where country LIKE "%POLAND%" ;
UPDATE geo_temp_union SET country = "POLAND" where country LIKE "%POLOGNE%" ;

UPDATE geo_temp_union SET country = "PORTUGAL" where country LIKE "PT" ;
UPDATE geo_temp_union SET country = "PORTUGAL" where country LIKE "%PORTUGAL%" ;
UPDATE geo_temp_union SET country = "PORTUGAL", state = "ACORES" where country LIKE "%ACORE%" ;

UPDATE geo_temp_union SET country = "SOUTH KOREA" where country LIKE "%KOREA%SOUTH%" ;
UPDATE geo_temp_union SET country = "SOUTH KOREA" where country LIKE "%KOREA%REPUBLIC%" ;
UPDATE geo_temp_union SET country = "SOUTH KOREA" where country LIKE "%REPUBLIC%KOREA%" ;
UPDATE geo_temp_union SET country = "SOUTH KOREA" where country LIKE "%COREE%SUD" ;

UPDATE geo_temp_union SET country = "REUNION" where country LIKE "%REUNION%" ;

UPDATE geo_temp_union SET country = "ROMANIA" where country LIKE "%ROMANI%" ;
UPDATE geo_temp_union SET country = "ROMANIA" where country LIKE "%ROUMANI%" ;

UPDATE geo_temp_union SET country = "RUSSIA" where country LIKE "RUSSIAN FEDERATION" ;
UPDATE geo_temp_union SET country = "RUSSIA" where country LIKE "%RUSSI%FEDE%" ;
UPDATE geo_temp_union SET country = "RUSSIA" where country LIKE "%FEDE%RUSSI%" ;
UPDATE geo_temp_union SET country = "RUSSIA" where country = "URSS" ;
UPDATE geo_temp_union SET country = "RUSSIA" where country LIKE "%URSS%" ;
UPDATE geo_temp_union SET country = "RUSSIA" where country = "U R S S" ;
UPDATE geo_temp_union SET country = "RUSSIA" where country LIKE "%U R S S%" ;

UPDATE geo_temp_union SET country = "SALVADOR" where country ="EL SALVADOR" ;

UPDATE geo_temp_union SET country = "SAMOA" where country LIKE "%SAMOA%" AND country NOT LIKE 'AMERICAN SAMOA' ;

UPDATE geo_temp_union SET country = "SAUDI ARABIA" where country LIKE "ARABIA SAUDI" ;
UPDATE geo_temp_union SET country = "SAUDI ARABIA" where country LIKE "%SAUD%ARAB%" ;
UPDATE geo_temp_union SET country = "SAUDI ARABIA" where country LIKE "%ARAB%SAUD%" ;
UPDATE geo_temp_union SET country = "SAUDI ARABIA" where country LIKE "%SAOU%ARAB%" ;
UPDATE geo_temp_union SET country = "SAUDI ARABIA" where country LIKE "%ARAB%SAOU%" ;
UPDATE geo_temp_union SET country = "SAUDI ARABIA" where country LIKE "KSA" ;

UPDATE geo_temp_union SET country = "SAINT BARTHELEMY" where country LIKE "%BARTHELEMY%" ;

UPDATE geo_temp_union SET country = "SERBIA" where country LIKE "%SERBI%" ;
UPDATE geo_temp_union SET country = "SERBIA" where country LIKE "%YUGOSLA%" ;
UPDATE geo_temp_union SET country = "SERBIA" where country LIKE "%YOUGOSLA%" ;

UPDATE geo_temp_union SET country = "SINGAPORE" where country LIKE "%SINGAPO%" ;

UPDATE geo_temp_union SET country = "SLOVAKIA" where country ="SLOVAQUIE" ;
UPDATE geo_temp_union SET country = "SLOVAKIA" where country ="ESLOVAQUIA" ;
UPDATE geo_temp_union SET country = "SLOVAKIA" where country ="SLOVAK REPUBLIC" ;

UPDATE geo_temp_union SET country = "SLOVENIA" where country LIKE "%SLOVEN%" ;

UPDATE geo_temp_union SET country = "SOUTH AFRICA" where country LIKE "%SOUTH%AFRIC%" ;
UPDATE geo_temp_union SET country = "SOUTH AFRICA" where country LIKE "%AFRI%SUD%" ;

UPDATE geo_temp_union SET country = "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS" where country LIKE "%SOUTH%SANDWICH%ISLAND%" ;
UPDATE geo_temp_union SET country = "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS" where country LIKE "%SANDWICH%ISLAND%SOUTH%" ;

UPDATE geo_temp_union SET country = "SPAIN" where country LIKE "%SPAIN%" ;
UPDATE geo_temp_union SET country = "SPAIN" where country LIKE "%ESPA%" ;
UPDATE geo_temp_union SET country = "SPAIN" where country LIKE "SPAM" ;
UPDATE geo_temp_union SET country = "SPAIN" where country LIKE "ES" ;

UPDATE geo_temp_union SET country = "SPAIN", city = "MADRID" where country LIKE "%MADRID%" ;

UPDATE geo_temp_union SET country = "SWITZERLAND" where country ="SUIZA" ;
UPDATE geo_temp_union SET country = "SWITZERLAND" where country ="SUISSE" ;

UPDATE geo_temp_union SET country = "SWITZERLAND", city = "GENEVA" where country LIKE "%GENEV%" ;

UPDATE geo_temp_union SET country = "SYRIA" where country ="SYRIE" ;

UPDATE geo_temp_union SET country = "ST LUCIA" where country = "SAINT LUCIA" ;

UPDATE geo_temp_union SET country = "ST KITTS" where country = "SAINT KITTS" ;

UPDATE geo_temp_union SET country = "SURINAME" where country = "SURINAM" ;

UPDATE geo_temp_union SET country = "SWEDEN" where country LIKE "%SWEDEN%" ;
UPDATE geo_temp_union SET country = "SWEDEN" where country LIKE "%SUEDE%" ;
UPDATE geo_temp_union SET country = "SWEDEN" where country LIKE "SVERIGE" ;

UPDATE geo_temp_union SET country = "SWITZERLAND" where country LIKE "%SWI%" ;
UPDATE geo_temp_union SET country = "SWITZERLAND" where country LIKE "%SUIS%" ;

UPDATE geo_temp_union SET country = "TAJIKISTAN" where country LIKE "%TAJIK%" ;
UPDATE geo_temp_union SET country = "TAJIKISTAN" where country LIKE "%TADJIK%" ;

UPDATE geo_temp_union SET country = "TAIWAN" where country LIKE "%TAIWAN%" ;

UPDATE geo_temp_union SET country = "THAILAND" where country LIKE "%THAILAND%" ;

UPDATE geo_temp_union SET country = "TURKEY" where country LIKE "%TURKEY%" ;
UPDATE geo_temp_union SET country = "TURKEY" where country LIKE "%TURKIYE%" ;
UPDATE geo_temp_union SET country = "TURKEY" where country LIKE "%TURQUI%" ;

UPDATE geo_temp_union SET country = "TURKEY", city = "ISTANBUL" where country LIKE "%ISTANBUL%" ;

UPDATE geo_temp_union SET country = "TUNISIA" where country LIKE "%TUNISI%" ;

UPDATE geo_temp_union SET country = "TUNISIA", city = "TUNIS" where country = "TUNIS" ;

UPDATE geo_temp_union SET country = "UKRAINE" where country LIKE "%UCRANIA%" ;
UPDATE geo_temp_union SET country = "UKRAINE" where country LIKE "%UKRAINE%" ;

UPDATE geo_temp_union SET country = "UKRAINE", city = "KIEV" where country LIKE "%KIEV%" ;

UPDATE geo_temp_union SET country = "UNITED ARAB EMIRATES" where country LIKE "%ARAB%EMIRAT%" ;
UPDATE geo_temp_union SET country = "UNITED ARAB EMIRATES" where country LIKE "%EMIRAT%ARAB%" ;
UPDATE geo_temp_union SET country = "UNITED ARAB EMIRATES" where country = "UAE" ;
UPDATE geo_temp_union SET country = "UNITED ARAB EMIRATES" where country = "U A E" ;
UPDATE geo_temp_union SET country = "UNITED ARAB EMIRATES" where city = "DUBAI" ;

UPDATE geo_temp_union SET country = "UNITED ARAB EMIRATES", city = "DUBAI" where country LIKE "%DUBAI%" ;

UPDATE geo_temp_union SET country = "UNITED STATES" where country = "STATES" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "STATE" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "AMERICA" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "AMERIQUE" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "AMERIQUES" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "UNITED STATE" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "UNITED STATES" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "US" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "U S" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "USA" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "UK USA" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "U S A" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "ESTADOS UNIDOS" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "UNITED STATES OF AMERICA" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country = "UNITED STATE OF AMERICA" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country LIKE "%ETAT%UNI%" ;
UPDATE geo_temp_union SET country = "UNITED STATES" where country LIKE "%UNITED%AMERICA%" ;

UPDATE geo_temp_union SET country = "UNITED STATES", state="UNITED STATES MINOR OUTLYING ISLANDS" where country ="UNITED STATES MINOR OUTLYING ISLANDS" ;
UPDATE geo_temp_union SET country = "UNITED STATES", state="HAWAII" where country LIKE "%HAWAI%" ;

UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country LIKE "%ROYAUME%UNI%" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country LIKE "%ROYAUME%UHI%" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country LIKE "%UNITED%KINDOM%" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country LIKE "%UNITED%KINGDON%" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country LIKE "%ENGLAND%" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country = "REINO UNIDO" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country = "GB" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country = "G B" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country = "UK" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country = "U K" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country = "UK" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country = "GREAT BRITAIN" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country LIKE "%GRAND%BRETA%" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country LIKE "%ANGLAIS%" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM" where country LIKE "WIELKA BRYTANIA" ;

UPDATE geo_temp_union SET country = "UNITED KINGDOM", state="SCOTLAND" where country = "SCOTLAND" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM", state="ISLE OF MAN"  where country = "ISLE OF MAN" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM", state="WALES" where country = "WALES" ;

UPDATE geo_temp_union SET country = "UNITED KINGDOM", city = "LONDON" where country LIKE "%LONDON%" ;
UPDATE geo_temp_union SET country = "UNITED KINGDOM", city = "LONDON" where country LIKE "%LONDRE%" ;

UPDATE geo_temp_union SET country = "US VIRGIN ISLANDS" where country ="U S VIRGIN ISLANDS" ;

UPDATE geo_temp_union SET country = "VENEZUELA" where country LIKE "%VENEZUELA%" ;
UPDATE geo_temp_union SET country = "VENEZUELA" where country LIKE "VENEZUELA (BOLIVARIAN REPUBLIC OF)" ;
UPDATE geo_temp_union SET country = "VENEZUELA" where country LIKE "VENEZUELA BOLIVARIAN REPUBLIC OF" ;
UPDATE geo_temp_union SET country = "VENEZUELA" where country LIKE "BOLIVARIAN REPUBLIC OF VENEZUELA" ;

UPDATE geo_temp_union SET country = "VIETNAM" where country LIKE "%VIETNAM%" ;
UPDATE geo_temp_union SET country = "VIETNAM" where country LIKE "%VIET%NAM%" ;

UPDATE geo_temp_union SET country = "YEMEN" where country LIKE "%YEMEN%" ;
UPDATE geo_temp_union SET country = "YEMEN" where country LIKE "%YMEN%" ;

/* VIDANGE OTHER DES PAYS NON-CONTROLES - COUNTRY */
UPDATE geo_temp_union SET country = "OTHER" where country NOT IN ('AFGHANISTAN','ALAND ISLANDS','ALBANIA','ALGERIA','AMERICAN SAMOA','ANDORRA','ANGOLA','ANGUILLA','ANTARCTICA','ANTIGUA AND BARBUDA','ARGENTINA','ARMENIA','ARUBA','AUSTRALIA','AUSTRIA','AZERBAIJAN','BAHAMAS','BAHRAIN','BANGLADESH','BARBADOS','BELARUS','BELGIUM','BELIZE','BENIN','BERMUDA','BHUTAN','BOLIVIA','BOSNIA AND HERZEGOVINA','BOTSWANA','BOUVET ISLAND','BRAZIL','BRITISH INDIAN OCEAN TERRITORY','BRITISH VIRGIN ISLANDS','BRUNEI','BULGARIA','BURKINA FASO','BURUNDI','CAMBODIA','CAMEROON','CANADA','CAPE VERDE','CAYMAN ISLANDS','CENTRAL AFRICAN REPUBLIC','CHAD','CHILE','CHINA','CHRISTMAS ISLAND','COCOS ISLANDS','COLOMBIA','COMOROS','CONGO BRAZZAVILLE','CONGO KINSHASA','COOK ISLANDS','COSTA RICA','CROATIA','CUBA','CYPRUS','CZECH REPUBLIC','DENMARK','DJIBOUTI','DOMINICA','DOMINICAN REPUBLIC','EAST TIMOR','ECUADOR','EGYPT','EL SALVADOR','SALVADOR','EQUATORIAL GUINEA','ERITREA','ESTONIA','ETHIOPIA','FALKLAND ISLANDS','FAROE ISLANDS','FIJI','FINLAND','FRANCE','FRENCH GUIANA','FRENCH POLYNESIA','GABON','GAMBIA','GEORGIA','GERMANY','GHANA','GIBRALTAR','GREECE','GREENLAND','GRENADA','GUADELOUPE','GUAM','GUATEMALA','GUERNSEY','GUINEA','GUINEA BISSAU','GUYANA','HAITI','HEARD ISLAND AND MCDONALD ISLANDS','HONDURAS','HONG KONG','HUNGARY','ICELAND','INDIA','INDONESIA','IRAN','IRAQ','IRELAND','ISLE OF MAN','ISRAEL','ITALY','IVORY COAST','JAMAICA','JAPAN','JERSEY','JORDAN','KAZAKHSTAN','KENYA','KIRIBATI','KOSOVO','KUWAIT','KYRGYZSTAN','LAOS','LATVIA','LEBANON','LESOTHO','LIBERIA','LIBYA','LIECHTENSTEIN','LITHUANIA','LUXEMBOURG','MACAO SAR CHINA','MACEDONIA','MADAGASCAR','MALAWI','MALAYSIA','MALDIVES','MALI','MALTA','MARSHALL ISLANDS','MARTINIQUE','MAURITANIA','MAURITIUS','MAYOTTE','MEXICO','MICRONESIA','MOLDOVA','MONACO','MONGOLIA','MONTENEGRO','MONTSERRAT','MOROCCO','MOZAMBIQUE','MYANMAR','NAMIBIA','NAURU','NEPAL','NETHERLANDS','NETHERLANDS ANTILLES','NEW CALEDONIA','NEW ZEALAND','NICARAGUA','NIGER','NIGERIA','NIUE','NORFOLK ISLAND','NORTH KOREA','NORTHERN MARIANA ISLANDS','NORWAY','OMAN','PAKISTAN','PALAU','PALESTINIAN TERRITORY','PANAMA','PAPUA NEW GUINEA','PARAGUAY','PERU','PHILIPPINES','PITCAIRN','POLAND','PORTUGAL','PUERTO RICO','QATAR','REUNION','ROMANIA','RUSSIA','RWANDA','SAINT HELENA','SAINT KITTS AND NEVIS','SAINT LUCIA','SAINT PIERRE AND MIQUELON','SAINT VINCENT AND THE GRENADINES','SAMOA','SAN MARINO','SAO TOME AND PRINCIPE','SAUDI ARABIA','SENEGAL','SERBIA','SEYCHELLES','SIERRA LEONE','SINGAPORE','SLOVAKIA','SLOVENIA','SOLOMON ISLANDS','SOMALIA','SOUTH AFRICA','SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS','SOUTH KOREA','SPAIN','SRI LANKA','SUDAN','SURINAME','SVALBARD AND JAN MAYEN','SWAZILAND','SWEDEN','SWITZERLAND','SYRIA','TAIWAN','TAJIKISTAN','TANZANIA','THAILAND','TOGO','TOKELAU','TONGA','TRINIDAD AND TOBAGO','TUNISIA','TURKEY','TURKMENISTAN','TURKS AND CAICOS ISLANDS','TUVALU','UGANDA','UKRAINE','UNITED ARAB EMIRATES','UNITED KINGDOM','UNITED STATES','UNITED STATES MINOR OUTLYING ISLANDS','URUGUAY','US VIRGIN ISLANDS','UZBEKISTAN','VANUATU','VATICAN','VENEZUELA','VIETNAM','WALLIS AND FUTUNA','WESTERN SAHARA','YEMEN','ZAMBIA','ZIMBABWE') ;


/* REMPLIR LES COUNTRY OTHER GRACE AU SUFFIXE EMAIL - CHAMP EMAIL */

UPDATE geo_temp_union SET country = 'ANDORRA' WHERE country = 'OTHER' AND email LIKE '%.ad' ;
UPDATE geo_temp_union SET country = 'UNITED ARAB EMIRATES' WHERE country = 'OTHER' AND email LIKE '%.ae' ;
UPDATE geo_temp_union SET country = 'AFGHANISTAN' WHERE country = 'OTHER' AND email LIKE '%.af' ;
UPDATE geo_temp_union SET country = 'ANTIGUA AND BARBUDA' WHERE country = 'OTHER' AND email LIKE '%.ag' ;
UPDATE geo_temp_union SET country = 'ANGUILLA' WHERE country = 'OTHER' AND email LIKE '%.ai' ;
UPDATE geo_temp_union SET country = 'ALBANIA' WHERE country = 'OTHER' AND email LIKE '%.al' ;
UPDATE geo_temp_union SET country = 'ARMENIA' WHERE country = 'OTHER' AND email LIKE '%.am' ;
UPDATE geo_temp_union SET country = 'NETHERLANDS ANTILLES' WHERE country = 'OTHER' AND email LIKE '%.an' ;
UPDATE geo_temp_union SET country = 'ANGOLA' WHERE country = 'OTHER' AND email LIKE '%.ao' ;
UPDATE geo_temp_union SET country = 'ANTARCTICA' WHERE country = 'OTHER' AND email LIKE '%.aq' ;
UPDATE geo_temp_union SET country = 'ARGENTINA' WHERE country = 'OTHER' AND email LIKE '%.ar' ;
UPDATE geo_temp_union SET country = 'AMERICAN SAMOA' WHERE country = 'OTHER' AND email LIKE '%.as' ;
UPDATE geo_temp_union SET country = 'AUSTRIA' WHERE country = 'OTHER' AND email LIKE '%.at' ;
UPDATE geo_temp_union SET country = 'AUSTRALIA' WHERE country = 'OTHER' AND email LIKE '%.au' ;
UPDATE geo_temp_union SET country = 'ARUBA' WHERE country = 'OTHER' AND email LIKE '%.aw' ;
UPDATE geo_temp_union SET country = 'AZERBAIJAN' WHERE country = 'OTHER' AND email LIKE '%.az' ;
UPDATE geo_temp_union SET country = 'BOSNIA AND HERZEGOWINA' WHERE country = 'OTHER' AND email LIKE '%.ba' ;
UPDATE geo_temp_union SET country = 'BARBADOS' WHERE country = 'OTHER' AND email LIKE '%.bb' ;
UPDATE geo_temp_union SET country = 'BANGLADESH' WHERE country = 'OTHER' AND email LIKE '%.bd' ;
UPDATE geo_temp_union SET country = 'BELGIUM' WHERE country = 'OTHER' AND email LIKE '%.be' ;
UPDATE geo_temp_union SET country = 'BURKINA FASO' WHERE country = 'OTHER' AND email LIKE '%.bf' ;
UPDATE geo_temp_union SET country = 'BULGARIA' WHERE country = 'OTHER' AND email LIKE '%.bg' ;
UPDATE geo_temp_union SET country = 'BAHRAIN' WHERE country = 'OTHER' AND email LIKE '%.bh' ;
UPDATE geo_temp_union SET country = 'BURUNDI' WHERE country = 'OTHER' AND email LIKE '%.bi' ;
UPDATE geo_temp_union SET country = 'BENIN' WHERE country = 'OTHER' AND email LIKE '%.bj' ;
UPDATE geo_temp_union SET country = 'BERMUDA' WHERE country = 'OTHER' AND email LIKE '%.bm' ;
UPDATE geo_temp_union SET country = 'BRUNEI' WHERE country = 'OTHER' AND email LIKE '%.bn' ;
UPDATE geo_temp_union SET country = 'BOLIVIA' WHERE country = 'OTHER' AND email LIKE '%.bo' ;
UPDATE geo_temp_union SET country = 'BRAZIL' WHERE country = 'OTHER' AND email LIKE '%.br' ;
UPDATE geo_temp_union SET country = 'BAHAMAS' WHERE country = 'OTHER' AND email LIKE '%.bs' ;
UPDATE geo_temp_union SET country = 'BHUTAN' WHERE country = 'OTHER' AND email LIKE '%.bt' ;
UPDATE geo_temp_union SET country = 'BOUVET ISLAND' WHERE country = 'OTHER' AND email LIKE '%.bv' ;
UPDATE geo_temp_union SET country = 'BOTSWANA' WHERE country = 'OTHER' AND email LIKE '%.bw' ;
UPDATE geo_temp_union SET country = 'BELARUS' WHERE country = 'OTHER' AND email LIKE '%.by' ;
UPDATE geo_temp_union SET country = 'BELIZE' WHERE country = 'OTHER' AND email LIKE '%.bz' ;
UPDATE geo_temp_union SET country = 'CANADA' WHERE country = 'OTHER' AND email LIKE '%.ca' ;
UPDATE geo_temp_union SET country = 'COCOS ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.cc' ;
UPDATE geo_temp_union SET country = 'CENTRAL AFRICAN REPUBLIC' WHERE country = 'OTHER' AND email LIKE '%.cf' ;
UPDATE geo_temp_union SET country = 'CONGO' WHERE country = 'OTHER' AND email LIKE '%.cg' ;
UPDATE geo_temp_union SET country = 'SWITZERLAND' WHERE country = 'OTHER' AND email LIKE '%.ch' ;
UPDATE geo_temp_union SET country = 'IVORY COAST' WHERE country = 'OTHER' AND email LIKE '%.ci' ;
UPDATE geo_temp_union SET country = 'COOK ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.ck' ;
UPDATE geo_temp_union SET country = 'CHILE' WHERE country = 'OTHER' AND email LIKE '%.cl' ;
UPDATE geo_temp_union SET country = 'CAMEROON' WHERE country = 'OTHER' AND email LIKE '%.cm' ;
UPDATE geo_temp_union SET country = 'CHINA' WHERE country = 'OTHER' AND email LIKE '%.cn' ;
UPDATE geo_temp_union SET country = 'COLOMBIA' WHERE country = 'OTHER' AND email LIKE '%.co' ;
UPDATE geo_temp_union SET country = 'COSTA RICA' WHERE country = 'OTHER' AND email LIKE '%.cr' ;
UPDATE geo_temp_union SET country = 'CUBA' WHERE country = 'OTHER' AND email LIKE '%.cu' ;
UPDATE geo_temp_union SET country = 'CAPE VERDE' WHERE country = 'OTHER' AND email LIKE '%.cv' ;
UPDATE geo_temp_union SET country = 'CHRISTMAS ISLAND' WHERE country = 'OTHER' AND email LIKE '%.cx' ;
UPDATE geo_temp_union SET country = 'CYPRUS' WHERE country = 'OTHER' AND email LIKE '%.cy' ;
UPDATE geo_temp_union SET country = 'CZECH REPUBLIC' WHERE country = 'OTHER' AND email LIKE '%.cz' ;
UPDATE geo_temp_union SET country = 'GERMANY' WHERE country = 'OTHER' AND email LIKE '%.de' ;
UPDATE geo_temp_union SET country = 'DJIBOUTI' WHERE country = 'OTHER' AND email LIKE '%.dj' ;
UPDATE geo_temp_union SET country = 'DENMARK' WHERE country = 'OTHER' AND email LIKE '%.dk' ;
UPDATE geo_temp_union SET country = 'DOMINICA' WHERE country = 'OTHER' AND email LIKE '%.dm' ;
UPDATE geo_temp_union SET country = 'DOMINICAN REPUBLIC' WHERE country = 'OTHER' AND email LIKE '%.do' ;
UPDATE geo_temp_union SET country = 'ALGERIA' WHERE country = 'OTHER' AND email LIKE '%.dz' ;
UPDATE geo_temp_union SET country = 'ECUADOR' WHERE country = 'OTHER' AND email LIKE '%.ec' ;
UPDATE geo_temp_union SET country = 'ESTONIA' WHERE country = 'OTHER' AND email LIKE '%.ee' ;
UPDATE geo_temp_union SET country = 'EGYPT' WHERE country = 'OTHER' AND email LIKE '%.eg' ;
UPDATE geo_temp_union SET country = 'WESTERN SAHARA' WHERE country = 'OTHER' AND email LIKE '%.eh' ;
UPDATE geo_temp_union SET country = 'ERITREA' WHERE country = 'OTHER' AND email LIKE '%.er' ;
UPDATE geo_temp_union SET country = 'SPAIN' WHERE country = 'OTHER' AND email LIKE '%.es' ;
UPDATE geo_temp_union SET country = 'ETHIOPIA' WHERE country = 'OTHER' AND email LIKE '%.et' ;
UPDATE geo_temp_union SET country = 'FINLAND' WHERE country = 'OTHER' AND email LIKE '%.fi' ;
UPDATE geo_temp_union SET country = 'FIJI' WHERE country = 'OTHER' AND email LIKE '%.fj' ;
UPDATE geo_temp_union SET country = 'FALKLAND ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.fk' ;
UPDATE geo_temp_union SET country = 'MICRONESIA' WHERE country = 'OTHER' AND email LIKE '%.fm' ;
UPDATE geo_temp_union SET country = 'DENMARK' WHERE country = 'OTHER' AND email LIKE '%.fo' ;
UPDATE geo_temp_union SET country = 'FRANCE' WHERE country = 'OTHER' AND email LIKE '%.fr' ;
UPDATE geo_temp_union SET country = 'GABON' WHERE country = 'OTHER' AND email LIKE '%.ga' ;
UPDATE geo_temp_union SET country = 'UNITED KINGDOM OF GREAT BRITAIN & N IRELAND' WHERE country = 'OTHER' AND email LIKE '%.gb' ;
UPDATE geo_temp_union SET country = 'GRENADA' WHERE country = 'OTHER' AND email LIKE '%.gd' ;
UPDATE geo_temp_union SET country = 'GEORGIA' WHERE country = 'OTHER' AND email LIKE '%.ge' ;
UPDATE geo_temp_union SET country = 'FRENCH GUIANA' WHERE country = 'OTHER' AND email LIKE '%.gf' ;
UPDATE geo_temp_union SET country = 'GHANA' WHERE country = 'OTHER' AND email LIKE '%.gh' ;
UPDATE geo_temp_union SET country = 'GIBRALTAR' WHERE country = 'OTHER' AND email LIKE '%.gi' ;
UPDATE geo_temp_union SET country = 'GREENLAND' WHERE country = 'OTHER' AND email LIKE '%.gl' ;
UPDATE geo_temp_union SET country = 'GAMBIA' WHERE country = 'OTHER' AND email LIKE '%.gm' ;
UPDATE geo_temp_union SET country = 'GUINEA' WHERE country = 'OTHER' AND email LIKE '%.gn' ;
UPDATE geo_temp_union SET country = 'GUADALOUPE' WHERE country = 'OTHER' AND email LIKE '%.gp' ;
UPDATE geo_temp_union SET country = 'EQUATORIAL GUINEA' WHERE country = 'OTHER' AND email LIKE '%.gq' ;
UPDATE geo_temp_union SET country = 'GREECE' WHERE country = 'OTHER' AND email LIKE '%.gr' ;
UPDATE geo_temp_union SET country = 'SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.gs' ;
UPDATE geo_temp_union SET country = 'GUATEMALA' WHERE country = 'OTHER' AND email LIKE '%.gt' ;
UPDATE geo_temp_union SET country = 'GUAM' WHERE country = 'OTHER' AND email LIKE '%.gu' ;
UPDATE geo_temp_union SET country = 'GUINEA BISSAU' WHERE country = 'OTHER' AND email LIKE '%.gw' ;
UPDATE geo_temp_union SET country = 'GUYANA' WHERE country = 'OTHER' AND email LIKE '%.gy' ;
UPDATE geo_temp_union SET country = 'HONG KONG' WHERE country = 'OTHER' AND email LIKE '%.hk' ;
UPDATE geo_temp_union SET country = 'HEARD AND MCDONALD ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.hm' ;
UPDATE geo_temp_union SET country = 'HONDURAS' WHERE country = 'OTHER' AND email LIKE '%.hn' ;
UPDATE geo_temp_union SET country = 'CROATIA' WHERE country = 'OTHER' AND email LIKE '%.hr' ;
UPDATE geo_temp_union SET country = 'HAITI' WHERE country = 'OTHER' AND email LIKE '%.ht' ;
UPDATE geo_temp_union SET country = 'HUNGARY' WHERE country = 'OTHER' AND email LIKE '%.hu' ;
UPDATE geo_temp_union SET country = 'INDONESIA' WHERE country = 'OTHER' AND email LIKE '%.id' ;
UPDATE geo_temp_union SET country = 'IRELAND' WHERE country = 'OTHER' AND email LIKE '%.ie' ;
UPDATE geo_temp_union SET country = 'ISRAEL' WHERE country = 'OTHER' AND email LIKE '%.il' ;
UPDATE geo_temp_union SET country = 'INDIA' WHERE country = 'OTHER' AND email LIKE '%.in' ;
UPDATE geo_temp_union SET country = 'BRITISH INDIAN OCEAN TERRITORY' WHERE country = 'OTHER' AND email LIKE '%.io' ;
UPDATE geo_temp_union SET country = 'IRAQ' WHERE country = 'OTHER' AND email LIKE '%.iq' ;
UPDATE geo_temp_union SET country = 'IRAN' WHERE country = 'OTHER' AND email LIKE '%.ir' ;
UPDATE geo_temp_union SET country = 'ICELAND' WHERE country = 'OTHER' AND email LIKE '%.is' ;
UPDATE geo_temp_union SET country = 'ITALY' WHERE country = 'OTHER' AND email LIKE '%.it' ;
UPDATE geo_temp_union SET country = 'JAMAICA' WHERE country = 'OTHER' AND email LIKE '%.jm' ;
UPDATE geo_temp_union SET country = 'JORDAN' WHERE country = 'OTHER' AND email LIKE '%.jo' ;
UPDATE geo_temp_union SET country = 'JAPAN' WHERE country = 'OTHER' AND email LIKE '%.jp' ;
UPDATE geo_temp_union SET country = 'KENYA' WHERE country = 'OTHER' AND email LIKE '%.ke' ;
UPDATE geo_temp_union SET country = 'KYRGYZ REPUBLIC' WHERE country = 'OTHER' AND email LIKE '%.kg' ;
UPDATE geo_temp_union SET country = 'CAMBODIA' WHERE country = 'OTHER' AND email LIKE '%.kh' ;
UPDATE geo_temp_union SET country = 'KIRIBATI' WHERE country = 'OTHER' AND email LIKE '%.ki' ;
UPDATE geo_temp_union SET country = 'COMOROS' WHERE country = 'OTHER' AND email LIKE '%.km' ;
UPDATE geo_temp_union SET country = 'SAINT KITTS AND NEVIS' WHERE country = 'OTHER' AND email LIKE '%.kn' ;
UPDATE geo_temp_union SET country = 'KOREA' WHERE country = 'OTHER' AND email LIKE '%.kp' ;
UPDATE geo_temp_union SET country = 'KOREA' WHERE country = 'OTHER' AND email LIKE '%.kr' ;
UPDATE geo_temp_union SET country = 'KUWAIT' WHERE country = 'OTHER' AND email LIKE '%.kw' ;
UPDATE geo_temp_union SET country = 'CAYMAN ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.ky' ;
UPDATE geo_temp_union SET country = 'KAZAKHSTAN' WHERE country = 'OTHER' AND email LIKE '%.kz' ;
UPDATE geo_temp_union SET country = 'LAOS' WHERE country = 'OTHER' AND email LIKE '%.la' ;
UPDATE geo_temp_union SET country = 'LEBANON' WHERE country = 'OTHER' AND email LIKE '%.lb' ;
UPDATE geo_temp_union SET country = 'SAINT LUCIA' WHERE country = 'OTHER' AND email LIKE '%.lc' ;
UPDATE geo_temp_union SET country = 'LIECHTENSTEIN' WHERE country = 'OTHER' AND email LIKE '%.li' ;
UPDATE geo_temp_union SET country = 'SRI LANKA' WHERE country = 'OTHER' AND email LIKE '%.lk' ;
UPDATE geo_temp_union SET country = 'LIBERIA' WHERE country = 'OTHER' AND email LIKE '%.lr' ;
UPDATE geo_temp_union SET country = 'LESOTHO' WHERE country = 'OTHER' AND email LIKE '%.ls' ;
UPDATE geo_temp_union SET country = 'LITHUANIA' WHERE country = 'OTHER' AND email LIKE '%.lt' ;
UPDATE geo_temp_union SET country = 'LUXEMBOURG' WHERE country = 'OTHER' AND email LIKE '%.lu' ;
UPDATE geo_temp_union SET country = 'LATVIA' WHERE country = 'OTHER' AND email LIKE '%.lv' ;
UPDATE geo_temp_union SET country = 'LIBYA' WHERE country = 'OTHER' AND email LIKE '%.ly' ;
UPDATE geo_temp_union SET country = 'MOROCCO' WHERE country = 'OTHER' AND email LIKE '%.ma' ;
UPDATE geo_temp_union SET country = 'MONACO' WHERE country = 'OTHER' AND email LIKE '%.mc' ;
UPDATE geo_temp_union SET country = 'MOLDOVA' WHERE country = 'OTHER' AND email LIKE '%.md' ;
UPDATE geo_temp_union SET country = 'MADAGASCAR' WHERE country = 'OTHER' AND email LIKE '%.mg' ;
UPDATE geo_temp_union SET country = 'MARSHALL ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.mh' ;
UPDATE geo_temp_union SET country = 'MACEDONIA' WHERE country = 'OTHER' AND email LIKE '%.mk' ;
UPDATE geo_temp_union SET country = 'MALI' WHERE country = 'OTHER' AND email LIKE '%.ml' ;
UPDATE geo_temp_union SET country = 'MYANMAR' WHERE country = 'OTHER' AND email LIKE '%.mm' ;
UPDATE geo_temp_union SET country = 'MONGOLIA' WHERE country = 'OTHER' AND email LIKE '%.mn' ;
UPDATE geo_temp_union SET country = 'MACAU' WHERE country = 'OTHER' AND email LIKE '%.mo' ;
UPDATE geo_temp_union SET country = 'NORTHERN MARIANA ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.mp' ;
UPDATE geo_temp_union SET country = 'MARTINIQUE' WHERE country = 'OTHER' AND email LIKE '%.mq' ;
UPDATE geo_temp_union SET country = 'MAURITANIA' WHERE country = 'OTHER' AND email LIKE '%.mr' ;
UPDATE geo_temp_union SET country = 'MONTSERRAT' WHERE country = 'OTHER' AND email LIKE '%.ms' ;
UPDATE geo_temp_union SET country = 'MALTA' WHERE country = 'OTHER' AND email LIKE '%.mt' ;
UPDATE geo_temp_union SET country = 'MAURITIUS' WHERE country = 'OTHER' AND email LIKE '%.mu' ;
UPDATE geo_temp_union SET country = 'MALDIVES' WHERE country = 'OTHER' AND email LIKE '%.mv' ;
UPDATE geo_temp_union SET country = 'MALAWI' WHERE country = 'OTHER' AND email LIKE '%.mw' ;
UPDATE geo_temp_union SET country = 'MEXICO' WHERE country = 'OTHER' AND email LIKE '%.mx' ;
UPDATE geo_temp_union SET country = 'MALAYSIA' WHERE country = 'OTHER' AND email LIKE '%.my' ;
UPDATE geo_temp_union SET country = 'MOZAMBIQUE' WHERE country = 'OTHER' AND email LIKE '%.mz' ;
UPDATE geo_temp_union SET country = 'NAMIBIA' WHERE country = 'OTHER' AND email LIKE '%.na' ;
UPDATE geo_temp_union SET country = 'NEW CALEDONIA' WHERE country = 'OTHER' AND email LIKE '%.nc' ;
UPDATE geo_temp_union SET country = 'NIGER' WHERE country = 'OTHER' AND email LIKE '%.ne' ;
UPDATE geo_temp_union SET country = 'NORFOLK ISLAND' WHERE country = 'OTHER' AND email LIKE '%.nf' ;
UPDATE geo_temp_union SET country = 'NIGERIA' WHERE country = 'OTHER' AND email LIKE '%.ng' ;
UPDATE geo_temp_union SET country = 'NICARAGUA' WHERE country = 'OTHER' AND email LIKE '%.ni' ;
UPDATE geo_temp_union SET country = 'NETHERLANDS' WHERE country = 'OTHER' AND email LIKE '%.nl' ;
UPDATE geo_temp_union SET country = 'NORWAY' WHERE country = 'OTHER' AND email LIKE '%.no' ;
UPDATE geo_temp_union SET country = 'NEPAL' WHERE country = 'OTHER' AND email LIKE '%.np' ;
UPDATE geo_temp_union SET country = 'NAURU' WHERE country = 'OTHER' AND email LIKE '%.nr' ;
UPDATE geo_temp_union SET country = 'NIUE' WHERE country = 'OTHER' AND email LIKE '%.nu' ;
UPDATE geo_temp_union SET country = 'NEW ZEALAND' WHERE country = 'OTHER' AND email LIKE '%.nz' ;
UPDATE geo_temp_union SET country = 'OMAN' WHERE country = 'OTHER' AND email LIKE '%.om' ;
UPDATE geo_temp_union SET country = 'PANAMA' WHERE country = 'OTHER' AND email LIKE '%.pa' ;
UPDATE geo_temp_union SET country = 'PERU' WHERE country = 'OTHER' AND email LIKE '%.pe' ;
UPDATE geo_temp_union SET country = 'FRENCH POLYNESIA' WHERE country = 'OTHER' AND email LIKE '%.pf' ;
UPDATE geo_temp_union SET country = 'PAPUA NEW GUINEA' WHERE country = 'OTHER' AND email LIKE '%.pg' ;
UPDATE geo_temp_union SET country = 'PHILIPPINES' WHERE country = 'OTHER' AND email LIKE '%.ph' ;
UPDATE geo_temp_union SET country = 'PAKISTAN' WHERE country = 'OTHER' AND email LIKE '%.pk' ;
UPDATE geo_temp_union SET country = 'POLAND' WHERE country = 'OTHER' AND email LIKE '%.pl' ;
UPDATE geo_temp_union SET country = 'ST PIERRE ET MIQUELON' WHERE country = 'OTHER' AND email LIKE '%.pm' ;
UPDATE geo_temp_union SET country = 'PITCAIRN' WHERE country = 'OTHER' AND email LIKE '%.pn' ;
UPDATE geo_temp_union SET country = 'PUERTO RICO' WHERE country = 'OTHER' AND email LIKE '%.pr' ;
UPDATE geo_temp_union SET country = 'PORTUGAL' WHERE country = 'OTHER' AND email LIKE '%.pt' ;
UPDATE geo_temp_union SET country = 'PALAU' WHERE country = 'OTHER' AND email LIKE '%.pw' ;
UPDATE geo_temp_union SET country = 'PARAGUAY' WHERE country = 'OTHER' AND email LIKE '%.py' ;
UPDATE geo_temp_union SET country = 'QATAR' WHERE country = 'OTHER' AND email LIKE '%.qa' ;
UPDATE geo_temp_union SET country = 'REUNION' WHERE country = 'OTHER' AND email LIKE '%.re' ;
UPDATE geo_temp_union SET country = 'ROMANIA' WHERE country = 'OTHER' AND email LIKE '%.ro' ;
UPDATE geo_temp_union SET country = 'RUSSIA' WHERE country = 'OTHER' AND email LIKE '%.ru' ;
UPDATE geo_temp_union SET country = 'RWANDA' WHERE country = 'OTHER' AND email LIKE '%.rw' ;
UPDATE geo_temp_union SET country = 'SAUDI ARABIA' WHERE country = 'OTHER' AND email LIKE '%.sa' ;
UPDATE geo_temp_union SET country = 'SOLOMON ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.sb' ;
UPDATE geo_temp_union SET country = 'SEYCHELLES' WHERE country = 'OTHER' AND email LIKE '%.sc' ;
UPDATE geo_temp_union SET country = 'SUDAN' WHERE country = 'OTHER' AND email LIKE '%.sd' ;
UPDATE geo_temp_union SET country = 'SWEDEN' WHERE country = 'OTHER' AND email LIKE '%.se' ;
UPDATE geo_temp_union SET country = 'SINGAPORE' WHERE country = 'OTHER' AND email LIKE '%.sg' ;
UPDATE geo_temp_union SET country = 'ST HELENA' WHERE country = 'OTHER' AND email LIKE '%.sh' ;
UPDATE geo_temp_union SET country = 'SLOVENIA' WHERE country = 'OTHER' AND email LIKE '%.si' ;
UPDATE geo_temp_union SET country = 'SVALBARD AND JAN MAYEN ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.sj' ;
UPDATE geo_temp_union SET country = 'SLOVAKIA' WHERE country = 'OTHER' AND email LIKE '%.sk' ;
UPDATE geo_temp_union SET country = 'SIERRA LEONE' WHERE country = 'OTHER' AND email LIKE '%.sl' ;
UPDATE geo_temp_union SET country = 'SAN MARINO' WHERE country = 'OTHER' AND email LIKE '%.sm' ;
UPDATE geo_temp_union SET country = 'SENEGAL' WHERE country = 'OTHER' AND email LIKE '%.sn' ;
UPDATE geo_temp_union SET country = 'SOMALIA' WHERE country = 'OTHER' AND email LIKE '%.so' ;
UPDATE geo_temp_union SET country = 'SURINAME' WHERE country = 'OTHER' AND email LIKE '%.sr' ;
UPDATE geo_temp_union SET country = 'SAO TOME AND PRINCIPE' WHERE country = 'OTHER' AND email LIKE '%.st' ;
UPDATE geo_temp_union SET country = 'SALVADOR' WHERE country = 'OTHER' AND email LIKE '%.sv' ;
UPDATE geo_temp_union SET country = 'SYRIA' WHERE country = 'OTHER' AND email LIKE '%.sy' ;
UPDATE geo_temp_union SET country = 'SWAZILAND' WHERE country = 'OTHER' AND email LIKE '%.sz' ;
UPDATE geo_temp_union SET country = 'TURKS AND CAICOS ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.tc' ;
UPDATE geo_temp_union SET country = 'CHAD' WHERE country = 'OTHER' AND email LIKE '%.td' ;
UPDATE geo_temp_union SET country = 'FRENCH SOUTHERN TERRITORIES' WHERE country = 'OTHER' AND email LIKE '%.tf' ;
UPDATE geo_temp_union SET country = 'TOGO' WHERE country = 'OTHER' AND email LIKE '%.tg' ;
UPDATE geo_temp_union SET country = 'THAILAND' WHERE country = 'OTHER' AND email LIKE '%.th' ;
UPDATE geo_temp_union SET country = 'TAJIKISTAN' WHERE country = 'OTHER' AND email LIKE '%.tj' ;
UPDATE geo_temp_union SET country = 'TOKELAU' WHERE country = 'OTHER' AND email LIKE '%.tk' ;
UPDATE geo_temp_union SET country = 'TURKMENISTAN' WHERE country = 'OTHER' AND email LIKE '%.tm' ;
UPDATE geo_temp_union SET country = 'TUNISIA' WHERE country = 'OTHER' AND email LIKE '%.tn' ;
UPDATE geo_temp_union SET country = 'TONGA' WHERE country = 'OTHER' AND email LIKE '%.to' ;
UPDATE geo_temp_union SET country = 'EAST TIMOR' WHERE country = 'OTHER' AND email LIKE '%.tp' ;
UPDATE geo_temp_union SET country = 'TURKEY' WHERE country = 'OTHER' AND email LIKE '%.tr' ;
UPDATE geo_temp_union SET country = 'TRINIDAD AND TOBAGO' WHERE country = 'OTHER' AND email LIKE '%.tt' ;
UPDATE geo_temp_union SET country = 'TUVALU' WHERE country = 'OTHER' AND email LIKE '%.tv' ;
UPDATE geo_temp_union SET country = 'TAIWAN' WHERE country = 'OTHER' AND email LIKE '%.tw' ;
UPDATE geo_temp_union SET country = 'TANZANIA' WHERE country = 'OTHER' AND email LIKE '%.tz' ;
UPDATE geo_temp_union SET country = 'UKRAINE' WHERE country = 'OTHER' AND email LIKE '%.ua' ;
UPDATE geo_temp_union SET country = 'UGANDA' WHERE country = 'OTHER' AND email LIKE '%.ug' ;
UPDATE geo_temp_union SET country = 'UNITED KINGDOM' WHERE country = 'OTHER' AND email LIKE '%.uk' ;
UPDATE geo_temp_union SET country = 'UNITED STATES MINOR OUTLYING ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.um' ;
UPDATE geo_temp_union SET country = 'UNITED STATES' WHERE country = 'OTHER' AND email LIKE '%.us' ;
UPDATE geo_temp_union SET country = 'URUGUAY' WHERE country = 'OTHER' AND email LIKE '%.uy' ;
UPDATE geo_temp_union SET country = 'UZBEKISTAN' WHERE country = 'OTHER' AND email LIKE '%.uz' ;
UPDATE geo_temp_union SET country = 'VATICAN CITY STATE' WHERE country = 'OTHER' AND email LIKE '%.va' ;
UPDATE geo_temp_union SET country = 'SAINT VINCENT AND THE GRENADINES' WHERE country = 'OTHER' AND email LIKE '%.vc' ;
UPDATE geo_temp_union SET country = 'VENEZUELA' WHERE country = 'OTHER' AND email LIKE '%.ve' ;
UPDATE geo_temp_union SET country = 'BRITISH VIRGIN ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.vg' ;
UPDATE geo_temp_union SET country = 'US VIRGIN ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.vi' ;
UPDATE geo_temp_union SET country = 'VIETNAM' WHERE country = 'OTHER' AND email LIKE '%.vn' ;
UPDATE geo_temp_union SET country = 'VANUATU' WHERE country = 'OTHER' AND email LIKE '%.vu' ;
UPDATE geo_temp_union SET country = 'WALLIS AND FUTUNA ISLANDS' WHERE country = 'OTHER' AND email LIKE '%.wf' ;
UPDATE geo_temp_union SET country = 'SAMOA' WHERE country = 'OTHER' AND email LIKE '%.ws' ;
UPDATE geo_temp_union SET country = 'YEMEN' WHERE country = 'OTHER' AND email LIKE '%.ye' ;
UPDATE geo_temp_union SET country = 'MAYOTTE' WHERE country = 'OTHER' AND email LIKE '%.yt' ;
UPDATE geo_temp_union SET country = 'MONTENEGRO' WHERE country = 'OTHER' AND email LIKE '%.yu' ;
UPDATE geo_temp_union SET country = 'SOUTH AFRICA' WHERE country = 'OTHER' AND email LIKE '%.za' ;
UPDATE geo_temp_union SET country = 'ZAMBIA' WHERE country = 'OTHER' AND email LIKE '%.zm' ;
UPDATE geo_temp_union SET country = 'ZAIRE' WHERE country = 'OTHER' AND email LIKE '%.zr' ;
UPDATE geo_temp_union SET country = 'ZIMBABWE' WHERE country = 'OTHER' AND email LIKE '%.zw' ;

/* REMPLIR LES COUNTRY OTHER GRACE AU SUFFIXE EMAIL - CHAMP EMAIL 1 */

UPDATE geo_temp_union SET country = 'ANDORRA' WHERE country = 'OTHER' AND email1 LIKE '%.ad' ;
UPDATE geo_temp_union SET country = 'UNITED ARAB EMIRATES' WHERE country = 'OTHER' AND email1 LIKE '%.ae' ;
UPDATE geo_temp_union SET country = 'AFGHANISTAN' WHERE country = 'OTHER' AND email1 LIKE '%.af' ;
UPDATE geo_temp_union SET country = 'ANTIGUA AND BARBUDA' WHERE country = 'OTHER' AND email1 LIKE '%.ag' ;
UPDATE geo_temp_union SET country = 'ANGUILLA' WHERE country = 'OTHER' AND email1 LIKE '%.ai' ;
UPDATE geo_temp_union SET country = 'ALBANIA' WHERE country = 'OTHER' AND email1 LIKE '%.al' ;
UPDATE geo_temp_union SET country = 'ARMENIA' WHERE country = 'OTHER' AND email1 LIKE '%.am' ;
UPDATE geo_temp_union SET country = 'NETHERLANDS ANTILLES' WHERE country = 'OTHER' AND email1 LIKE '%.an' ;
UPDATE geo_temp_union SET country = 'ANGOLA' WHERE country = 'OTHER' AND email1 LIKE '%.ao' ;
UPDATE geo_temp_union SET country = 'ANTARCTICA' WHERE country = 'OTHER' AND email1 LIKE '%.aq' ;
UPDATE geo_temp_union SET country = 'ARGENTINA' WHERE country = 'OTHER' AND email1 LIKE '%.ar' ;
UPDATE geo_temp_union SET country = 'AMERICAN SAMOA' WHERE country = 'OTHER' AND email1 LIKE '%.as' ;
UPDATE geo_temp_union SET country = 'AUSTRIA' WHERE country = 'OTHER' AND email1 LIKE '%.at' ;
UPDATE geo_temp_union SET country = 'AUSTRALIA' WHERE country = 'OTHER' AND email1 LIKE '%.au' ;
UPDATE geo_temp_union SET country = 'ARUBA' WHERE country = 'OTHER' AND email1 LIKE '%.aw' ;
UPDATE geo_temp_union SET country = 'AZERBAIJAN' WHERE country = 'OTHER' AND email1 LIKE '%.az' ;
UPDATE geo_temp_union SET country = 'BOSNIA AND HERZEGOWINA' WHERE country = 'OTHER' AND email1 LIKE '%.ba' ;
UPDATE geo_temp_union SET country = 'BARBADOS' WHERE country = 'OTHER' AND email1 LIKE '%.bb' ;
UPDATE geo_temp_union SET country = 'BANGLADESH' WHERE country = 'OTHER' AND email1 LIKE '%.bd' ;
UPDATE geo_temp_union SET country = 'BELGIUM' WHERE country = 'OTHER' AND email1 LIKE '%.be' ;
UPDATE geo_temp_union SET country = 'BURKINA FASO' WHERE country = 'OTHER' AND email1 LIKE '%.bf' ;
UPDATE geo_temp_union SET country = 'BULGARIA' WHERE country = 'OTHER' AND email1 LIKE '%.bg' ;
UPDATE geo_temp_union SET country = 'BAHRAIN' WHERE country = 'OTHER' AND email1 LIKE '%.bh' ;
UPDATE geo_temp_union SET country = 'BURUNDI' WHERE country = 'OTHER' AND email1 LIKE '%.bi' ;
UPDATE geo_temp_union SET country = 'BENIN' WHERE country = 'OTHER' AND email1 LIKE '%.bj' ;
UPDATE geo_temp_union SET country = 'BERMUDA' WHERE country = 'OTHER' AND email1 LIKE '%.bm' ;
UPDATE geo_temp_union SET country = 'BRUNEI' WHERE country = 'OTHER' AND email1 LIKE '%.bn' ;
UPDATE geo_temp_union SET country = 'BOLIVIA' WHERE country = 'OTHER' AND email1 LIKE '%.bo' ;
UPDATE geo_temp_union SET country = 'BRAZIL' WHERE country = 'OTHER' AND email1 LIKE '%.br' ;
UPDATE geo_temp_union SET country = 'BAHAMAS' WHERE country = 'OTHER' AND email1 LIKE '%.bs' ;
UPDATE geo_temp_union SET country = 'BHUTAN' WHERE country = 'OTHER' AND email1 LIKE '%.bt' ;
UPDATE geo_temp_union SET country = 'BOUVET ISLAND' WHERE country = 'OTHER' AND email1 LIKE '%.bv' ;
UPDATE geo_temp_union SET country = 'BOTSWANA' WHERE country = 'OTHER' AND email1 LIKE '%.bw' ;
UPDATE geo_temp_union SET country = 'BELARUS' WHERE country = 'OTHER' AND email1 LIKE '%.by' ;
UPDATE geo_temp_union SET country = 'BELIZE' WHERE country = 'OTHER' AND email1 LIKE '%.bz' ;
UPDATE geo_temp_union SET country = 'CANADA' WHERE country = 'OTHER' AND email1 LIKE '%.ca' ;
UPDATE geo_temp_union SET country = 'COCOS ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.cc' ;
UPDATE geo_temp_union SET country = 'CENTRAL AFRICAN REPUBLIC' WHERE country = 'OTHER' AND email1 LIKE '%.cf' ;
UPDATE geo_temp_union SET country = 'CONGO' WHERE country = 'OTHER' AND email1 LIKE '%.cg' ;
UPDATE geo_temp_union SET country = 'SWITZERLAND' WHERE country = 'OTHER' AND email1 LIKE '%.ch' ;
UPDATE geo_temp_union SET country = 'IVORY COAST' WHERE country = 'OTHER' AND email1 LIKE '%.ci' ;
UPDATE geo_temp_union SET country = 'COOK ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.ck' ;
UPDATE geo_temp_union SET country = 'CHILE' WHERE country = 'OTHER' AND email1 LIKE '%.cl' ;
UPDATE geo_temp_union SET country = 'CAMEROON' WHERE country = 'OTHER' AND email1 LIKE '%.cm' ;
UPDATE geo_temp_union SET country = 'CHINA' WHERE country = 'OTHER' AND email1 LIKE '%.cn' ;
UPDATE geo_temp_union SET country = 'COLOMBIA' WHERE country = 'OTHER' AND email1 LIKE '%.co' ;
UPDATE geo_temp_union SET country = 'COSTA RICA' WHERE country = 'OTHER' AND email1 LIKE '%.cr' ;
UPDATE geo_temp_union SET country = 'CUBA' WHERE country = 'OTHER' AND email1 LIKE '%.cu' ;
UPDATE geo_temp_union SET country = 'CAPE VERDE' WHERE country = 'OTHER' AND email1 LIKE '%.cv' ;
UPDATE geo_temp_union SET country = 'CHRISTMAS ISLAND' WHERE country = 'OTHER' AND email1 LIKE '%.cx' ;
UPDATE geo_temp_union SET country = 'CYPRUS' WHERE country = 'OTHER' AND email1 LIKE '%.cy' ;
UPDATE geo_temp_union SET country = 'CZECH REPUBLIC' WHERE country = 'OTHER' AND email1 LIKE '%.cz' ;
UPDATE geo_temp_union SET country = 'GERMANY' WHERE country = 'OTHER' AND email1 LIKE '%.de' ;
UPDATE geo_temp_union SET country = 'DJIBOUTI' WHERE country = 'OTHER' AND email1 LIKE '%.dj' ;
UPDATE geo_temp_union SET country = 'DENMARK' WHERE country = 'OTHER' AND email1 LIKE '%.dk' ;
UPDATE geo_temp_union SET country = 'DOMINICA' WHERE country = 'OTHER' AND email1 LIKE '%.dm' ;
UPDATE geo_temp_union SET country = 'DOMINICAN REPUBLIC' WHERE country = 'OTHER' AND email1 LIKE '%.do' ;
UPDATE geo_temp_union SET country = 'ALGERIA' WHERE country = 'OTHER' AND email1 LIKE '%.dz' ;
UPDATE geo_temp_union SET country = 'ECUADOR' WHERE country = 'OTHER' AND email1 LIKE '%.ec' ;
UPDATE geo_temp_union SET country = 'ESTONIA' WHERE country = 'OTHER' AND email1 LIKE '%.ee' ;
UPDATE geo_temp_union SET country = 'EGYPT' WHERE country = 'OTHER' AND email1 LIKE '%.eg' ;
UPDATE geo_temp_union SET country = 'WESTERN SAHARA' WHERE country = 'OTHER' AND email1 LIKE '%.eh' ;
UPDATE geo_temp_union SET country = 'ERITREA' WHERE country = 'OTHER' AND email1 LIKE '%.er' ;
UPDATE geo_temp_union SET country = 'SPAIN' WHERE country = 'OTHER' AND email1 LIKE '%.es' ;
UPDATE geo_temp_union SET country = 'ETHIOPIA' WHERE country = 'OTHER' AND email1 LIKE '%.et' ;
UPDATE geo_temp_union SET country = 'FINLAND' WHERE country = 'OTHER' AND email1 LIKE '%.fi' ;
UPDATE geo_temp_union SET country = 'FIJI' WHERE country = 'OTHER' AND email1 LIKE '%.fj' ;
UPDATE geo_temp_union SET country = 'FALKLAND ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.fk' ;
UPDATE geo_temp_union SET country = 'MICRONESIA' WHERE country = 'OTHER' AND email1 LIKE '%.fm' ;
UPDATE geo_temp_union SET country = 'DENMARK' WHERE country = 'OTHER' AND email1 LIKE '%.fo' ;
UPDATE geo_temp_union SET country = 'FRANCE' WHERE country = 'OTHER' AND email1 LIKE '%.fr' ;
UPDATE geo_temp_union SET country = 'GABON' WHERE country = 'OTHER' AND email1 LIKE '%.ga' ;
UPDATE geo_temp_union SET country = 'UNITED KINGDOM OF GREAT BRITAIN & N IRELAND' WHERE country = 'OTHER' AND email1 LIKE '%.gb' ;
UPDATE geo_temp_union SET country = 'GRENADA' WHERE country = 'OTHER' AND email1 LIKE '%.gd' ;
UPDATE geo_temp_union SET country = 'GEORGIA' WHERE country = 'OTHER' AND email1 LIKE '%.ge' ;
UPDATE geo_temp_union SET country = 'FRENCH GUIANA' WHERE country = 'OTHER' AND email1 LIKE '%.gf' ;
UPDATE geo_temp_union SET country = 'GHANA' WHERE country = 'OTHER' AND email1 LIKE '%.gh' ;
UPDATE geo_temp_union SET country = 'GIBRALTAR' WHERE country = 'OTHER' AND email1 LIKE '%.gi' ;
UPDATE geo_temp_union SET country = 'GREENLAND' WHERE country = 'OTHER' AND email1 LIKE '%.gl' ;
UPDATE geo_temp_union SET country = 'GAMBIA' WHERE country = 'OTHER' AND email1 LIKE '%.gm' ;
UPDATE geo_temp_union SET country = 'GUINEA' WHERE country = 'OTHER' AND email1 LIKE '%.gn' ;
UPDATE geo_temp_union SET country = 'GUADALOUPE' WHERE country = 'OTHER' AND email1 LIKE '%.gp' ;
UPDATE geo_temp_union SET country = 'EQUATORIAL GUINEA' WHERE country = 'OTHER' AND email1 LIKE '%.gq' ;
UPDATE geo_temp_union SET country = 'GREECE' WHERE country = 'OTHER' AND email1 LIKE '%.gr' ;
UPDATE geo_temp_union SET country = 'SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.gs' ;
UPDATE geo_temp_union SET country = 'GUATEMALA' WHERE country = 'OTHER' AND email1 LIKE '%.gt' ;
UPDATE geo_temp_union SET country = 'GUAM' WHERE country = 'OTHER' AND email1 LIKE '%.gu' ;
UPDATE geo_temp_union SET country = 'GUINEA BISSAU' WHERE country = 'OTHER' AND email1 LIKE '%.gw' ;
UPDATE geo_temp_union SET country = 'GUYANA' WHERE country = 'OTHER' AND email1 LIKE '%.gy' ;
UPDATE geo_temp_union SET country = 'HONG KONG' WHERE country = 'OTHER' AND email1 LIKE '%.hk' ;
UPDATE geo_temp_union SET country = 'HEARD AND MCDONALD ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.hm' ;
UPDATE geo_temp_union SET country = 'HONDURAS' WHERE country = 'OTHER' AND email1 LIKE '%.hn' ;
UPDATE geo_temp_union SET country = 'HRVATSKA - CROATIA' WHERE country = 'OTHER' AND email1 LIKE '%.hr' ;
UPDATE geo_temp_union SET country = 'HAITI' WHERE country = 'OTHER' AND email1 LIKE '%.ht' ;
UPDATE geo_temp_union SET country = 'HUNGARY' WHERE country = 'OTHER' AND email1 LIKE '%.hu' ;
UPDATE geo_temp_union SET country = 'INDONESIA' WHERE country = 'OTHER' AND email1 LIKE '%.id' ;
UPDATE geo_temp_union SET country = 'IRELAND' WHERE country = 'OTHER' AND email1 LIKE '%.ie' ;
UPDATE geo_temp_union SET country = 'ISRAEL' WHERE country = 'OTHER' AND email1 LIKE '%.il' ;
UPDATE geo_temp_union SET country = 'INDIA' WHERE country = 'OTHER' AND email1 LIKE '%.in' ;
UPDATE geo_temp_union SET country = 'BRITISH INDIAN OCEAN TERRITORY' WHERE country = 'OTHER' AND email1 LIKE '%.io' ;
UPDATE geo_temp_union SET country = 'IRAQ' WHERE country = 'OTHER' AND email1 LIKE '%.iq' ;
UPDATE geo_temp_union SET country = 'IRAN' WHERE country = 'OTHER' AND email1 LIKE '%.ir' ;
UPDATE geo_temp_union SET country = 'ICELAND' WHERE country = 'OTHER' AND email1 LIKE '%.is' ;
UPDATE geo_temp_union SET country = 'ITALY' WHERE country = 'OTHER' AND email1 LIKE '%.it' ;
UPDATE geo_temp_union SET country = 'JAMAICA' WHERE country = 'OTHER' AND email1 LIKE '%.jm' ;
UPDATE geo_temp_union SET country = 'JORDAN' WHERE country = 'OTHER' AND email1 LIKE '%.jo' ;
UPDATE geo_temp_union SET country = 'JAPAN' WHERE country = 'OTHER' AND email1 LIKE '%.jp' ;
UPDATE geo_temp_union SET country = 'KENYA' WHERE country = 'OTHER' AND email1 LIKE '%.ke' ;
UPDATE geo_temp_union SET country = 'KYRGYZ REPUBLIC' WHERE country = 'OTHER' AND email1 LIKE '%.kg' ;
UPDATE geo_temp_union SET country = 'CAMBODIA' WHERE country = 'OTHER' AND email1 LIKE '%.kh' ;
UPDATE geo_temp_union SET country = 'KIRIBATI' WHERE country = 'OTHER' AND email1 LIKE '%.ki' ;
UPDATE geo_temp_union SET country = 'COMOROS' WHERE country = 'OTHER' AND email1 LIKE '%.km' ;
UPDATE geo_temp_union SET country = 'SAINT KITTS AND NEVIS' WHERE country = 'OTHER' AND email1 LIKE '%.kn' ;
UPDATE geo_temp_union SET country = 'KOREA' WHERE country = 'OTHER' AND email1 LIKE '%.kp' ;
UPDATE geo_temp_union SET country = 'KOREA' WHERE country = 'OTHER' AND email1 LIKE '%.kr' ;
UPDATE geo_temp_union SET country = 'KUWAIT' WHERE country = 'OTHER' AND email1 LIKE '%.kw' ;
UPDATE geo_temp_union SET country = 'CAYMAN ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.ky' ;
UPDATE geo_temp_union SET country = 'KAZAKHSTAN' WHERE country = 'OTHER' AND email1 LIKE '%.kz' ;
UPDATE geo_temp_union SET country = 'LAOS' WHERE country = 'OTHER' AND email1 LIKE '%.la' ;
UPDATE geo_temp_union SET country = 'LEBANON' WHERE country = 'OTHER' AND email1 LIKE '%.lb' ;
UPDATE geo_temp_union SET country = 'SAINT LUCIA' WHERE country = 'OTHER' AND email1 LIKE '%.lc' ;
UPDATE geo_temp_union SET country = 'LIECHTENSTEIN' WHERE country = 'OTHER' AND email1 LIKE '%.li' ;
UPDATE geo_temp_union SET country = 'SRI LANKA' WHERE country = 'OTHER' AND email1 LIKE '%.lk' ;
UPDATE geo_temp_union SET country = 'LIBERIA' WHERE country = 'OTHER' AND email1 LIKE '%.lr' ;
UPDATE geo_temp_union SET country = 'LESOTHO' WHERE country = 'OTHER' AND email1 LIKE '%.ls' ;
UPDATE geo_temp_union SET country = 'LITHUANIA' WHERE country = 'OTHER' AND email1 LIKE '%.lt' ;
UPDATE geo_temp_union SET country = 'LUXEMBOURG' WHERE country = 'OTHER' AND email1 LIKE '%.lu' ;
UPDATE geo_temp_union SET country = 'LATVIA' WHERE country = 'OTHER' AND email1 LIKE '%.lv' ;
UPDATE geo_temp_union SET country = 'LIBYA' WHERE country = 'OTHER' AND email1 LIKE '%.ly' ;
UPDATE geo_temp_union SET country = 'MOROCCO' WHERE country = 'OTHER' AND email1 LIKE '%.ma' ;
UPDATE geo_temp_union SET country = 'MONACO' WHERE country = 'OTHER' AND email1 LIKE '%.mc' ;
UPDATE geo_temp_union SET country = 'MOLDOVA' WHERE country = 'OTHER' AND email1 LIKE '%.md' ;
UPDATE geo_temp_union SET country = 'MADAGASCAR' WHERE country = 'OTHER' AND email1 LIKE '%.mg' ;
UPDATE geo_temp_union SET country = 'MARSHALL ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.mh' ;
UPDATE geo_temp_union SET country = 'MACEDONIA' WHERE country = 'OTHER' AND email1 LIKE '%.mk' ;
UPDATE geo_temp_union SET country = 'MALI' WHERE country = 'OTHER' AND email1 LIKE '%.ml' ;
UPDATE geo_temp_union SET country = 'MYANMAR' WHERE country = 'OTHER' AND email1 LIKE '%.mm' ;
UPDATE geo_temp_union SET country = 'MONGOLIA' WHERE country = 'OTHER' AND email1 LIKE '%.mn' ;
UPDATE geo_temp_union SET country = 'MACAU' WHERE country = 'OTHER' AND email1 LIKE '%.mo' ;
UPDATE geo_temp_union SET country = 'NORTHERN MARIANA ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.mp' ;
UPDATE geo_temp_union SET country = 'MARTINIQUE' WHERE country = 'OTHER' AND email1 LIKE '%.mq' ;
UPDATE geo_temp_union SET country = 'MAURITANIA' WHERE country = 'OTHER' AND email1 LIKE '%.mr' ;
UPDATE geo_temp_union SET country = 'MONTSERRAT' WHERE country = 'OTHER' AND email1 LIKE '%.ms' ;
UPDATE geo_temp_union SET country = 'MALTA' WHERE country = 'OTHER' AND email1 LIKE '%.mt' ;
UPDATE geo_temp_union SET country = 'MAURITIUS' WHERE country = 'OTHER' AND email1 LIKE '%.mu' ;
UPDATE geo_temp_union SET country = 'MALDIVES' WHERE country = 'OTHER' AND email1 LIKE '%.mv' ;
UPDATE geo_temp_union SET country = 'MALAWI' WHERE country = 'OTHER' AND email1 LIKE '%.mw' ;
UPDATE geo_temp_union SET country = 'MEXICO' WHERE country = 'OTHER' AND email1 LIKE '%.mx' ;
UPDATE geo_temp_union SET country = 'MALAYSIA' WHERE country = 'OTHER' AND email1 LIKE '%.my' ;
UPDATE geo_temp_union SET country = 'MOZAMBIQUE' WHERE country = 'OTHER' AND email1 LIKE '%.mz' ;
UPDATE geo_temp_union SET country = 'NAMIBIA' WHERE country = 'OTHER' AND email1 LIKE '%.na' ;
UPDATE geo_temp_union SET country = 'NEW CALEDONIA' WHERE country = 'OTHER' AND email1 LIKE '%.nc' ;
UPDATE geo_temp_union SET country = 'NIGER' WHERE country = 'OTHER' AND email1 LIKE '%.ne' ;
UPDATE geo_temp_union SET country = 'NORFOLK ISLAND' WHERE country = 'OTHER' AND email1 LIKE '%.nf' ;
UPDATE geo_temp_union SET country = 'NIGERIA' WHERE country = 'OTHER' AND email1 LIKE '%.ng' ;
UPDATE geo_temp_union SET country = 'NICARAGUA' WHERE country = 'OTHER' AND email1 LIKE '%.ni' ;
UPDATE geo_temp_union SET country = 'NETHERLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.nl' ;
UPDATE geo_temp_union SET country = 'NORWAY' WHERE country = 'OTHER' AND email1 LIKE '%.no' ;
UPDATE geo_temp_union SET country = 'NEPAL' WHERE country = 'OTHER' AND email1 LIKE '%.np' ;
UPDATE geo_temp_union SET country = 'NAURU' WHERE country = 'OTHER' AND email1 LIKE '%.nr' ;
UPDATE geo_temp_union SET country = 'NIUE' WHERE country = 'OTHER' AND email1 LIKE '%.nu' ;
UPDATE geo_temp_union SET country = 'NEW ZEALAND' WHERE country = 'OTHER' AND email1 LIKE '%.nz' ;
UPDATE geo_temp_union SET country = 'OMAN' WHERE country = 'OTHER' AND email1 LIKE '%.om' ;
UPDATE geo_temp_union SET country = 'PANAMA' WHERE country = 'OTHER' AND email1 LIKE '%.pa' ;
UPDATE geo_temp_union SET country = 'PERU' WHERE country = 'OTHER' AND email1 LIKE '%.pe' ;
UPDATE geo_temp_union SET country = 'FRENCH POLYNESIA' WHERE country = 'OTHER' AND email1 LIKE '%.pf' ;
UPDATE geo_temp_union SET country = 'PAPUA NEW GUINEA' WHERE country = 'OTHER' AND email1 LIKE '%.pg' ;
UPDATE geo_temp_union SET country = 'PHILIPPINES' WHERE country = 'OTHER' AND email1 LIKE '%.ph' ;
UPDATE geo_temp_union SET country = 'PAKISTAN' WHERE country = 'OTHER' AND email1 LIKE '%.pk' ;
UPDATE geo_temp_union SET country = 'POLAND' WHERE country = 'OTHER' AND email1 LIKE '%.pl' ;
UPDATE geo_temp_union SET country = 'ST PIERRE ET MIQUELON' WHERE country = 'OTHER' AND email1 LIKE '%.pm' ;
UPDATE geo_temp_union SET country = 'PITCAIRN' WHERE country = 'OTHER' AND email1 LIKE '%.pn' ;
UPDATE geo_temp_union SET country = 'PUERTO RICO' WHERE country = 'OTHER' AND email1 LIKE '%.pr' ;
UPDATE geo_temp_union SET country = 'PORTUGAL' WHERE country = 'OTHER' AND email1 LIKE '%.pt' ;
UPDATE geo_temp_union SET country = 'PALAU' WHERE country = 'OTHER' AND email1 LIKE '%.pw' ;
UPDATE geo_temp_union SET country = 'PARAGUAY' WHERE country = 'OTHER' AND email1 LIKE '%.py' ;
UPDATE geo_temp_union SET country = 'QATAR' WHERE country = 'OTHER' AND email1 LIKE '%.qa' ;
UPDATE geo_temp_union SET country = 'REUNION' WHERE country = 'OTHER' AND email1 LIKE '%.re' ;
UPDATE geo_temp_union SET country = 'ROMANIA' WHERE country = 'OTHER' AND email1 LIKE '%.ro' ;
UPDATE geo_temp_union SET country = 'RUSSIA' WHERE country = 'OTHER' AND email1 LIKE '%.ru' ;
UPDATE geo_temp_union SET country = 'RWANDA' WHERE country = 'OTHER' AND email1 LIKE '%.rw' ;
UPDATE geo_temp_union SET country = 'SAUDI ARABIA' WHERE country = 'OTHER' AND email1 LIKE '%.sa' ;
UPDATE geo_temp_union SET country = 'SOLOMON ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.sb' ;
UPDATE geo_temp_union SET country = 'SEYCHELLES' WHERE country = 'OTHER' AND email1 LIKE '%.sc' ;
UPDATE geo_temp_union SET country = 'SUDAN' WHERE country = 'OTHER' AND email1 LIKE '%.sd' ;
UPDATE geo_temp_union SET country = 'SWEDEN' WHERE country = 'OTHER' AND email1 LIKE '%.se' ;
UPDATE geo_temp_union SET country = 'SINGAPORE' WHERE country = 'OTHER' AND email1 LIKE '%.sg' ;
UPDATE geo_temp_union SET country = 'ST HELENA' WHERE country = 'OTHER' AND email1 LIKE '%.sh' ;
UPDATE geo_temp_union SET country = 'SLOVENIA' WHERE country = 'OTHER' AND email1 LIKE '%.si' ;
UPDATE geo_temp_union SET country = 'SVALBARD AND JAN MAYEN ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.sj' ;
UPDATE geo_temp_union SET country = 'SLOVAKIA' WHERE country = 'OTHER' AND email1 LIKE '%.sk' ;
UPDATE geo_temp_union SET country = 'SIERRA LEONE' WHERE country = 'OTHER' AND email1 LIKE '%.sl' ;
UPDATE geo_temp_union SET country = 'SAN MARINO' WHERE country = 'OTHER' AND email1 LIKE '%.sm' ;
UPDATE geo_temp_union SET country = 'SENEGAL' WHERE country = 'OTHER' AND email1 LIKE '%.sn' ;
UPDATE geo_temp_union SET country = 'SOMALIA' WHERE country = 'OTHER' AND email1 LIKE '%.so' ;
UPDATE geo_temp_union SET country = 'SURINAME' WHERE country = 'OTHER' AND email1 LIKE '%.sr' ;
UPDATE geo_temp_union SET country = 'SAO TOME AND PRINCIPE' WHERE country = 'OTHER' AND email1 LIKE '%.st' ;
UPDATE geo_temp_union SET country = 'SALVADOR' WHERE country = 'OTHER' AND email1 LIKE '%.sv' ;
UPDATE geo_temp_union SET country = 'SYRIA' WHERE country = 'OTHER' AND email1 LIKE '%.sy' ;
UPDATE geo_temp_union SET country = 'SWAZILAND' WHERE country = 'OTHER' AND email1 LIKE '%.sz' ;
UPDATE geo_temp_union SET country = 'TURKS AND CAICOS ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.tc' ;
UPDATE geo_temp_union SET country = 'CHAD' WHERE country = 'OTHER' AND email1 LIKE '%.td' ;
UPDATE geo_temp_union SET country = 'FRENCH SOUTHERN TERRITORIES' WHERE country = 'OTHER' AND email1 LIKE '%.tf' ;
UPDATE geo_temp_union SET country = 'TOGO' WHERE country = 'OTHER' AND email1 LIKE '%.tg' ;
UPDATE geo_temp_union SET country = 'THAILAND' WHERE country = 'OTHER' AND email1 LIKE '%.th' ;
UPDATE geo_temp_union SET country = 'TAJIKISTAN' WHERE country = 'OTHER' AND email1 LIKE '%.tj' ;
UPDATE geo_temp_union SET country = 'TOKELAU' WHERE country = 'OTHER' AND email1 LIKE '%.tk' ;
UPDATE geo_temp_union SET country = 'TURKMENISTAN' WHERE country = 'OTHER' AND email1 LIKE '%.tm' ;
UPDATE geo_temp_union SET country = 'TUNISIA' WHERE country = 'OTHER' AND email1 LIKE '%.tn' ;
UPDATE geo_temp_union SET country = 'TONGA' WHERE country = 'OTHER' AND email1 LIKE '%.to' ;
UPDATE geo_temp_union SET country = 'EAST TIMOR' WHERE country = 'OTHER' AND email1 LIKE '%.tp' ;
UPDATE geo_temp_union SET country = 'TURKEY' WHERE country = 'OTHER' AND email1 LIKE '%.tr' ;
UPDATE geo_temp_union SET country = 'TRINIDAD AND TOBAGO' WHERE country = 'OTHER' AND email1 LIKE '%.tt' ;
UPDATE geo_temp_union SET country = 'TUVALU' WHERE country = 'OTHER' AND email1 LIKE '%.tv' ;
UPDATE geo_temp_union SET country = 'TAIWAN' WHERE country = 'OTHER' AND email1 LIKE '%.tw' ;
UPDATE geo_temp_union SET country = 'TANZANIA' WHERE country = 'OTHER' AND email1 LIKE '%.tz' ;
UPDATE geo_temp_union SET country = 'UKRAINE' WHERE country = 'OTHER' AND email1 LIKE '%.ua' ;
UPDATE geo_temp_union SET country = 'UGANDA' WHERE country = 'OTHER' AND email1 LIKE '%.ug' ;
UPDATE geo_temp_union SET country = 'UNITED KINGDOM' WHERE country = 'OTHER' AND email1 LIKE '%.uk' ;
UPDATE geo_temp_union SET country = 'UNITED STATES MINOR OUTLYING ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.um' ;
UPDATE geo_temp_union SET country = 'UNITED STATES' WHERE country = 'OTHER' AND email1 LIKE '%.us' ;
UPDATE geo_temp_union SET country = 'URUGUAY' WHERE country = 'OTHER' AND email1 LIKE '%.uy' ;
UPDATE geo_temp_union SET country = 'UZBEKISTAN' WHERE country = 'OTHER' AND email1 LIKE '%.uz' ;
UPDATE geo_temp_union SET country = 'VATICAN CITY STATE' WHERE country = 'OTHER' AND email1 LIKE '%.va' ;
UPDATE geo_temp_union SET country = 'SAINT VINCENT AND THE GRENADINES' WHERE country = 'OTHER' AND email1 LIKE '%.vc' ;
UPDATE geo_temp_union SET country = 'VENEZUELA' WHERE country = 'OTHER' AND email1 LIKE '%.ve' ;
UPDATE geo_temp_union SET country = 'BRITISH VIRGIN ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.vg' ;
UPDATE geo_temp_union SET country = 'US VIRGIN ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.vi' ;
UPDATE geo_temp_union SET country = 'VIET NAM' WHERE country = 'OTHER' AND email1 LIKE '%.vn' ;
UPDATE geo_temp_union SET country = 'VANUATU' WHERE country = 'OTHER' AND email1 LIKE '%.vu' ;
UPDATE geo_temp_union SET country = 'WALLIS AND FUTUNA ISLANDS' WHERE country = 'OTHER' AND email1 LIKE '%.wf' ;
UPDATE geo_temp_union SET country = 'SAMOA' WHERE country = 'OTHER' AND email1 LIKE '%.ws' ;
UPDATE geo_temp_union SET country = 'YEMEN' WHERE country = 'OTHER' AND email1 LIKE '%.ye' ;
UPDATE geo_temp_union SET country = 'MAYOTTE' WHERE country = 'OTHER' AND email1 LIKE '%.yt' ;
UPDATE geo_temp_union SET country = 'MONTENEGRO' WHERE country = 'OTHER' AND email1 LIKE '%.yu' ;
UPDATE geo_temp_union SET country = 'SOUTH AFRICA' WHERE country = 'OTHER' AND email1 LIKE '%.za' ;
UPDATE geo_temp_union SET country = 'ZAMBIA' WHERE country = 'OTHER' AND email1 LIKE '%.zm' ;
UPDATE geo_temp_union SET country = 'ZAIRE' WHERE country = 'OTHER' AND email1 LIKE '%.zr' ;
UPDATE geo_temp_union SET country = 'ZIMBABWE' WHERE country = 'OTHER' AND email1 LIKE '%.zw' ;

/* REMPLIR LES COUNTRY OTHER GRACE AU SUFFIXE EMAIL - CHAMP EMAIL 2 */

UPDATE geo_temp_union SET country = 'ANDORRA' WHERE country = 'OTHER' AND email2 LIKE '%.ad' ;
UPDATE geo_temp_union SET country = 'UNITED ARAB EMIRATES' WHERE country = 'OTHER' AND email2 LIKE '%.ae' ;
UPDATE geo_temp_union SET country = 'AFGHANISTAN' WHERE country = 'OTHER' AND email2 LIKE '%.af' ;
UPDATE geo_temp_union SET country = 'ANTIGUA AND BARBUDA' WHERE country = 'OTHER' AND email2 LIKE '%.ag' ;
UPDATE geo_temp_union SET country = 'ANGUILLA' WHERE country = 'OTHER' AND email2 LIKE '%.ai' ;
UPDATE geo_temp_union SET country = 'ALBANIA' WHERE country = 'OTHER' AND email2 LIKE '%.al' ;
UPDATE geo_temp_union SET country = 'ARMENIA' WHERE country = 'OTHER' AND email2 LIKE '%.am' ;
UPDATE geo_temp_union SET country = 'NETHERLANDS ANTILLES' WHERE country = 'OTHER' AND email2 LIKE '%.an' ;
UPDATE geo_temp_union SET country = 'ANGOLA' WHERE country = 'OTHER' AND email2 LIKE '%.ao' ;
UPDATE geo_temp_union SET country = 'ANTARCTICA' WHERE country = 'OTHER' AND email2 LIKE '%.aq' ;
UPDATE geo_temp_union SET country = 'ARGENTINA' WHERE country = 'OTHER' AND email2 LIKE '%.ar' ;
UPDATE geo_temp_union SET country = 'AMERICAN SAMOA' WHERE country = 'OTHER' AND email2 LIKE '%.as' ;
UPDATE geo_temp_union SET country = 'AUSTRIA' WHERE country = 'OTHER' AND email2 LIKE '%.at' ;
UPDATE geo_temp_union SET country = 'AUSTRALIA' WHERE country = 'OTHER' AND email2 LIKE '%.au' ;
UPDATE geo_temp_union SET country = 'ARUBA' WHERE country = 'OTHER' AND email2 LIKE '%.aw' ;
UPDATE geo_temp_union SET country = 'AZERBAIJAN' WHERE country = 'OTHER' AND email2 LIKE '%.az' ;
UPDATE geo_temp_union SET country = 'BOSNIA AND HERZEGOWINA' WHERE country = 'OTHER' AND email2 LIKE '%.ba' ;
UPDATE geo_temp_union SET country = 'BARBADOS' WHERE country = 'OTHER' AND email2 LIKE '%.bb' ;
UPDATE geo_temp_union SET country = 'BANGLADESH' WHERE country = 'OTHER' AND email2 LIKE '%.bd' ;
UPDATE geo_temp_union SET country = 'BELGIUM' WHERE country = 'OTHER' AND email2 LIKE '%.be' ;
UPDATE geo_temp_union SET country = 'BURKINA FASO' WHERE country = 'OTHER' AND email2 LIKE '%.bf' ;
UPDATE geo_temp_union SET country = 'BULGARIA' WHERE country = 'OTHER' AND email2 LIKE '%.bg' ;
UPDATE geo_temp_union SET country = 'BAHRAIN' WHERE country = 'OTHER' AND email2 LIKE '%.bh' ;
UPDATE geo_temp_union SET country = 'BURUNDI' WHERE country = 'OTHER' AND email2 LIKE '%.bi' ;
UPDATE geo_temp_union SET country = 'BENIN' WHERE country = 'OTHER' AND email2 LIKE '%.bj' ;
UPDATE geo_temp_union SET country = 'BERMUDA' WHERE country = 'OTHER' AND email2 LIKE '%.bm' ;
UPDATE geo_temp_union SET country = 'BRUNEI' WHERE country = 'OTHER' AND email2 LIKE '%.bn' ;
UPDATE geo_temp_union SET country = 'BOLIVIA' WHERE country = 'OTHER' AND email2 LIKE '%.bo' ;
UPDATE geo_temp_union SET country = 'BRAZIL' WHERE country = 'OTHER' AND email2 LIKE '%.br' ;
UPDATE geo_temp_union SET country = 'BAHAMAS' WHERE country = 'OTHER' AND email2 LIKE '%.bs' ;
UPDATE geo_temp_union SET country = 'BHUTAN' WHERE country = 'OTHER' AND email2 LIKE '%.bt' ;
UPDATE geo_temp_union SET country = 'BOUVET ISLAND' WHERE country = 'OTHER' AND email2 LIKE '%.bv' ;
UPDATE geo_temp_union SET country = 'BOTSWANA' WHERE country = 'OTHER' AND email2 LIKE '%.bw' ;
UPDATE geo_temp_union SET country = 'BELARUS' WHERE country = 'OTHER' AND email2 LIKE '%.by' ;
UPDATE geo_temp_union SET country = 'BELIZE' WHERE country = 'OTHER' AND email2 LIKE '%.bz' ;
UPDATE geo_temp_union SET country = 'CANADA' WHERE country = 'OTHER' AND email2 LIKE '%.ca' ;
UPDATE geo_temp_union SET country = 'COCOS ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.cc' ;
UPDATE geo_temp_union SET country = 'CENTRAL AFRICAN REPUBLIC' WHERE country = 'OTHER' AND email2 LIKE '%.cf' ;
UPDATE geo_temp_union SET country = 'CONGO' WHERE country = 'OTHER' AND email2 LIKE '%.cg' ;
UPDATE geo_temp_union SET country = 'SWITZERLAND' WHERE country = 'OTHER' AND email2 LIKE '%.ch' ;
UPDATE geo_temp_union SET country = 'IVORY COAST' WHERE country = 'OTHER' AND email2 LIKE '%.ci' ;
UPDATE geo_temp_union SET country = 'COOK ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.ck' ;
UPDATE geo_temp_union SET country = 'CHILE' WHERE country = 'OTHER' AND email2 LIKE '%.cl' ;
UPDATE geo_temp_union SET country = 'CAMEROON' WHERE country = 'OTHER' AND email2 LIKE '%.cm' ;
UPDATE geo_temp_union SET country = 'CHINA' WHERE country = 'OTHER' AND email2 LIKE '%.cn' ;
UPDATE geo_temp_union SET country = 'COLOMBIA' WHERE country = 'OTHER' AND email2 LIKE '%.co' ;
UPDATE geo_temp_union SET country = 'COSTA RICA' WHERE country = 'OTHER' AND email2 LIKE '%.cr' ;
UPDATE geo_temp_union SET country = 'CUBA' WHERE country = 'OTHER' AND email2 LIKE '%.cu' ;
UPDATE geo_temp_union SET country = 'CAPE VERDE' WHERE country = 'OTHER' AND email2 LIKE '%.cv' ;
UPDATE geo_temp_union SET country = 'CHRISTMAS ISLAND' WHERE country = 'OTHER' AND email2 LIKE '%.cx' ;
UPDATE geo_temp_union SET country = 'CYPRUS' WHERE country = 'OTHER' AND email2 LIKE '%.cy' ;
UPDATE geo_temp_union SET country = 'CZECH REPUBLIC' WHERE country = 'OTHER' AND email2 LIKE '%.cz' ;
UPDATE geo_temp_union SET country = 'GERMANY' WHERE country = 'OTHER' AND email2 LIKE '%.de' ;
UPDATE geo_temp_union SET country = 'DJIBOUTI' WHERE country = 'OTHER' AND email2 LIKE '%.dj' ;
UPDATE geo_temp_union SET country = 'DENMARK' WHERE country = 'OTHER' AND email2 LIKE '%.dk' ;
UPDATE geo_temp_union SET country = 'DOMINICA' WHERE country = 'OTHER' AND email2 LIKE '%.dm' ;
UPDATE geo_temp_union SET country = 'DOMINICAN REPUBLIC' WHERE country = 'OTHER' AND email2 LIKE '%.do' ;
UPDATE geo_temp_union SET country = 'ALGERIA' WHERE country = 'OTHER' AND email2 LIKE '%.dz' ;
UPDATE geo_temp_union SET country = 'ECUADOR' WHERE country = 'OTHER' AND email2 LIKE '%.ec' ;
UPDATE geo_temp_union SET country = 'ESTONIA' WHERE country = 'OTHER' AND email2 LIKE '%.ee' ;
UPDATE geo_temp_union SET country = 'EGYPT' WHERE country = 'OTHER' AND email2 LIKE '%.eg' ;
UPDATE geo_temp_union SET country = 'WESTERN SAHARA' WHERE country = 'OTHER' AND email2 LIKE '%.eh' ;
UPDATE geo_temp_union SET country = 'ERITREA' WHERE country = 'OTHER' AND email2 LIKE '%.er' ;
UPDATE geo_temp_union SET country = 'SPAIN' WHERE country = 'OTHER' AND email2 LIKE '%.es' ;
UPDATE geo_temp_union SET country = 'ETHIOPIA' WHERE country = 'OTHER' AND email2 LIKE '%.et' ;
UPDATE geo_temp_union SET country = 'FINLAND' WHERE country = 'OTHER' AND email2 LIKE '%.fi' ;
UPDATE geo_temp_union SET country = 'FIJI' WHERE country = 'OTHER' AND email2 LIKE '%.fj' ;
UPDATE geo_temp_union SET country = 'FALKLAND ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.fk' ;
UPDATE geo_temp_union SET country = 'MICRONESIA' WHERE country = 'OTHER' AND email2 LIKE '%.fm' ;
UPDATE geo_temp_union SET country = 'DENMARK' WHERE country = 'OTHER' AND email2 LIKE '%.fo' ;
UPDATE geo_temp_union SET country = 'FRANCE' WHERE country = 'OTHER' AND email2 LIKE '%.fr' ;
UPDATE geo_temp_union SET country = 'GABON' WHERE country = 'OTHER' AND email2 LIKE '%.ga' ;
UPDATE geo_temp_union SET country = 'UNITED KINGDOM OF GREAT BRITAIN & N IRELAND' WHERE country = 'OTHER' AND email2 LIKE '%.gb' ;
UPDATE geo_temp_union SET country = 'GRENADA' WHERE country = 'OTHER' AND email2 LIKE '%.gd' ;
UPDATE geo_temp_union SET country = 'GEORGIA' WHERE country = 'OTHER' AND email2 LIKE '%.ge' ;
UPDATE geo_temp_union SET country = 'FRENCH GUIANA' WHERE country = 'OTHER' AND email2 LIKE '%.gf' ;
UPDATE geo_temp_union SET country = 'GHANA' WHERE country = 'OTHER' AND email2 LIKE '%.gh' ;
UPDATE geo_temp_union SET country = 'GIBRALTAR' WHERE country = 'OTHER' AND email2 LIKE '%.gi' ;
UPDATE geo_temp_union SET country = 'GREENLAND' WHERE country = 'OTHER' AND email2 LIKE '%.gl' ;
UPDATE geo_temp_union SET country = 'GAMBIA' WHERE country = 'OTHER' AND email2 LIKE '%.gm' ;
UPDATE geo_temp_union SET country = 'GUINEA' WHERE country = 'OTHER' AND email2 LIKE '%.gn' ;
UPDATE geo_temp_union SET country = 'GUADALOUPE' WHERE country = 'OTHER' AND email2 LIKE '%.gp' ;
UPDATE geo_temp_union SET country = 'EQUATORIAL GUINEA' WHERE country = 'OTHER' AND email2 LIKE '%.gq' ;
UPDATE geo_temp_union SET country = 'GREECE' WHERE country = 'OTHER' AND email2 LIKE '%.gr' ;
UPDATE geo_temp_union SET country = 'SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.gs' ;
UPDATE geo_temp_union SET country = 'GUATEMALA' WHERE country = 'OTHER' AND email2 LIKE '%.gt' ;
UPDATE geo_temp_union SET country = 'GUAM' WHERE country = 'OTHER' AND email2 LIKE '%.gu' ;
UPDATE geo_temp_union SET country = 'GUINEA BISSAU' WHERE country = 'OTHER' AND email2 LIKE '%.gw' ;
UPDATE geo_temp_union SET country = 'GUYANA' WHERE country = 'OTHER' AND email2 LIKE '%.gy' ;
UPDATE geo_temp_union SET country = 'HONG KONG' WHERE country = 'OTHER' AND email2 LIKE '%.hk' ;
UPDATE geo_temp_union SET country = 'HEARD AND MCDONALD ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.hm' ;
UPDATE geo_temp_union SET country = 'HONDURAS' WHERE country = 'OTHER' AND email2 LIKE '%.hn' ;
UPDATE geo_temp_union SET country = 'HRVATSKA - CROATIA' WHERE country = 'OTHER' AND email2 LIKE '%.hr' ;
UPDATE geo_temp_union SET country = 'HAITI' WHERE country = 'OTHER' AND email2 LIKE '%.ht' ;
UPDATE geo_temp_union SET country = 'HUNGARY' WHERE country = 'OTHER' AND email2 LIKE '%.hu' ;
UPDATE geo_temp_union SET country = 'INDONESIA' WHERE country = 'OTHER' AND email2 LIKE '%.id' ;
UPDATE geo_temp_union SET country = 'IRELAND' WHERE country = 'OTHER' AND email2 LIKE '%.ie' ;
UPDATE geo_temp_union SET country = 'ISRAEL' WHERE country = 'OTHER' AND email2 LIKE '%.il' ;
UPDATE geo_temp_union SET country = 'INDIA' WHERE country = 'OTHER' AND email2 LIKE '%.in' ;
UPDATE geo_temp_union SET country = 'BRITISH INDIAN OCEAN TERRITORY' WHERE country = 'OTHER' AND email2 LIKE '%.io' ;
UPDATE geo_temp_union SET country = 'IRAQ' WHERE country = 'OTHER' AND email2 LIKE '%.iq' ;
UPDATE geo_temp_union SET country = 'IRAN' WHERE country = 'OTHER' AND email2 LIKE '%.ir' ;
UPDATE geo_temp_union SET country = 'ICELAND' WHERE country = 'OTHER' AND email2 LIKE '%.is' ;
UPDATE geo_temp_union SET country = 'ITALY' WHERE country = 'OTHER' AND email2 LIKE '%.it' ;
UPDATE geo_temp_union SET country = 'JAMAICA' WHERE country = 'OTHER' AND email2 LIKE '%.jm' ;
UPDATE geo_temp_union SET country = 'JORDAN' WHERE country = 'OTHER' AND email2 LIKE '%.jo' ;
UPDATE geo_temp_union SET country = 'JAPAN' WHERE country = 'OTHER' AND email2 LIKE '%.jp' ;
UPDATE geo_temp_union SET country = 'KENYA' WHERE country = 'OTHER' AND email2 LIKE '%.ke' ;
UPDATE geo_temp_union SET country = 'KYRGYZ REPUBLIC' WHERE country = 'OTHER' AND email2 LIKE '%.kg' ;
UPDATE geo_temp_union SET country = 'CAMBODIA' WHERE country = 'OTHER' AND email2 LIKE '%.kh' ;
UPDATE geo_temp_union SET country = 'KIRIBATI' WHERE country = 'OTHER' AND email2 LIKE '%.ki' ;
UPDATE geo_temp_union SET country = 'COMOROS' WHERE country = 'OTHER' AND email2 LIKE '%.km' ;
UPDATE geo_temp_union SET country = 'SAINT KITTS AND NEVIS' WHERE country = 'OTHER' AND email2 LIKE '%.kn' ;
UPDATE geo_temp_union SET country = 'KOREA' WHERE country = 'OTHER' AND email2 LIKE '%.kp' ;
UPDATE geo_temp_union SET country = 'KOREA' WHERE country = 'OTHER' AND email2 LIKE '%.kr' ;
UPDATE geo_temp_union SET country = 'KUWAIT' WHERE country = 'OTHER' AND email2 LIKE '%.kw' ;
UPDATE geo_temp_union SET country = 'CAYMAN ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.ky' ;
UPDATE geo_temp_union SET country = 'KAZAKHSTAN' WHERE country = 'OTHER' AND email2 LIKE '%.kz' ;
UPDATE geo_temp_union SET country = 'LAOS' WHERE country = 'OTHER' AND email2 LIKE '%.la' ;
UPDATE geo_temp_union SET country = 'LEBANON' WHERE country = 'OTHER' AND email2 LIKE '%.lb' ;
UPDATE geo_temp_union SET country = 'SAINT LUCIA' WHERE country = 'OTHER' AND email2 LIKE '%.lc' ;
UPDATE geo_temp_union SET country = 'LIECHTENSTEIN' WHERE country = 'OTHER' AND email2 LIKE '%.li' ;
UPDATE geo_temp_union SET country = 'SRI LANKA' WHERE country = 'OTHER' AND email2 LIKE '%.lk' ;
UPDATE geo_temp_union SET country = 'LIBERIA' WHERE country = 'OTHER' AND email2 LIKE '%.lr' ;
UPDATE geo_temp_union SET country = 'LESOTHO' WHERE country = 'OTHER' AND email2 LIKE '%.ls' ;
UPDATE geo_temp_union SET country = 'LITHUANIA' WHERE country = 'OTHER' AND email2 LIKE '%.lt' ;
UPDATE geo_temp_union SET country = 'LUXEMBOURG' WHERE country = 'OTHER' AND email2 LIKE '%.lu' ;
UPDATE geo_temp_union SET country = 'LATVIA' WHERE country = 'OTHER' AND email2 LIKE '%.lv' ;
UPDATE geo_temp_union SET country = 'LIBYA' WHERE country = 'OTHER' AND email2 LIKE '%.ly' ;
UPDATE geo_temp_union SET country = 'MOROCCO' WHERE country = 'OTHER' AND email2 LIKE '%.ma' ;
UPDATE geo_temp_union SET country = 'MONACO' WHERE country = 'OTHER' AND email2 LIKE '%.mc' ;
UPDATE geo_temp_union SET country = 'MOLDOVA' WHERE country = 'OTHER' AND email2 LIKE '%.md' ;
UPDATE geo_temp_union SET country = 'MADAGASCAR' WHERE country = 'OTHER' AND email2 LIKE '%.mg' ;
UPDATE geo_temp_union SET country = 'MARSHALL ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.mh' ;
UPDATE geo_temp_union SET country = 'MACEDONIA' WHERE country = 'OTHER' AND email2 LIKE '%.mk' ;
UPDATE geo_temp_union SET country = 'MALI' WHERE country = 'OTHER' AND email2 LIKE '%.ml' ;
UPDATE geo_temp_union SET country = 'MYANMAR' WHERE country = 'OTHER' AND email2 LIKE '%.mm' ;
UPDATE geo_temp_union SET country = 'MONGOLIA' WHERE country = 'OTHER' AND email2 LIKE '%.mn' ;
UPDATE geo_temp_union SET country = 'MACAU' WHERE country = 'OTHER' AND email2 LIKE '%.mo' ;
UPDATE geo_temp_union SET country = 'NORTHERN MARIANA ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.mp' ;
UPDATE geo_temp_union SET country = 'MARTINIQUE' WHERE country = 'OTHER' AND email2 LIKE '%.mq' ;
UPDATE geo_temp_union SET country = 'MAURITANIA' WHERE country = 'OTHER' AND email2 LIKE '%.mr' ;
UPDATE geo_temp_union SET country = 'MONTSERRAT' WHERE country = 'OTHER' AND email2 LIKE '%.ms' ;
UPDATE geo_temp_union SET country = 'MALTA' WHERE country = 'OTHER' AND email2 LIKE '%.mt' ;
UPDATE geo_temp_union SET country = 'MAURITIUS' WHERE country = 'OTHER' AND email2 LIKE '%.mu' ;
UPDATE geo_temp_union SET country = 'MALDIVES' WHERE country = 'OTHER' AND email2 LIKE '%.mv' ;
UPDATE geo_temp_union SET country = 'MALAWI' WHERE country = 'OTHER' AND email2 LIKE '%.mw' ;
UPDATE geo_temp_union SET country = 'MEXICO' WHERE country = 'OTHER' AND email2 LIKE '%.mx' ;
UPDATE geo_temp_union SET country = 'MALAYSIA' WHERE country = 'OTHER' AND email2 LIKE '%.my' ;
UPDATE geo_temp_union SET country = 'MOZAMBIQUE' WHERE country = 'OTHER' AND email2 LIKE '%.mz' ;
UPDATE geo_temp_union SET country = 'NAMIBIA' WHERE country = 'OTHER' AND email2 LIKE '%.na' ;
UPDATE geo_temp_union SET country = 'NEW CALEDONIA' WHERE country = 'OTHER' AND email2 LIKE '%.nc' ;
UPDATE geo_temp_union SET country = 'NIGER' WHERE country = 'OTHER' AND email2 LIKE '%.ne' ;
UPDATE geo_temp_union SET country = 'NORFOLK ISLAND' WHERE country = 'OTHER' AND email2 LIKE '%.nf' ;
UPDATE geo_temp_union SET country = 'NIGERIA' WHERE country = 'OTHER' AND email2 LIKE '%.ng' ;
UPDATE geo_temp_union SET country = 'NICARAGUA' WHERE country = 'OTHER' AND email2 LIKE '%.ni' ;
UPDATE geo_temp_union SET country = 'NETHERLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.nl' ;
UPDATE geo_temp_union SET country = 'NORWAY' WHERE country = 'OTHER' AND email2 LIKE '%.no' ;
UPDATE geo_temp_union SET country = 'NEPAL' WHERE country = 'OTHER' AND email2 LIKE '%.np' ;
UPDATE geo_temp_union SET country = 'NAURU' WHERE country = 'OTHER' AND email2 LIKE '%.nr' ;
UPDATE geo_temp_union SET country = 'NIUE' WHERE country = 'OTHER' AND email2 LIKE '%.nu' ;
UPDATE geo_temp_union SET country = 'NEW ZEALAND' WHERE country = 'OTHER' AND email2 LIKE '%.nz' ;
UPDATE geo_temp_union SET country = 'OMAN' WHERE country = 'OTHER' AND email2 LIKE '%.om' ;
UPDATE geo_temp_union SET country = 'PANAMA' WHERE country = 'OTHER' AND email2 LIKE '%.pa' ;
UPDATE geo_temp_union SET country = 'PERU' WHERE country = 'OTHER' AND email2 LIKE '%.pe' ;
UPDATE geo_temp_union SET country = 'FRENCH POLYNESIA' WHERE country = 'OTHER' AND email2 LIKE '%.pf' ;
UPDATE geo_temp_union SET country = 'PAPUA NEW GUINEA' WHERE country = 'OTHER' AND email2 LIKE '%.pg' ;
UPDATE geo_temp_union SET country = 'PHILIPPINES' WHERE country = 'OTHER' AND email2 LIKE '%.ph' ;
UPDATE geo_temp_union SET country = 'PAKISTAN' WHERE country = 'OTHER' AND email2 LIKE '%.pk' ;
UPDATE geo_temp_union SET country = 'POLAND' WHERE country = 'OTHER' AND email2 LIKE '%.pl' ;
UPDATE geo_temp_union SET country = 'ST PIERRE ET MIQUELON' WHERE country = 'OTHER' AND email2 LIKE '%.pm' ;
UPDATE geo_temp_union SET country = 'PITCAIRN' WHERE country = 'OTHER' AND email2 LIKE '%.pn' ;
UPDATE geo_temp_union SET country = 'PUERTO RICO' WHERE country = 'OTHER' AND email2 LIKE '%.pr' ;
UPDATE geo_temp_union SET country = 'PORTUGAL' WHERE country = 'OTHER' AND email2 LIKE '%.pt' ;
UPDATE geo_temp_union SET country = 'PALAU' WHERE country = 'OTHER' AND email2 LIKE '%.pw' ;
UPDATE geo_temp_union SET country = 'PARAGUAY' WHERE country = 'OTHER' AND email2 LIKE '%.py' ;
UPDATE geo_temp_union SET country = 'QATAR' WHERE country = 'OTHER' AND email2 LIKE '%.qa' ;
UPDATE geo_temp_union SET country = 'REUNION' WHERE country = 'OTHER' AND email2 LIKE '%.re' ;
UPDATE geo_temp_union SET country = 'ROMANIA' WHERE country = 'OTHER' AND email2 LIKE '%.ro' ;
UPDATE geo_temp_union SET country = 'RUSSIA' WHERE country = 'OTHER' AND email2 LIKE '%.ru' ;
UPDATE geo_temp_union SET country = 'RWANDA' WHERE country = 'OTHER' AND email2 LIKE '%.rw' ;
UPDATE geo_temp_union SET country = 'SAUDI ARABIA' WHERE country = 'OTHER' AND email2 LIKE '%.sa' ;
UPDATE geo_temp_union SET country = 'SOLOMON ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.sb' ;
UPDATE geo_temp_union SET country = 'SEYCHELLES' WHERE country = 'OTHER' AND email2 LIKE '%.sc' ;
UPDATE geo_temp_union SET country = 'SUDAN' WHERE country = 'OTHER' AND email2 LIKE '%.sd' ;
UPDATE geo_temp_union SET country = 'SWEDEN' WHERE country = 'OTHER' AND email2 LIKE '%.se' ;
UPDATE geo_temp_union SET country = 'SINGAPORE' WHERE country = 'OTHER' AND email2 LIKE '%.sg' ;
UPDATE geo_temp_union SET country = 'ST HELENA' WHERE country = 'OTHER' AND email2 LIKE '%.sh' ;
UPDATE geo_temp_union SET country = 'SLOVENIA' WHERE country = 'OTHER' AND email2 LIKE '%.si' ;
UPDATE geo_temp_union SET country = 'SVALBARD AND JAN MAYEN ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.sj' ;
UPDATE geo_temp_union SET country = 'SLOVAKIA' WHERE country = 'OTHER' AND email2 LIKE '%.sk' ;
UPDATE geo_temp_union SET country = 'SIERRA LEONE' WHERE country = 'OTHER' AND email2 LIKE '%.sl' ;
UPDATE geo_temp_union SET country = 'SAN MARINO' WHERE country = 'OTHER' AND email2 LIKE '%.sm' ;
UPDATE geo_temp_union SET country = 'SENEGAL' WHERE country = 'OTHER' AND email2 LIKE '%.sn' ;
UPDATE geo_temp_union SET country = 'SOMALIA' WHERE country = 'OTHER' AND email2 LIKE '%.so' ;
UPDATE geo_temp_union SET country = 'SURINAME' WHERE country = 'OTHER' AND email2 LIKE '%.sr' ;
UPDATE geo_temp_union SET country = 'SAO TOME AND PRINCIPE' WHERE country = 'OTHER' AND email2 LIKE '%.st' ;
UPDATE geo_temp_union SET country = 'SALVADOR' WHERE country = 'OTHER' AND email2 LIKE '%.sv' ;
UPDATE geo_temp_union SET country = 'SYRIA' WHERE country = 'OTHER' AND email2 LIKE '%.sy' ;
UPDATE geo_temp_union SET country = 'SWAZILAND' WHERE country = 'OTHER' AND email2 LIKE '%.sz' ;
UPDATE geo_temp_union SET country = 'TURKS AND CAICOS ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.tc' ;
UPDATE geo_temp_union SET country = 'CHAD' WHERE country = 'OTHER' AND email2 LIKE '%.td' ;
UPDATE geo_temp_union SET country = 'FRENCH SOUTHERN TERRITORIES' WHERE country = 'OTHER' AND email2 LIKE '%.tf' ;
UPDATE geo_temp_union SET country = 'TOGO' WHERE country = 'OTHER' AND email2 LIKE '%.tg' ;
UPDATE geo_temp_union SET country = 'THAILAND' WHERE country = 'OTHER' AND email2 LIKE '%.th' ;
UPDATE geo_temp_union SET country = 'TAJIKISTAN' WHERE country = 'OTHER' AND email2 LIKE '%.tj' ;
UPDATE geo_temp_union SET country = 'TOKELAU' WHERE country = 'OTHER' AND email2 LIKE '%.tk' ;
UPDATE geo_temp_union SET country = 'TURKMENISTAN' WHERE country = 'OTHER' AND email2 LIKE '%.tm' ;
UPDATE geo_temp_union SET country = 'TUNISIA' WHERE country = 'OTHER' AND email2 LIKE '%.tn' ;
UPDATE geo_temp_union SET country = 'TONGA' WHERE country = 'OTHER' AND email2 LIKE '%.to' ;
UPDATE geo_temp_union SET country = 'EAST TIMOR' WHERE country = 'OTHER' AND email2 LIKE '%.tp' ;
UPDATE geo_temp_union SET country = 'TURKEY' WHERE country = 'OTHER' AND email2 LIKE '%.tr' ;
UPDATE geo_temp_union SET country = 'TRINIDAD AND TOBAGO' WHERE country = 'OTHER' AND email2 LIKE '%.tt' ;
UPDATE geo_temp_union SET country = 'TUVALU' WHERE country = 'OTHER' AND email2 LIKE '%.tv' ;
UPDATE geo_temp_union SET country = 'TAIWAN' WHERE country = 'OTHER' AND email2 LIKE '%.tw' ;
UPDATE geo_temp_union SET country = 'TANZANIA' WHERE country = 'OTHER' AND email2 LIKE '%.tz' ;
UPDATE geo_temp_union SET country = 'UKRAINE' WHERE country = 'OTHER' AND email2 LIKE '%.ua' ;
UPDATE geo_temp_union SET country = 'UGANDA' WHERE country = 'OTHER' AND email2 LIKE '%.ug' ;
UPDATE geo_temp_union SET country = 'UNITED KINGDOM' WHERE country = 'OTHER' AND email2 LIKE '%.uk' ;
UPDATE geo_temp_union SET country = 'UNITED STATES MINOR OUTLYING ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.um' ;
UPDATE geo_temp_union SET country = 'UNITED STATES' WHERE country = 'OTHER' AND email2 LIKE '%.us' ;
UPDATE geo_temp_union SET country = 'URUGUAY' WHERE country = 'OTHER' AND email2 LIKE '%.uy' ;
UPDATE geo_temp_union SET country = 'UZBEKISTAN' WHERE country = 'OTHER' AND email2 LIKE '%.uz' ;
UPDATE geo_temp_union SET country = 'VATICAN CITY STATE' WHERE country = 'OTHER' AND email2 LIKE '%.va' ;
UPDATE geo_temp_union SET country = 'SAINT VINCENT AND THE GRENADINES' WHERE country = 'OTHER' AND email2 LIKE '%.vc' ;
UPDATE geo_temp_union SET country = 'VENEZUELA' WHERE country = 'OTHER' AND email2 LIKE '%.ve' ;
UPDATE geo_temp_union SET country = 'BRITISH VIRGIN ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.vg' ;
UPDATE geo_temp_union SET country = 'US VIRGIN ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.vi' ;
UPDATE geo_temp_union SET country = 'VIET NAM' WHERE country = 'OTHER' AND email2 LIKE '%.vn' ;
UPDATE geo_temp_union SET country = 'VANUATU' WHERE country = 'OTHER' AND email2 LIKE '%.vu' ;
UPDATE geo_temp_union SET country = 'WALLIS AND FUTUNA ISLANDS' WHERE country = 'OTHER' AND email2 LIKE '%.wf' ;
UPDATE geo_temp_union SET country = 'SAMOA' WHERE country = 'OTHER' AND email2 LIKE '%.ws' ;
UPDATE geo_temp_union SET country = 'YEMEN' WHERE country = 'OTHER' AND email2 LIKE '%.ye' ;
UPDATE geo_temp_union SET country = 'MAYOTTE' WHERE country = 'OTHER' AND email2 LIKE '%.yt' ;
UPDATE geo_temp_union SET country = 'MONTENEGRO' WHERE country = 'OTHER' AND email2 LIKE '%.yu' ;
UPDATE geo_temp_union SET country = 'SOUTH AFRICA' WHERE country = 'OTHER' AND email2 LIKE '%.za' ;
UPDATE geo_temp_union SET country = 'ZAMBIA' WHERE country = 'OTHER' AND email2 LIKE '%.zm' ;
UPDATE geo_temp_union SET country = 'ZAIRE' WHERE country = 'OTHER' AND email2 LIKE '%.zr' ;
UPDATE geo_temp_union SET country = 'ZIMBABWE' WHERE country = 'OTHER' AND email2 LIKE '%.zw' ;


/* CITY VIDE, DANS AUTRES LANGUES, MAL ORTHOGRAPHIEES OU FAUSSE */
UPDATE geo_temp_union SET city = 'BUENOS AIRES - BALVANERA' where country ='ARGENTINA' AND city = 'BALVANERA';
UPDATE geo_temp_union SET city = 'BUENOS AIRES - LA BOCA' where country ='ARGENTINA' AND city = 'LA BOCA';
UPDATE geo_temp_union SET city = 'BUENOS AIRES - ALMAGRO' where country ='ARGENTINA' AND city = 'ALMAGRO';
UPDATE geo_temp_union SET city = 'BUENOS AIRES - RETIRO' where country ='ARGENTINA' AND city = 'RETIRO';
UPDATE geo_temp_union set city = 'BUENOS AIRES - COGHLAN' where country = 'ARGENTINA' AND city = 'COGHLAN';
UPDATE geo_temp_union set city = 'BUENOS AIRES - BOEDO' where country = 'ARGENTINA' AND city = 'BOEDO';
UPDATE geo_temp_union set city = 'BUENOS AIRES - 9 DE JULIO' where country = 'ARGENTINA' AND city = '9 DE JULIO'; 

UPDATE geo_temp_union SET city = 'ALGER' where country ='ALGERIA' AND city = 'DZAYER';
UPDATE geo_temp_union SET city = 'ALGER' where country ='ALGERIA' AND city = 'ALGIIER';
UPDATE geo_temp_union SET city = 'ALGER' where country ='ALGERIA' AND city like 'ALGIER';
UPDATE geo_temp_union SET city = 'ALGER' where country ='ALGERIA' AND city = 'ALGERIE';

UPDATE geo_temp_union SET city = 'CAIRO' where country ='EGYPT' AND city = 'LE CAIRE';

UPDATE geo_temp_union SET city = 'ATHENS' where country ='GREECE' AND city LIKE 'ATHENE';
UPDATE geo_temp_union SET city = 'ATHENS' where country ='GREECE' AND city LIKE 'ATHENES';

UPDATE geo_temp_union SET city = 'HONG KONG' where country ='HONG KONG' AND city = 'HONG KONG SAR';
UPDATE geo_temp_union SET city = 'HONG KONG' where country ='HONG KONG' AND city = 'HONGKONG SAR';
UPDATE geo_temp_union SET city = 'HONG KONG' where country ='HONG KONG' AND city = 'HONG KONG CITY';
UPDATE geo_temp_union SET city = 'HONG KONG' where country ='HONG KONG' AND city = 'HONGKONG CITY';

UPDATE geo_temp_union SET city = 'FIRENZE' where country ='ITALY' AND city = 'FLORENCE';
UPDATE geo_temp_union SET city = 'FIRENZE' where country ='ITALY' AND city = 'FIRENZE FI';
UPDATE geo_temp_union SET city = 'GENOVA' where country ='ITALY' AND city = 'GENES';
UPDATE geo_temp_union SET city = 'ROMA' where country ='ITALY' AND city = 'ROME';
UPDATE geo_temp_union SET city = 'MILANO' where country ='ITALY' AND city = 'MILAN';
UPDATE geo_temp_union SET city = 'VENICE' where country ='ITALY' AND city = 'VENISE';
UPDATE geo_temp_union SET city = 'VERONA' where country ='ITALY' AND city = 'VERONE';
UPDATE geo_temp_union SET city = 'PISA' where country ='ITALY' AND city = 'PISE';
UPDATE geo_temp_union SET city = 'NAPOLI' where country ='ITALY' AND city = 'NAPLES';
UPDATE geo_temp_union SET city = 'PALERMO' where country ='ITALY' AND city = 'PALERME';
UPDATE geo_temp_union SET city = 'SIRACUSA' where country ='ITALY' AND city = 'SYRACUSE';
UPDATE geo_temp_union SET city = 'TORINO' where country ='ITALY' AND city = 'TURIN';

UPDATE geo_temp_union SET city = 'FRANKFURT' where country ='GERMANY' AND city = 'FRANCFORT';
UPDATE geo_temp_union SET city = 'FRANKFURT' where country ='GERMANY' AND city = 'FRANKFORT';
UPDATE geo_temp_union SET city = 'FRANKFURT' where country ='GERMANY' AND city = 'FRANCKFURT';
UPDATE geo_temp_union SET city = 'HAMBURG' where country ='GERMANY' AND city = 'HAMBOURG';
UPDATE geo_temp_union SET city = 'MUNCHEN' where country ='GERMANY' AND city = 'MUNICH';
UPDATE geo_temp_union SET city = 'MAINZ' where country ='GERMANY' AND city = 'MAYENCE';
UPDATE geo_temp_union SET city = 'MAGDEBURG' where country ='GERMANY' AND city = 'MAGDEBOURG';
UPDATE geo_temp_union SET city = 'NUREMBERG' where country ='GERMANY' AND city = 'NURNBERG';
UPDATE geo_temp_union SET city = 'OLDENBURG' where country ='GERMANY' AND city = 'OLDENBOURG';
UPDATE geo_temp_union SET city = 'KOLN' where country ='GERMANY' AND city = 'COLOGNE';
UPDATE geo_temp_union SET city = 'KASSEL' where country ='GERMANY' AND city = 'CASSEL';
UPDATE geo_temp_union SET city = 'DUISBURG' where country ='GERMANY' AND city = 'DUISBOURG';
UPDATE geo_temp_union SET city = 'FREIBURG' where country ='GERMANY' AND city = 'FRIBOURG';

UPDATE geo_temp_union SET city = 'BEIRUT' where country ='LEBANON' AND city = 'BEYROUTH';
UPDATE geo_temp_union SET city = 'BEIRUT' where country ='LEBANON' AND city = 'BEYROUT';
UPDATE geo_temp_union SET city = 'BEIRUT' where country ='LEBANON' AND city = 'BEYRUTH';
UPDATE geo_temp_union SET city = 'BEIRUT' where country ='LEBANON' AND city = 'BEYRUT';

UPDATE geo_temp_union SET city = 'CHISINAU' where country ='MOLDOVA' AND city = 'CHISIHOU';
UPDATE geo_temp_union SET city = 'CHISINAU' where country ='MOLDOVA' AND city = 'CHISIINAU';
UPDATE geo_temp_union SET city = 'CHISINAU' where country ='MOLDOVA' AND city = 'CHISINU';
UPDATE geo_temp_union SET city = 'CHISINAU' where country ='MOLDOVA' AND city = 'CHISIWAN';
UPDATE geo_temp_union SET city = 'CHISINAU' where country ='MOLDOVA' AND city = 'KISHINAU';
UPDATE geo_temp_union SET city = 'CHISINAU' where country ='MOLDOVA' AND city = 'KISHINEV';

UPDATE geo_temp_union SET city = 'TILBURG' where country ='NETHERLANDS' AND city = 'TILBOURG';

UPDATE geo_temp_union SET city = 'RABAT' where country ='MOROCCO' AND city = 'RABBAT';

UPDATE geo_temp_union SET city = 'LIMA - SAN ISIDRO' where country ='PERU' AND city = 'SAN ISIDRO';

UPDATE geo_temp_union SET city = 'GDANSK' where country ='POLAND' AND city = 'GDA';
UPDATE geo_temp_union SET city = 'WARSAW' where country ='POLAND' AND city = 'WARZSAW';
UPDATE geo_temp_union SET city = 'WARSAW' where country ='POLAND' AND city = 'WARZSAWA';
UPDATE geo_temp_union SET city = 'WARSAW' where country ='POLAND' AND city = 'WARSAWA';
UPDATE geo_temp_union SET city = 'WARSAW' where country ='POLAND' AND city = 'WARZAWA';
UPDATE geo_temp_union SET city = 'WARSAW' where country ='POLAND' AND city = 'VARSOVIE';

UPDATE geo_temp_union SET city = 'BUCHAREST' where country ='ROMANIA' AND city = 'BUCAREST';
UPDATE geo_temp_union SET city = 'BUCHAREST' where country ='ROMANIA' AND city = 'BUCURESTI';
UPDATE geo_temp_union SET city = 'BUCHAREST' where country ='ROMANIA' AND city = 'GUCHAREST';

UPDATE geo_temp_union SET city = 'MOSCOW' where country ='RUSSIA' AND city = 'MOSKAU';
UPDATE geo_temp_union SET city = 'MOSCOW' where country ='RUSSIA' AND city = 'MOSCOU';
UPDATE geo_temp_union SET city = 'MOSCOW' where country ='RUSSIA' AND city = '???K??';
UPDATE geo_temp_union SET city = 'MOSCOW' where country ='RUSSIA' AND city = 'MOSCOV';
UPDATE geo_temp_union SET city = 'MOSCOW' where country ='RUSSIA' AND city = 'MOSKVA';
UPDATE geo_temp_union SET city = 'MOSCOW' where country ='RUSSIA' AND city = 'MOSKOW';
UPDATE geo_temp_union SET city = 'PERM' where country ='RUSSIA' AND city = 'PPE';
UPDATE geo_temp_union SET city = 'ROSTOV ON DON' where country ='RUSSIA' AND city = 'ROSTOV';
UPDATE geo_temp_union SET city = 'ROSTOV ON DON' where country ='RUSSIA' AND city = 'ROSTOV NA DONU';
UPDATE geo_temp_union SET city = 'ST PETERSBURG' where country ='RUSSIA' AND city = 'ST PETERBURG';
UPDATE geo_temp_union SET city = 'ST PETERSBURG' where country ='RUSSIA' AND city = 'STPETERBURG';
UPDATE geo_temp_union SET city = 'ST PETERSBURG' where country ='RUSSIA' AND city = 'SANKT PETERBURG';
UPDATE geo_temp_union SET city = 'ST PETERSBURG' where country ='RUSSIA' AND city = 'SANKTPETERBURG';
UPDATE geo_temp_union SET city = 'ST PETERSBURG' where country ='RUSSIA' AND city = 'SAINT PETERSBURG';
UPDATE geo_temp_union SET city = 'ST PETERSBURG' where country ='RUSSIA' AND city = 'SAINTPETERSBURG';
UPDATE geo_temp_union SET city = 'ST PETERSBURG' where country ='RUSSIA' AND city = 'STE PETERSBURG';
UPDATE geo_temp_union SET city = 'ST PETERSBURG' where country ='RUSSIA' AND city = 'STEPETERSBURG';
UPDATE geo_temp_union SET city = 'NIZHNY NOVGOROD' where country ='RUSSIA' AND city = 'NIZHNIY NOVGOROD';
UPDATE geo_temp_union SET city = 'NIZHNY NOVGOROD' where country ='RUSSIA' AND city = 'NIZHNIYNOVGOROD';
UPDATE geo_temp_union SET city = 'EKATERINBURG' where country ='RUSSIA' AND city = 'YEKATERINBURG';
UPDATE geo_temp_union SET city = '' where country ='RUSSIA' AND city = 'RUSSIA';
UPDATE geo_temp_union SET city = '' where country ='RUSSIA' AND city = '–ú–ûSKV–ê';

UPDATE geo_temp_union SET city = 'SEOUL' where country ='SOUTH KOREA' AND city = 'SEOUL CITY';
UPDATE geo_temp_union SET city = 'SEOUL' where country ='SOUTH KOREA' AND city = 'SEOULCITY';

UPDATE geo_temp_union SET city = 'BARCELONA' where country ='SPAIN' AND city = 'BARCELONE';
UPDATE geo_temp_union SET city = 'GIRONA' where country ='SPAIN' AND city = 'GERONE';
UPDATE geo_temp_union SET city = 'MURCIA' where country ='SPAIN' AND city = 'MURCIE';
UPDATE geo_temp_union SET city = 'ZARAGOZA' where country ='SPAIN' AND city = 'SARAGOSSE';
UPDATE geo_temp_union SET city = 'TARRAGONA' where country ='SPAIN' AND city = 'TARRAGONE';
UPDATE geo_temp_union SET city = 'VALENCIA' where country ='SPAIN' AND city = 'VALENCE';

UPDATE geo_temp_union SET city = 'ANKARA' where country ='TURKEY' AND city = 'CUBUK';
UPDATE geo_temp_union SET city = 'ISTANBUL' where country ='TURKEY' AND city = 'ISTAMBUL';

UPDATE geo_temp_union SET city = 'KIEV' where country ='UKRAINE' AND city = 'KYEV';
UPDATE geo_temp_union SET city = 'KIEV' where country ='UKRAINE' AND city = 'KIYV';

UPDATE geo_temp_union SET city = 'LAS VEGAS' where country ='UNITED STATES' AND city = 'LASVEGAS';

/* MODIFICATION CHAMP zipcode VIDE AVEC ZIPCODE GENERIQUE */
UPDATE geo_temp_union set zipcode = '16100' where country = 'ALGERIA' AND city like 'ALGER' AND zipcode like '';

UPDATE geo_temp_union set zipcode = 'C 1000' where country = 'ARGENTINA' AND city like 'ABASTO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'X 5186' where country = 'ARGENTINA' AND city like 'ALTA GRACIA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'Q 8345' where country = 'ARGENTINA' AND city like 'ALUMINE' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'K 4740' where country = 'ARGENTINA' AND city like 'ANDALGALA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'U 9103' where country = 'ARGENTINA' AND city like 'CHUBUT' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'H 3500' where country = 'ARGENTINA' AND city like 'CHACO' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'A 4417' where country = 'ARGENTINA' AND city like 'CACHI' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'K 4700' where country = 'ARGENTINA' AND city like 'CATAMARCA' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'P 3610' where country = 'ARGENTINA' AND city like 'CLORINDA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'U 9000' where country = 'ARGENTINA' AND city like 'COMODORO RIVADAVIA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'X 5000' where country = 'ARGENTINA' AND city like 'CORDOBA' AND zipcode like '';
Update geo_temp_union set zipcode = 'W 3400' where country = 'ARGENTINA' AND city like 'CORRIENTES' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'B 7200' where country = 'ARGENTINA' AND city like 'FLORES' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'P 3600' where country = 'ARGENTINA' AND city like 'FORMOSA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'L 6360' where country = 'ARGENTINA' AND city like 'GENERAL PICO' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'Y 4600' where country = 'ARGENTINA' AND city like 'JUJUY' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'S 2128' where country = 'ARGENTINA' AND city like 'ARROYO SECO' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'L 6300' where country = 'ARGENTINA' AND city like 'LA PAMPA' AND zipcode like '';
Update geo_temp_union set zipcode = 'C 1000' where country = 'ARGENTINA' AND city like 'PATERNAL' AND zipcode like '';  
UPDATE geo_temp_union set zipcode = 'E 3100' where country = 'ARGENTINA' AND city like 'PARANA' AND zipcode like '';  
Update geo_temp_union set zipcode = 'N 3300' where country = 'ARGENTINA' AND city like 'POSADAS' AND zipcode like ''; 
Update geo_temp_union set zipcode = 'B 7600' where country = 'ARGENTINA' AND city like 'MAR DEL PLATA' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'M 5500' where country = 'ARGENTINA' AND city like 'MENDOZA' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'N 3300' where country = 'ARGENTINA' AND city like 'MISIONES' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'Q 8300' where country = 'ARGENTINA' AND city like 'NEUQUEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'C 1000' where country = 'ARGENTINA' AND city like 'NUNEZ' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'S 2300' where country = 'ARGENTINA' AND city like 'RAFAELA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'H 3500' where country = 'ARGENTINA' AND city like 'RESISTENCIA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'X 5800' where country = 'ARGENTINA' AND city like 'RIO CUARTO' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'R 8500' where country = 'ARGENTINA' AND city like 'RIO NEGRO' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'J 5400' where country = 'ARGENTINA' AND city like 'SAN JUAN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'T 4000' where country = 'ARGENTINA' AND city like 'SAN MIGUEL DE TUCUMAN' AND zipcode like '';
Update geo_temp_union set zipcode = 'D 5700' where country = 'ARGENTINA' AND city LIKE 'SAN LUIS' AND zipcode like '';
Update geo_temp_union set zipcode = 'Y 4600' where country = 'ARGENTINA' AND city like 'SAN SALVADOR DE JUJUY' AND zipcode like '';
Update geo_temp_union set zipcode = 'S 3000' where country = 'ARGENTINA' AND city like 'SANTA FE' AND zipcode like '';
Update geo_temp_union set zipcode = 'L 6300' where country = 'ARGENTINA' AND city like 'SANTA ROSA LA PAMPA' AND zipcode like ''; 
Update geo_temp_union set zipcode = 'Z 9400' where country = 'ARGENTINA' AND city like 'SANTA CRUZ' AND zipcode like ''; 
Update geo_temp_union set zipcode = 'A 4400' where country = 'ARGENTINA' AND city like 'SALTA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'T 4000' where country = 'ARGENTINA' AND city like 'TUCUMAN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'X 5900' where country = 'ARGENTINA' AND city like 'VILLA MARIA' AND zipcode like ''; 
UPDATE geo_temp_union set zipcode = 'C 1000' where country = 'ARGENTINA' AND city like 'BUENOS AIRES' AND zipcode like '';

Update geo_temp_union set zipcode = '20000' where country = 'BRAZIL' AND city like 'RIO DE JANEIRO' AND zipcode like ''; 
Update geo_temp_union set zipcode = '01000 000' where country = 'BRAZIL' AND city like 'SAO PAULO' AND zipcode like ''; 

Update geo_temp_union set zipcode = '1000' where country = 'BULGARIA' AND city like 'SOFIA' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '11' where country = 'COLOMBIA' AND city like 'BOGOTA' AND zipcode like '';
Update geo_temp_union set zipcode = '130000' where country = 'COLOMBIA' AND city like 'CARTAGENA' AND zipcode like ''; 

UPDATE geo_temp_union set zipcode = '3580000' where country = 'CHILE' AND city like 'SANTIAGO' AND zipcode like ''; 

UPDATE geo_temp_union set zipcode = '10101' where country = 'COSTA RICA' AND city like 'SAN JOSE' AND zipcode like ''; 

UPDATE geo_temp_union set zipcode = '11511' where country = 'EGYPT' AND city like 'CAIRO' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '63000' where country = 'FRANCE' AND city like 'CLERMONT FERRAND' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '38000' where country = 'FRANCE' AND city like 'GRENOBLE' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '69001' where country = 'FRANCE' AND city like 'LYON' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '59000' where country = 'FRANCE' AND city like 'LILLE' AND zipcode like '';
Update geo_temp_union set zipcode = '72000' where country = 'FRANCE' AND city like 'LE MANS' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '13001' where country = 'FRANCE' AND city like 'MARSEILLE' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '06000' where country = 'FRANCE' AND city like 'NICE' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '75000' where country = 'FRANCE' AND city like 'PARIS' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '64000' where country = 'FRANCE' AND city like 'PAU' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '66000' where country = 'FRANCE' AND city like 'PERPIGNAN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '35000' where country = 'FRANCE' AND city like 'RENNES' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '76000' where country = 'FRANCE' AND city like 'ROUEN' AND zipcode like '';
Update geo_temp_union set zipcode = '67000' where country = 'FRANCE' AND city like 'STRASBOURG' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '31000' where country = 'FRANCE' AND city like 'TOULOUSE' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '78000' where country = 'FRANCE' AND city like 'VERSAILLES' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '69100' where country = 'FRANCE' AND city like 'VILLEURBANNE' AND zipcode like '';

Update geo_temp_union set zipcode = '52062' where country = 'GERMANY' AND city like 'AACHEN' AND zipcode like '';
Update geo_temp_union set zipcode = '86000' where country = 'GERMANY' AND city like 'AUGSBURG' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '10000' where country = 'GERMANY' AND city like 'BERLIN' AND zipcode like '';
Update geo_temp_union set zipcode = '33501' where country = 'GERMANY' AND city like 'BIELEFELD' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '44701' where country = 'GERMANY' AND city like 'BOCHUM' AND zipcode like '';
Update geo_temp_union set zipcode = '53000' where country = 'GERMANY' AND city like 'BONN' AND zipcode like '';
Update geo_temp_union set zipcode = '28001' where country = 'GERMANY' AND city like 'BREMEN' AND zipcode like '';
Update geo_temp_union set zipcode = '38100' where country = 'GERMANY' AND city like 'BRAUNSCHWEIG' AND zipcode like '';
Update geo_temp_union set zipcode = '09001' where country = 'GERMANY' AND city like 'CHEMNITZ' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '01001' where country = 'GERMANY' AND city like 'DRESDEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '47001' where country = 'GERMANY' AND city like 'DUISBURG' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '40000' where country = 'GERMANY' AND city like 'DUSSELDORF' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '44001' where country = 'GERMANY' AND city like 'DORTMUND' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '99001' where country = 'GERMANY' AND city like 'ERFURT' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '45001' where country = 'GERMANY' AND city like 'ESSEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '15201' where country = 'GERMANY' AND city like 'FRANKFURT' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '79000' where country = 'GERMANY' AND city like 'FREIBURG' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '45801' where country = 'GERMANY' AND city like 'GELSENKIRCHEN' AND zipcode like '';
Update geo_temp_union set zipcode = '58000' where country = 'GERMANY' AND city like 'HAGEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '20000' where country = 'GERMANY' AND city like 'HAMBURG' AND zipcode like '';
Update geo_temp_union set zipcode = '59000' where country = 'GERMANY' AND city like 'HAMM' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '30001' where country = 'GERMANY' AND city like 'HANNOVER' AND zipcode like '';
Update geo_temp_union set zipcode = '69000' where country = 'GERMANY' AND city like 'HEIDELBERG' AND zipcode like '';
Update geo_temp_union set zipcode = '44601' where country = 'GERMANY' AND city like 'HERNE' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '76000' where country = 'GERMANY' AND city like 'KARLSRUHE' AND zipcode like '';
Update geo_temp_union set zipcode = '34001' where country = 'GERMANY' AND city like 'KASSEL' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '50441' where country = 'GERMANY' AND city like 'KOLN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '47701' where country = 'GERMANY' AND city like 'KREFELD' AND zipcode like '';
Update geo_temp_union set zipcode = '24000' where country = 'GERMANY' AND city like 'KIEL' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '04000' where country = 'GERMANY' AND city like 'LEIPZIG' AND zipcode like '';
Update geo_temp_union set zipcode = '51368' where country = 'GERMANY' AND city like 'LEVERKUSEN' AND zipcode like '';
Update geo_temp_union set zipcode = '23501' where country = 'GERMANY' AND city like 'LUBECK' AND zipcode like '';
Update geo_temp_union set zipcode = '67059' where country = 'GERMANY' AND city like 'LUDWIGSHAFEN AM RHEIN' AND zipcode like '';
Update geo_temp_union set zipcode = '39104' where country = 'GERMANY' AND city like 'MAGDEBURG' AND zipcode like '';
Update geo_temp_union set zipcode = '55001' where country = 'GERMANY' AND city like 'MAINZ' AND zipcode like '';
Update geo_temp_union set zipcode = '68001' where country = 'GERMANY' AND city like 'MANNHEIM' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '35000' where country = 'GERMANY' AND city like 'MARBURG' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '41001' where country = 'GERMANY' AND city like 'MONCHENGLADBACH' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '80000' where country = 'GERMANY' AND city like 'MUNCHEN' AND zipcode like '';
Update geo_temp_union set zipcode = '48143' where country = 'GERMANY' AND city like 'MUNSTER' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '90001' where country = 'GERMANY' AND city like 'NUREMBERG' AND zipcode like '';
Update geo_temp_union set zipcode = '46000' where country = 'GERMANY' AND city like 'OBERHAUSEN' AND zipcode like '';
Update geo_temp_union set zipcode = '26001' where country = 'GERMANY' AND city like 'OLDENBURG' AND zipcode like '';
Update geo_temp_union set zipcode = '26001' where country = 'GERMANY' AND city like 'OSNABRUCK' AND zipcode like '';
Update geo_temp_union set zipcode = '50259' where country = 'GERMANY' AND city like 'PULHEIM' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '18001' where country = 'GERMANY' AND city like 'ROSTOCK' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '66000' where country = 'GERMANY' AND city like 'SAARBRUCKEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '06502' where country = 'GERMANY' AND city like 'THALE' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '69000' where country = 'GERMANY' AND city like 'HEIDELBERG' AND zipcode like '';
Update geo_temp_union set zipcode = '42601' where country = 'GERMANY' AND city like 'SOLINGEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '70000' where country = 'GERMANY' AND city like 'STUTTGART' AND zipcode like '';
Update geo_temp_union set zipcode = '65001' where country = 'GERMANY' AND city like 'WIESBADEN' AND zipcode like '';
Update geo_temp_union set zipcode = '42001' where country = 'GERMANY' AND city like 'WUPPERTAL' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '10' where country = 'GREECE' AND city like 'ATHENS' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '999077' where country = 'HONG KONG' AND city like 'HONG KONG' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '70121' where country = 'ITALY' AND city like 'BARI' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '24100' where country = 'ITALY' AND city like 'BERGAMO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '40100' where country = 'ITALY' AND city like 'BOLOGNA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '25100' where country = 'ITALY' AND city like 'BRESCIA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '09100' where country = 'ITALY' AND city like 'CAGLIARI' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '50121' where country = 'ITALY' AND city like 'FIRENZE' AND zipcode like '';
Update geo_temp_union set zipcode = '16100' where country = 'ITALY' AND city like 'GENOVA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '10100' where country = 'ITALY' AND city like 'MILANO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '41121' where country = 'ITALY' AND city like 'MODENA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '80100' where country = 'ITALY' AND city like 'NAPOLI' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '56100' where country = 'ITALY' AND city like 'PISA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '90100' where country = 'ITALY' AND city like 'PALERMO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '35100' where country = 'ITALY' AND city like 'PADOVA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '04000' where country = 'ITALY' AND city like 'PARMA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '85100' where country = 'ITALY' AND city like 'PESCARA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '00100' where country = 'ITALY' AND city like 'ROMA' AND zipcode like '';
Update geo_temp_union set zipcode = '84100' where country = 'ITALY' AND city like 'SALERNO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '96100' where country = 'ITALY' AND city like 'SIRACUSA' AND zipcode like '';
Update geo_temp_union set zipcode = '10100' where country = 'ITALY' AND city like 'TORINO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '34100' where country = 'ITALY' AND city like 'TRIESTE' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '30100' where country = 'ITALY' AND city like 'VENEZIA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '37100' where country = 'ITALY' AND city like 'VERONA' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '1107 2020' where country = 'LEBANON' AND city like 'BEIRUT' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '80000' where country = 'MEXICO' AND city like 'CULIACAN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '62000' where country = 'MEXICO' AND city like 'CUERNAVACA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '22800' where country = 'MEXICO' AND city like 'ENSENADA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '44100' where country = 'MEXICO' AND city like 'GUADALAJARA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '01000' where country = 'MEXICO' AND city like 'MEXICO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '82000' where country = 'MEXICO' AND city like 'MAZATLAN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '97000' where country = 'MEXICO' AND city like 'MERIDA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '64000' where country = 'MEXICO' AND city like 'MONTERREY' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '58000' where country = 'MEXICO' AND city like 'MORELIA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '68000' where country = 'MEXICO' AND city like 'OAXACA DE JUAREZ' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '88000' where country = 'MEXICO' AND city like 'REYNOSA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '76000' where country = 'MEXICO' AND city like 'SANTIAGO DE QUERETARO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '25000' where country = 'MEXICO' AND city like 'SALTILLO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '29000' where country = 'MEXICO' AND city like 'TUXTLA GUTIERREZ' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '22000' where country = 'MEXICO' AND city like 'TIJUANA' AND zipcode like '';

UPDATE geo_temp_union set zipcode = 'MD2000' where country = 'MOLDOVA' AND city like 'CHISINAU' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '98000' where country = 'MONACO' AND city like 'MONACO' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '20000' where country = 'MOROCCO' AND city like 'CASABLANCA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '10000' where country = 'MOROCCO' AND city like 'RABAT' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '1800' where country = 'NETHERLANDS' AND city like 'ALKMAAR' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '3800' where country = 'NETHERLANDS' AND city like 'AMERSFOORT' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '1180' where country = 'NETHERLANDS' AND city like 'AMSTELVEEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '9400' where country = 'NETHERLANDS' AND city like 'ASSEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '3888' where country = 'NETHERLANDS' AND city like 'APELDOORN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '1000' where country = 'NETHERLANDS' AND city like 'AMSTERDAM' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '6800' where country = 'NETHERLANDS' AND city like 'ARNHEM' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '4800' where country = 'NETHERLANDS' AND city like 'BREDA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '2600' where country = 'NETHERLANDS' AND city like 'DELFT' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '7400' where country = 'NETHERLANDS' AND city like 'DEVENTER' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '3300' where country = 'NETHERLANDS' AND city like 'DORDRECHT' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '5600' where country = 'NETHERLANDS' AND city like 'EINDHOVEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '7500' where country = 'NETHERLANDS' AND city like 'ENSCHEDE' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '2800' where country = 'NETHERLANDS' AND city like 'GOUDA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '9711' where country = 'NETHERLANDS' AND city like 'GRONINGEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '2000' where country = 'NETHERLANDS' AND city like 'HAARLEM' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '6400' where country = 'NETHERLANDS' AND city like 'HEERLEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '5700' where country = 'NETHERLANDS' AND city like 'HELMOND' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '1200' where country = 'NETHERLANDS' AND city like 'HILVERSUM' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '2300' where country = 'NETHERLANDS' AND city like 'LEIDEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '8900' where country = 'NETHERLANDS' AND city like 'LEEUWARDEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '6200' where country = 'NETHERLANDS' AND city like 'MAASTRICHT' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '3430' where country = 'NETHERLANDS' AND city like 'NIEUWEGEIN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '6500' where country = 'NETHERLANDS' AND city like 'NIJMEGEN' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '5340' where country = 'NETHERLANDS' AND city like 'OSS' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '3000' where country = 'NETHERLANDS' AND city like 'ROTTERDAM' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '5000' where country = 'NETHERLANDS' AND city like 'TILBURG' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '3500' where country = 'NETHERLANDS' AND city like 'UTRECHT' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '2701' where country = 'NETHERLANDS' AND city like 'ZOETERMEER' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '8000' where country = 'NETHERLANDS' AND city like 'ZWOLLE' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '80 008' where country = 'POLAND' AND city like 'GDANSK' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '00 001' where country = 'POLAND' AND city like 'WARSAW' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '1000' where country = 'PORTUGAL' AND city like 'LISBOA' AND zipcode like ''; 

UPDATE geo_temp_union set zipcode = '0900' where country = 'PHILIPPINES' AND city like 'MANILA' AND zipcode like ''; 

Update geo_temp_union set zipcode = '00901' where country = 'PUERTO RICO' AND city like 'HATO REY' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '0X' where country = 'ROMANIA' AND city like 'BUCHAREST' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '101000' where country = 'RUSSIA' AND city like 'MOSCOW' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '614094' where country = 'RUSSIA' AND city like 'PERM' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '344000' where country = 'RUSSIA' AND city like 'ROSTOV ON DON' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '19' where country = 'RUSSIA' AND city like 'ST PETERSBURG' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '450' where country = 'RUSSIA' AND city like 'UFA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '460000' where country = 'RUSSIA' AND city like 'ORENBURG' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '693000' where country = 'RUSSIA' AND city like 'ORENBURG' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '100 000' where country = 'SOUTH KOREA' AND city like 'SEOUL' AND zipcode like '';

Update geo_temp_union set zipcode = '15001' where country = 'SPAIN' AND city like 'A CORUNA' AND zipcode like '';
Update geo_temp_union set zipcode = '02001' where country = 'SPAIN' AND city like 'ALBACETE' AND zipcode like '';
Update geo_temp_union set zipcode = '28800' where country = 'SPAIN' AND city like 'ALCALA DE HENARES' AND zipcode like '';
Update geo_temp_union set zipcode = '28800' where country = 'SPAIN' AND city like 'ALCORCON' AND zipcode like '';
Update geo_temp_union set zipcode = '04001' where country = 'SPAIN' AND city like 'ALMERIA' AND zipcode like '';
Update geo_temp_union set zipcode = '05001' where country = 'SPAIN' AND city like 'AVILA' AND zipcode like '';
Update geo_temp_union set zipcode = '08900' where country = 'SPAIN' AND city like 'BADALONA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '06001' where country = 'SPAIN' AND city like 'BADAJOZ' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '08001' where country = 'SPAIN' AND city like 'BARCELONA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '48001' where country = 'SPAIN' AND city like 'BILBAO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '09001' where country = 'SPAIN' AND city like 'BURGOS' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '10001' where country = 'SPAIN' AND city like 'CACERES' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '21001' where country = 'SPAIN' AND city like 'CADIZ' AND zipcode like '';
Update geo_temp_union set zipcode = '12001' where country = 'SPAIN' AND city like 'CASTELLON DE LA PLANA' AND zipcode like '';
Update geo_temp_union set zipcode = '08860' where country = 'SPAIN' AND city like 'CASTELLDEFELS' AND zipcode like '';
Update geo_temp_union set zipcode = '14001' where country = 'SPAIN' AND city like 'CORDOBA' AND zipcode like '';
Update geo_temp_union set zipcode = '03200' where country = 'SPAIN' AND city like 'ELCHE' AND zipcode like '';
Update geo_temp_union set zipcode = '08950' where country = 'SPAIN' AND city like 'ESPLUGUES DE LLOBREGAT' AND zipcode like '';
Update geo_temp_union set zipcode = '33201' where country = 'SPAIN' AND city like 'GIJON' AND zipcode like '';
Update geo_temp_union set zipcode = '17001' where country = 'SPAIN' AND city like 'GIRONA' AND zipcode like '';
Update geo_temp_union set zipcode = '18001' where country = 'SPAIN' AND city like 'GRANADA' AND zipcode like '';
Update geo_temp_union set zipcode = '08000' where country = 'SPAIN' AND city like 'GRANOLLERS' AND zipcode like '';
Update geo_temp_union set zipcode = '21001' where country = 'SPAIN' AND city like 'HUELVA' AND zipcode like '';
Update geo_temp_union set zipcode = '21001' where country = 'SPAIN' AND city like 'JAEN' AND zipcode like '';
Update geo_temp_union set zipcode = '11401' where country = 'SPAIN' AND city like 'JEREZ DE LA FRONTERA' AND zipcode like '';
Update geo_temp_union set zipcode = '24001' where country = 'SPAIN' AND city like 'LEON' AND zipcode like '';
Update geo_temp_union set zipcode = '25001' where country = 'SPAIN' AND city like 'LLEIDA' AND zipcode like '';
Update geo_temp_union set zipcode = '26001' where country = 'SPAIN' AND city like 'LOGRONO' AND zipcode like '';
Update geo_temp_union set zipcode = '27001' where country = 'SPAIN' AND city like 'LUGO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '28001' where country = 'SPAIN' AND city like 'MADRID' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '28220' where country = 'SPAIN' AND city like 'MAJADAHONDA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '29001' where country = 'SPAIN' AND city like 'MALAGA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '08241' where country = 'SPAIN' AND city like 'MANRESA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '29600' where country = 'SPAIN' AND city like 'MARBELLA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '08301' where country = 'SPAIN' AND city like 'MATARO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '28930' where country = 'SPAIN' AND city like 'MOSTOLES' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '30001' where country = 'SPAIN' AND city like 'MURCIA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '33001' where country = 'SPAIN' AND city like 'OVIEDO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '34001' where country = 'SPAIN' AND city like 'PALENCIA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '07000' where country = 'SPAIN' AND city like 'PALMA DE MALLORCA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '36001' where country = 'SPAIN' AND city like 'PONTEVEDRA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '28223' where country = 'SPAIN' AND city like 'POZUELO DE ALARCON' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '08200' where country = 'SPAIN' AND city like 'SABADELL' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '37001' where country = 'SPAIN' AND city like 'SALAMANCA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '08830' where country = 'SPAIN' AND city like 'SANT BOI DE LLOBREGAT' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '08172' where country = 'SPAIN' AND city like 'SANT CUGAT DEL VALLES' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '15700' where country = 'SPAIN' AND city like 'SANTIAGO DE COMPOSTELA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '41000' where country = 'SPAIN' AND city like 'SEVILLA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '08220' where country = 'SPAIN' AND city like 'TERRASSA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '43001' where country = 'SPAIN' AND city like 'TARRAGONA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '45001' where country = 'SPAIN' AND city like 'TOLEDO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '36200' where country = 'SPAIN' AND city like 'VIGO' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '08800' where country = 'SPAIN' AND city like 'VILANOVA I LA GELTRU' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '01000' where country = 'SPAIN' AND city like 'VITORIA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '50001' where country = 'SPAIN' AND city like 'ZARAGOZA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '46000' where country = 'SPAIN' AND city like 'VALENCIA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '47001' where country = 'SPAIN' AND city like 'VALLADOLID' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '35216' where country = 'SPAIN' AND city like 'VALSEQUILLO DE GRAN CANARIA' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '100' where country = 'TAIWAN' AND city like 'TAIPEI' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '10' where country = 'THAILAND' AND city like 'BANGKOK' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '06760' where country = 'TURKEY' AND city like 'ANKARA' AND zipcode like '';
UPDATE geo_temp_union set zipcode = '34000' where country = 'TURKEY' AND city like 'ISTANBUL' AND zipcode like '';

UPDATE geo_temp_union set zipcode = '01000' where country = 'UKRAINE' AND city like 'KIEV' AND zipcode like '';

UPDATE geo_temp_union set zipcode = 'B' where country = 'UNITED KINGDOM' AND city like 'SOLIHULL' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'G1 G880' where country = 'UNITED KINGDOM' AND city like 'GLASGOW' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'WD' where country = 'UNITED KINGDOM' AND city like 'WATFORD' AND zipcode like '';
UPDATE geo_temp_union set zipcode = 'LL 11 14' where country = 'UNITED KINGDOM' AND city like 'WREXHAM' AND zipcode like '';

UPDATE geo_temp_union set zipcode = 'VE 4001' where country = 'VENEZUELA' AND city like 'MARACAIBO' AND zipcode like '';

/* CORRECTION PAYS - CORRECTION COUNTRIES */
UPDATE geo_temp_union set country = 'LUXEMBOURG' where country = 'FRANCE' AND zipcode like 'L%' ;

/*MISE A JOUR DES STATES ARGENTINS */
UPDATE geo_temp_union set state='BUENOS AIRES' where country='ARGENTINA' and city LIKE 'BUENOS AIRES';
UPDATE geo_temp_union set state='CHACO' where country='ARGENTINA' and city LIKE 'RESISTENCIA';
UPDATE geo_temp_union set state='TUCUMAN' where country='ARGENTINA' and city LIKE 'SAN MIGUEL DE TUCUMAN';
UPDATE geo_temp_union set state='SALTA' where country='ARGENTINA' and city LIKE 'CACHI';
UPDATE geo_temp_union set state='BUENOS AIRES' where country='ARGENTINA' and city LIKE 'FLORES';
UPDATE geo_temp_union set state='SANTA FE' where country='ARGENTINA' and city LIKE 'ARROYO SECO';
UPDATE geo_temp_union set state='ENTRE RIOS' where country='ARGENTINA' and city LIKE 'PARANA';

/* MISE A JOUR DES STATES BRESILIENS */

Update geo_temp_union set state='ACRE' where country='BRAZIL' and city like 'RIO BRANCO';

Update geo_temp_union set state='ALAGOAS' where country='BRAZIL' and city like 'ARAPIRACA';
Update geo_temp_union set state='ALAGOAS' where country='BRAZIL' and city like 'MACEIO';

Update geo_temp_union set state='AMAPA' where country='BRAZIL' and city like 'MACAPA';

Update geo_temp_union set state='AMAZONAS' where country='BRAZIL' and city like 'MANAUS';

Update geo_temp_union set state='BAHIA' where country='BRAZIL' and city like 'CAMACARI';
Update geo_temp_union set state='BAHIA' where country='BRAZIL' and city like 'FEIRA DE SANTANA';
Update geo_temp_union set state='BAHIA' where country='BRAZIL' and city like 'ILHEUS';
Update geo_temp_union set state='BAHIA' where country='BRAZIL' and city like 'JUAZEIRO';
Update geo_temp_union set state='BAHIA' where country='BRAZIL' and city like 'VITORIA DA CONQUISTA';
Update geo_temp_union set state='BAHIA' where country='BRAZIL' and city like 'ITABUNA';

Update geo_temp_union set state='CEARA' where country='BRAZIL' and city like 'FORTALEZA';
Update geo_temp_union set state='CEARA' where country='BRAZIL' and city like 'JUAZEIRO DO NORTE';

Update geo_temp_union set state='DISTRICT FEDERAL' where country='BRAZIL' and city like 'BRASILIA' ;

Update geo_temp_union set state='ESPIRITO SANTO' where country='BRAZIL' and city like 'VILA VELHA';
Update geo_temp_union set state='ESPIRITO SANTO' where country='BRAZIL' and city like 'VITORIA';
Update geo_temp_union set state='ESPIRITO SANTO' where country='BRAZIL' and city like 'CARIACICA';

Update geo_temp_union set state='GOIAS' where country='BRAZIL' and city like 'ANAPOLIS';
Update geo_temp_union set state='GOIAS' where country='BRAZIL' and city like 'APARECIDA DE GOIANIA';
Update geo_temp_union set state='GOIAS' where country='BRAZIL' and city like 'GOIANIA';

Update geo_temp_union set state='MARANHAO' where country='BRAZIL' and city like 'IMPERATRIZ';
Update geo_temp_union set state='MARANHAO' where country='BRAZIL' and city like 'SAO LUIS';

Update geo_temp_union set state='MATO GROSSO DO SUL' where country='BRAZIL' and city like 'CAMPO GRANDE';

Update geo_temp_union set state='MATO GROSSO' where country='BRAZIL' and city like 'VARZEA GRANDE';
Update geo_temp_union set state='MATO GROSSO' where country='BRAZIL' and city like 'CUIABA';

Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'ALEM PARAIBA';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'BELO HORIZONTE';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'BETIM';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'UBERABA';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'UBERLANDIA';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'CONTAGEM';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'DIVINOPOLIS';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'GOVERNADOR VALADARES';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'IPATINGA';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'JUIZ DE FORA';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'MONTES CLAROS';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'SANTA LUZIA';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and city like 'SETE LAGOAS';

Update geo_temp_union set state='PARA' where country='BRAZIL' and city like 'ANANINDEUA';
Update geo_temp_union set state='PARA' where country='BRAZIL' and city like 'BELEM';
Update geo_temp_union set state='PARA' where country='BRAZIL' and city like 'SANTAREM';

Update geo_temp_union set state='PARANA' where country='BRAZIL' and city like 'CASCAVEL';
Update geo_temp_union set state='PARANA' where country='BRAZIL' and city like 'CURITIBA';
Update geo_temp_union set state='PARANA' where country='BRAZIL' and city like 'MARINGA';
Update geo_temp_union set state='PARANA' where country='BRAZIL' and city like 'SAO JOSE DOS PINHAIS';
Update geo_temp_union set state='PARANA' where country='BRAZIL' and city like 'FOZ DO IGUACU';
Update geo_temp_union set state='PARANA' where country='BRAZIL' and city like 'PONTA GROSSA';
Update geo_temp_union set state='PARANA' where country='BRAZIL' and city like 'LONDRINA';

Update geo_temp_union set state='PARAIBA' where country='BRAZIL' and city like 'CAMPINA GRANDE';
Update geo_temp_union set state='PARAIBA' where country='BRAZIL' and city like 'JOAO PESSOA';

Update geo_temp_union set state='PERNAMBUCO' where country='BRAZIL' and city like 'JABOATAO DOS GUARARAPES';
Update geo_temp_union set state='PERNAMBUCO' where country='BRAZIL' and city like 'RECIFE';
Update geo_temp_union set state='PERNAMBUCO' where country='BRAZIL' and city like 'OLINDA';
Update geo_temp_union set state='PERNAMBUCO' where country='BRAZIL' and city like 'PETROLINA';
Update geo_temp_union set state='PERNAMBUCO' where country='BRAZIL' and city like 'CARUARU';

Update geo_temp_union set state='PIAUI' where country='BRAZIL' and city like 'TERESINA';

Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'CARAPICUIBA';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SAO JOSE DO RIO PRETO';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SAO JOSE DOS CAMPOS';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SAO PAULO';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SAO VICENTE';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SOROCABA';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SUMARE';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SUZANO';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'TABOAO DA SERRA';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'TAUBATE';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'MARILIA';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'FRANCA';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'CAMPINAS';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'BARUERI';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'BAURU';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SANTO ANDRE';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SANTOS';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SAO BERNARDO DO CAMPO';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'SAO CARLOS';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'RIBEIRAO PRETO';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'OSASCO';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'PIRACICABA';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'PRAIA GRANDE';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'PRESIDENTE PRUDENTE';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'MAUA';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'MOGI DAS CRUZES';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'JUNDIAI';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'LIMEIRA';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'JACAREI';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'GUARUJA';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'GUARULHOS';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'DIADEMA';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and city like 'EMBU';

Update geo_temp_union set state='SANTA CATARINA' where country='BRAZIL' and city like 'BLUMENAU';
Update geo_temp_union set state='SANTA CATARINA' where country='BRAZIL' and city like 'JOINVILLE';
Update geo_temp_union set state='SANTA CATARINA' where country='BRAZIL' and city like 'FLORIANOPOLIS';

Update geo_temp_union set state='SERGIPE' where country='BRAZIL' and city like 'ARACAJU';

Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'VOLTA REDONDA';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'SAO GONCALO';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'SAO JOAO DE MERITI';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'RIO DE JANEIRO';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'NITEROI';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'NOVA IGUACU';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'MAGE';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'ITABORAI';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'DUQUE DE CAXIAS';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'BELFORD ROXO';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'CAMPOS DOS GOYTACAZES';
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and city like 'PETROPOLIS';

Update geo_temp_union set state='RIO GRANDE DO NORTE' where country='BRAZIL' and city like 'MOSSORO';
Update geo_temp_union set state='RIO GRANDE DO NORTE' where country='BRAZIL' and city like 'NATAL';

Update geo_temp_union set state='RIO GRANDE DO SUL' where country='BRAZIL' and city like 'CANOAS';
Update geo_temp_union set state='RIO GRANDE DO SUL' where country='BRAZIL' and city like 'SANTA MARIA';
Update geo_temp_union set state='RIO GRANDE DO SUL' where country='BRAZIL' and city like 'NOVO HAMBURGO';
Update geo_temp_union set state='RIO GRANDE DO SUL' where country='BRAZIL' and city like 'PORTO ALEGRE';
Update geo_temp_union set state='RIO GRANDE DO SUL' where country='BRAZIL' and city like 'SAO LEOPOLDO';
Update geo_temp_union set state='RIO GRANDE DO SUL' where country='BRAZIL' and city like 'PELOTAS';
Update geo_temp_union set state='RIO GRANDE DO SUL' where country='BRAZIL' and city like 'CAXIAS DO SUL';
Update geo_temp_union set state='RIO GRANDE DO SUL' where country='BRAZIL' and city like 'GRAVATAI';

Update geo_temp_union set state='RONDONIA' where country='BRAZIL' and city like 'PORTO VELHO';

Update geo_temp_union set state='RORAIMA' where country='BRAZIL' and city like 'BOA VISTA';

/* HARMONISATION STATES BRESILIENS */
Update geo_temp_union set state='RIO DE JANEIRO' where country='BRAZIL' and state = 'RJ';
Update geo_temp_union set state='SAO PAULO' where country='BRAZIL' and state = 'SP';
Update geo_temp_union set state='MINAS GERAIS' where country='BRAZIL' and state = 'MG';
Update geo_temp_union set state='DISTRICT FEDERAL' where country='BRAZIL' and state = 'DF';
Update geo_temp_union set state='ACRE' where country='BRAZIL' and state = 'AC';
Update geo_temp_union set state='ALAGOAS' where country='BRAZIL' and state = 'AL';
Update geo_temp_union set state='AMAZONAS' where country='BRAZIL' and state = 'AM';
Update geo_temp_union set state='BAHIA' where country='BRAZIL' and state = 'BA';
Update geo_temp_union set state='MARANHAO' where country='BRAZIL' and state = 'MA';
Update geo_temp_union set state='PARAIBA' where country='BRAZIL' and state = 'PA';
Update geo_temp_union set state='GOIAS' where country='BRAZIL' and state = 'GO';
Update geo_temp_union set state='PIAUI' where country='BRAZIL' and state = 'PI';
Update geo_temp_union set state='PERNAMBUCO' where country='BRAZIL' and state = 'PE';
Update geo_temp_union set state='ESPIRITO SANTO' where country='BRAZIL' and state = 'ES';
Update geo_temp_union set state='RONDONIA' where country='BRAZIL' and state = 'RO';
Update geo_temp_union set state='SERGIPE' where country='BRAZIL' and state = 'SE';
Update geo_temp_union set state='AMAPA' where country='BRAZIL' and state = 'AP';
Update geo_temp_union set state='CEARA' where country='BRAZIL' and state = 'CE';
Update geo_temp_union set state='MARANHAO' where country='BRAZIL' and state = 'MA';
Update geo_temp_union set state='MATO GROSSO DO SUL' where country='BRAZIL' and state = 'MS';
Update geo_temp_union set state='MATO GROSSO' where country='BRAZIL' and state = 'MS';
Update geo_temp_union set state='PARAIBA' where country='BRAZIL' and state = 'PB';
Update geo_temp_union set state='PARANA' where country='BRAZIL' and state = 'PR';
Update geo_temp_union set state='RIO GRANDE DO NORTE' where country='BRAZIL' and state = 'RN';
Update geo_temp_union set state='RORAIMA' where country='BRAZIL' and state = 'RR';
Update geo_temp_union set state='RIO GRANDE DO SUL' where country='BRAZIL' and state = 'RS';
Update geo_temp_union set state='SANTA CATARINA' where country='BRAZIL' and state = 'SC';
Update geo_temp_union set state='TOCANTINS' where country='BRAZIL' and state = 'TO';

/*MISE A JOUR DES STATES USA*/
Update geo_temp_union set state='ALASKA' where country='UNITED STATES' and city like 'JUNEAU';
Update geo_temp_union set state='ALASKA' where country='UNITED STATES' and city like 'ANCHORAGE';
Update geo_temp_union set state='ALABAMA' where country='UNITED STATES' and city like 'MONTGOMERY';
Update geo_temp_union set state='ALABAMA' where country='UNITED STATES' and city like 'BIRMINGHAM';
Update geo_temp_union set state='ARKANSAS' where country='UNITED STATES' and city like 'LITTLE ROCK';
Update geo_temp_union set state='ARIZONA' where country='UNITED STATES' and city like 'PHOENIX';
Update geo_temp_union set state='ARIZONA' where country='UNITED STATES' and city like 'SCOTTSDALE';
Update geo_temp_union set state='ARIZONA' where country='UNITED STATES' and city like 'TUCSON';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'BEVERLY HILLS';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'DANVILLE';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'ENCINO';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'FRESNO';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'IRVINE';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'NEWPORT BEACH';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'MOUNTAIN VIEW';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'LONG BEACH';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'LA JOLLA';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'LOS ANGELES';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'ORANGE';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'OAKLAND';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'PALO ALTO';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'PASADENA';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'SAN JOSE';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'SACRAMENTO';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'SAN DIEGO';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'SAN FRANCISCO';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'SANTA BARBARA';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'SANTA MONICA';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'TORRANCE';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and city like 'WALNUT CREEK';
Update geo_temp_union set state='COLORADO' where country='UNITED STATES' and city like 'DENVER';
Update geo_temp_union set state='CONNECTICUT' where country='UNITED STATES' and city like 'HARTFORD';
Update geo_temp_union set state='CONNECTICUT' where country='UNITED STATES' and city like 'BRIDGEPORT';
Update geo_temp_union set state='DELAWARE' where country='UNITED STATES' and city like 'DOVER';
Update geo_temp_union set state='DELAWARE' where country='UNITED STATES' and city like 'WILMINGTON';
Update geo_temp_union set state='DISTRICT OF COLUMBIA' where country='UNITED STATES' and city like 'WASHINGTON';
Update geo_temp_union set state='FLORIDA' where country='UNITED STATES' and city like 'MIAMI';
Update geo_temp_union set state='FLORIDA' where country='UNITED STATES' and city like 'BOCA RATON';
Update geo_temp_union set state='FLORIDA' where country='UNITED STATES' and city like 'FORT LAUDERDALE';
Update geo_temp_union set state='FLORIDA' where country='UNITED STATES' and city like 'TALLAHASSEE';
Update geo_temp_union set state='FLORIDA' where country='UNITED STATES' and city like 'TAMPA';
Update geo_temp_union set state='FLORIDA' where country='UNITED STATES' and city like 'JACKSONVILLE';
Update geo_temp_union set state='FLORIDA' where country='UNITED STATES' and city like 'SARASOTA';
Update geo_temp_union set state='FLORIDA' where country='UNITED STATES' and city like 'ORLANDO';
Update geo_temp_union set state='FLORIDA' where country='UNITED STATES' and city like 'WEST PALM BEACH';
Update geo_temp_union set state='GEORGIA' where country='UNITED STATES' and city like 'ATLANTA';
Update geo_temp_union set state='HAWAII' where country='UNITED STATES' and city like 'HONOLULU';
Update geo_temp_union set state='IOWA' where country='UNITED STATES' and city like 'DES MOINES';
Update geo_temp_union set state='IDAHO' where country='UNITED STATES' and city like 'BOISE';
Update geo_temp_union set state='ILLINOIS' where country='UNITED STATES' and city like 'SPRINGFIELD';
Update geo_temp_union set state='ILLINOIS' where country='UNITED STATES' and city like 'CHICAGO';
Update geo_temp_union set state='INDIANA' where country='UNITED STATES' and city like 'INDIANAPOLIS';
Update geo_temp_union set state='KANSAS' where country='UNITED STATES' and city like 'TOPEKA';
Update geo_temp_union set state='KANSAS' where country='UNITED STATES' and city like 'WICHITA';
Update geo_temp_union set state='KENTUCKY' where country='UNITED STATES' and city like 'FRANKFORT';
Update geo_temp_union set state='KENTUCKY' where country='UNITED STATES' and city like 'LOUISVILLE';
Update geo_temp_union set state='KENTUCKY' where country='UNITED STATES' and city like 'LEXINGTON';
Update geo_temp_union set state='LOUISIANA' where country='UNITED STATES' and city like 'BATON ROUGE';
Update geo_temp_union set state='LOUISIANA' where country='UNITED STATES' and city like 'LA NOUVELLE ORLEANS';
Update geo_temp_union set state='LOUISIANA' where country='UNITED STATES' and city like 'METAIRIE';
Update geo_temp_union set state='LOUISIANA' where country='UNITED STATES' and state like '' and city like 'LAFAYETTE';
Update geo_temp_union set state='MASSACHUSETTS' where country='UNITED STATES' and city like 'BOSTON';
Update geo_temp_union set state='MARYLAND' where country='UNITED STATES' and city like 'ANNAPOLIS';
Update geo_temp_union set state='MARYLAND' where country='UNITED STATES' and city like 'BETHESDA';
Update geo_temp_union set state='MARYLAND' where country='UNITED STATES' and city like 'BALTIMORE';
Update geo_temp_union set state='MARYLAND' where country='UNITED STATES' and city like 'CHEVY CHASE';
Update geo_temp_union set state='MARYLAND' where country='UNITED STATES' and city like 'ROCKVILLE';
Update geo_temp_union set state='MAINE' where country='UNITED STATES' and city like 'AUGUSTA';
Update geo_temp_union set state='MAINE' where country='UNITED STATES' and city like 'PORTLAND';
Update geo_temp_union set state='MICHIGAN' where country='UNITED STATES' and city like 'DETROIT';
Update geo_temp_union set state='MICHIGAN' where country='UNITED STATES' and city like 'ANN ARBOR';
Update geo_temp_union set state='MICHIGAN' where country='UNITED STATES' and city like 'GRAND RAPIDS';
Update geo_temp_union set state='MICHIGAN' where country='UNITED STATES' and city like 'LANSING';
Update geo_temp_union set state='MICHIGAN' where country='UNITED STATES' and city like 'TROY';
Update geo_temp_union set state='MINNESOTA' where country='UNITED STATES' and city like 'SAINT PAUL';
Update geo_temp_union set state='MINNESOTA' where country='UNITED STATES' and city like 'ST PAUL';
Update geo_temp_union set state='MINNESOTA' where country='UNITED STATES' and city like 'MINNEAPOLIS';
Update geo_temp_union set state='MISSOURI' where country='UNITED STATES' and city like 'JEFFERSON CITY';
Update geo_temp_union set state='MISSOURI' where country='UNITED STATES' and city like 'KANSAS CITY';
Update geo_temp_union set state='MISSOURI' where country='UNITED STATES' and city like 'SAINT LOUIS';
Update geo_temp_union set state='MISSOURI' where country='UNITED STATES' and city like 'ST LOUIS';
Update geo_temp_union set state='MISSISSIPPI' where country='UNITED STATES' and city like 'JACKSON';
Update geo_temp_union set state='MONTANA' where country='UNITED STATES' and city like 'HELENA';
Update geo_temp_union set state='MONTANA' where country='UNITED STATES' and city like 'BILLINGS';
Update geo_temp_union set state='NEBRASKA' where country='UNITED STATES' and city like 'LINCOLN';
Update geo_temp_union set state='NEBRASKA' where country='UNITED STATES' and city like 'OMAHA';
Update geo_temp_union set state='NEVADA' where country='UNITED STATES' and city like 'CARSON CITY';
Update geo_temp_union set state='NEVADA' where country='UNITED STATES' and city like 'LAS VEGAS';
Update geo_temp_union set state='NEVADA' where country='UNITED STATES' and city like 'RENO';
Update geo_temp_union set state='NEW HAMPSHIRE' where country='UNITED STATES' and city like 'CONCORD';
Update geo_temp_union set state='NEW HAMPSHIRE' where country='UNITED STATES' and city like 'MANCHESTER';
Update geo_temp_union set state='NEW JERSEY' where country='UNITED STATES' and city like 'TRENTON';
Update geo_temp_union set state='NEW JERSEY' where country='UNITED STATES' and city like 'NEWARK';
Update geo_temp_union set state='NEW JERSEY' where country='UNITED STATES' and city like 'PARAMUS';
Update geo_temp_union set state='NEW MEXICO' where country='UNITED STATES' and city like 'SANTA FE';
Update geo_temp_union set state='NEW MEXICO' where country='UNITED STATES' and city like 'ALBUQUERQUE';
Update geo_temp_union set state='NEW YORK' where country='UNITED STATES' and city like 'ALBANY';
Update geo_temp_union set state='NEW YORK' where country='UNITED STATES' and city like 'NEW YORK';
Update geo_temp_union set state='NEW YORK' where country='UNITED STATES' and city like 'GREAT NECK';
Update geo_temp_union set state='NEW YORK' where country='UNITED STATES' and city like 'BROOKLYN';
Update geo_temp_union set state='NEW YORK' where country='UNITED STATES' and state like '' and city like 'ROCHESTER';
Update geo_temp_union set state='NEW YORK' where country='UNITED STATES' and state like '' and city like 'HUNTINGTON';
Update geo_temp_union set state='NORTH CAROLINA' where country='UNITED STATES' and city like 'RALEIGH';
Update geo_temp_union set state='NORTH CAROLINA' where country='UNITED STATES' and city like 'CHARLOTTE';
Update geo_temp_union set state='NORTH DAKOTA' where country='UNITED STATES' and city like 'BISMARCK';
Update geo_temp_union set state='NORTH DAKOTA' where country='UNITED STATES' and city like 'DURHAM';
Update geo_temp_union set state='NORTH DAKOTA' where country='UNITED STATES' and city like 'FARGO';
Update geo_temp_union set state='OHIO' where country='UNITED STATES' and city like 'COLUMBUS';
Update geo_temp_union set state='OHIO' where country='UNITED STATES' and city like 'CLEVELAND';
Update geo_temp_union set state='OHIO' where country='UNITED STATES' and city like 'CINCINNATI';
Update geo_temp_union set state='OKLAHOMA' where country='UNITED STATES' and city like 'OKLAHOMA CITY';
Update geo_temp_union set state='OKLAHOMA' where country='UNITED STATES' and city like 'TULSA';
Update geo_temp_union set state='OREGON' where country='UNITED STATES' and city like 'SALEM';
Update geo_temp_union set state='PENNSYLVANIA' where country='UNITED STATES' and city like 'HARRISBURG';
Update geo_temp_union set state='PENNSYLVANIA' where country='UNITED STATES' and city like 'PHILADELPHIE';
Update geo_temp_union set state='PENNSYLVANIA' where country='UNITED STATES' and city like 'PHILADELPHIA';
Update geo_temp_union set state='PENNSYLVANIA' where country='UNITED STATES' and city like 'PITTSBURGH';
Update geo_temp_union set state='PENNSYLVANIA' where country='UNITED STATES' and city like 'ALLENTOWN';
Update geo_temp_union set state='RHODE ISLANDNS' where country='UNITED STATES' and city like 'PROVIDENCE';
Update geo_temp_union set state='SOUTH CAROLINA' where country='UNITED STATES' and city like 'COLUMBIA';
Update geo_temp_union set state='SOUTH CAROLINA' where country='UNITED STATES' and city like 'COLUMBIA';
Update geo_temp_union set state='SOUTH DAKOTA' where country='UNITED STATES' and city like 'PIERRE';
Update geo_temp_union set state='SOUTH DAKOTA' where country='UNITED STATES' and city like 'SIOUX FALLS';
Update geo_temp_union set state='TENNESSEE' where country='UNITED STATES' and city like 'NASHVILLE';
Update geo_temp_union set state='TENNESSEE' where country='UNITED STATES' and city like 'MEMPHIS';
Update geo_temp_union set state='TENNESSEE' where country='UNITED STATES' and city like 'KNOXVILLE';
Update geo_temp_union set state='TEXAS' where country='UNITED STATES' and city like 'AUSTIN';
Update geo_temp_union set state='TEXAS' where country='UNITED STATES' and city like 'DALLAS';
Update geo_temp_union set state='TEXAS' where country='UNITED STATES' and city like 'HOUSTON';
Update geo_temp_union set state='TEXAS' where country='UNITED STATES' and city like 'PLANO';
Update geo_temp_union set state='TEXAS' where country='UNITED STATES' and city like 'SAN ANTONIO';
Update geo_temp_union set state='TEXAS' where country='UNITED STATES' and city like 'SUGAR LAND';
Update geo_temp_union set state='TEXAS' where country='UNITED STATES' and city like 'FORT WORTH';
Update geo_temp_union set state='TEXAS' where country='UNITED STATES' and city like 'THE WOODLANDS';
Update geo_temp_union set state='UTAH' where country='UNITED STATES' and city like 'SALT LAKE CITY';
Update geo_temp_union set state='VIRGINIA' where country='UNITED STATES' and city like 'RICHMOND';
Update geo_temp_union set state='VIRGINIA' where country='UNITED STATES' and city like 'VIRGINIA BEACH';
Update geo_temp_union set state='VERMONT' where country='UNITED STATES' and city like 'MONTPELIER';
Update geo_temp_union set state='VERMONT' where country='UNITED STATES' and city like 'BURLINGTON';
Update geo_temp_union set state='WASHINGTON' where country='UNITED STATES' and city like 'OLYMPIA';
Update geo_temp_union set state='WASHINGTON' where country='UNITED STATES' and city like 'SEATTLE';
Update geo_temp_union set state='WASHINGTON' where country='UNITED STATES' and city like 'KIRKLAND';
Update geo_temp_union set state='WISCONSIN' where country='UNITED STATES' and city like 'MADISON';
Update geo_temp_union set state='WISCONSIN' where country='UNITED STATES' and city like 'MILWAUKEE';
Update geo_temp_union set state='WEST VIRGINIA' where country='UNITED STATES' and city like 'CHARLESTON';
Update geo_temp_union set state='WYOMING' where country='UNITED STATES' and city like 'CHEYENNE';

/* HARMONISATION STATES USA */
Update geo_temp_union set state='ARIZONA' where country='UNITED STATES' and state = 'AZ';
Update geo_temp_union set state='CALIFORNIA' where country='UNITED STATES' and state = 'CA';
Update geo_temp_union set state='COLORADO' where country='UNITED STATES' and state = 'CO';
Update geo_temp_union set state='DISTRICT OF COLUMBIA' where country='UNITED STATES' and state = 'DC';
Update geo_temp_union set state='FLORIDA' where country='UNITED STATES' and state = 'FL';
Update geo_temp_union set state='ILLINOIS' where country='UNITED STATES' and state = 'IL';
Update geo_temp_union set state='KENTUCKY' where country='UNITED STATES' and state = 'KY';
Update geo_temp_union set state='LOUISIANA' where country='UNITED STATES' and state = 'LA';
Update geo_temp_union set state='MICHIGAN' where country='UNITED STATES' and state = 'MI';
Update geo_temp_union set state='MARYLAND' where country='UNITED STATES' and state = 'MD';
Update geo_temp_union set state='NEW YORK' where country='UNITED STATES' and state = 'NY';
Update geo_temp_union set state='NEW JERSEY' where country='UNITED STATES' and state = 'NJ';
Update geo_temp_union set state='OHIO' where country='UNITED STATES' and state = 'OH';
Update geo_temp_union set state='OKLAHOMA' where country='UNITED STATES' and state = 'OK';
Update geo_temp_union set state='PENNSYLVANIA' where country='UNITED STATES' and state = 'PA';
Update geo_temp_union set state='TEXAS' where country='UNITED STATES' and state = 'TX';
Update geo_temp_union set state='TENNESSEE' where country='UNITED STATES' and state = 'TN';
Update geo_temp_union set state='WASHINGTON' where country='UNITED STATES' and state = 'WA';

/* MISE A JOUR DES STATES CANADIENS */
Update geo_temp_union set state='ALBERTA' where country='CANADA' and city like 'CALGARY';
Update geo_temp_union set state='ALBERTA' where country='CANADA' and city like 'EDMONTON';
Update geo_temp_union set state='ALBERTA' where country='CANADA' and city like 'ALBERTA';
Update geo_temp_union set state='ALBERTA' where country='CANADA' and city like 'LETHBRIDGE';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'VANCOUVER';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'VICTORIA';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'SURREY';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'BURNABY';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'NEW WESTMINSTER';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'NANAIMO';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'KAMLOOPS';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'LANGLEY';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'COQUITLAM';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'KELOWNA';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and city like 'RICHMOND BC';
Update geo_temp_union set state='MANITOBA' where country='CANADA' and city like 'WINNIPEG';
Update geo_temp_union set state='NEWFOUNDLAND AND LABRADOR' where country='CANADA' and city like 'ST JOHN';
Update geo_temp_union set state='NOVA SCOTIA' where country='CANADA' and city like 'HALIFAX';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'ONTARIO';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'TORONTO';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'HAMILTON';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'OTTAWA';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'MISSISSAUGA';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'LONDON';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'OAKVILLE';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'THORNHILL';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'RICHMOND HILL';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'SCARBOROUGH';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'MARKHAM';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'BURLINGTON';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'WINDSOR';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'NORTH YORK';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'ST CATHARINES';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'OSHAWA';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'SUDBURY';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'PETERBOROUGH';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'WOODBRIDGE';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'ETOBICOKE';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'NEWMARKET';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'BARRIE';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'KINGSTON';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'KITCHENER';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'WATERLOO';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'BRAMPTON';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'RICHMOND HILL';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and state like '' and city like 'RICHMOND';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and city like 'VAUGHAN';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'MONTREAL';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'LAVAL';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'SHERBROOKE';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'QUEBEC';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'MONT ROYAL';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'NOTRE DAME DE L ILE PERROT';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'GATINEAU';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'POINTE CLAIRE';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'WESTMOUNT';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'LONGUEUIL';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'TROIS RIVIERES';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'STE FOY';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'ST LAURENT';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'STE LAURENT';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and city like 'SAINT LAURENT';
Update geo_temp_union set state='SASKATCHEWAN' where country='CANADA' and city like 'SASKATOON';

/* HARMONISATION STATES CANADIENS */
Update geo_temp_union set state='ALBERTA' where country='CANADA' and state = 'AB';
Update geo_temp_union set state='BRITISH COLUMBIA' where country='CANADA' and state = 'BC';
Update geo_temp_union set state='ONTARIO' where country='CANADA' and state = 'ON';
Update geo_temp_union set state='MANITOBA' where country='CANADA' and state = 'MB';
Update geo_temp_union set state='QUEBEC' where country='CANADA' and state = 'QC';
Update geo_temp_union set state='NEW BRUNSWICK' where country='CANADA' and state = 'NB';
Update geo_temp_union set state='NEWFOUNDLAND AND LABRADOR' where country='CANADA' and state = 'NL';

/* MISE A JOUR DES STATES RUSSES */
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'MOSCOW';
Update geo_temp_union set state='SEVERO ZAPADNY FEDERALNY' where country='RUSSIA' and city like 'ST PETERSBURG'; 
Update geo_temp_union set state='OURALSKI FEDERALNY' where country='RUSSIA' and city like 'EKATERINBURG';
Update geo_temp_union set state='OURALSKI FEDERALNY' where country='RUSSIA' and city like 'CHELYABINSK';
Update geo_temp_union set state='SIBIRSKI FEDERALNY' where country='RUSSIA' and city like 'NOVOSIBIRSK';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'KAZAN';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'SAMARA';
Update geo_temp_union set state='LOUJNY FEDERALNY' where country='RUSSIA' and city like 'KRASNODAR';
Update geo_temp_union set state='DALNEVOSTOTCHNY FEDERALNY' where country='RUSSIA' and city like 'VLADIVOSTOK';
Update geo_temp_union set state='LOUJNY FEDERALNY' where country='RUSSIA' and city like 'ROSTOV ON DON';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'NIZHNY NOVGOROD';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'PERM';
Update geo_temp_union set state='SIBIRSKI FEDERALNY' where country='RUSSIA' and city like 'KRASNOYARSK';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'VORONEZH';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'SARATOV';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'YAROSLAVL';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'UFA';
Update geo_temp_union set state='SIBIRSKI FEDERALNY' where country='RUSSIA' and city like 'OMSK';
Update geo_temp_union set state='OURALSKI FEDERALNY' where country='RUSSIA' and city like 'TYUMEN';
Update geo_temp_union set state='SEVERO KAVKAZSKI FEDERALNY' where country='RUSSIA' and city like 'STAVROPOL';
Update geo_temp_union set state='DALNEVOSTOTCHNY FEDERALNY' where country='RUSSIA' and city like 'KHABAROVSK';
Update geo_temp_union set state='SIBIRSKI FEDERALNY' where country='RUSSIA' and city like 'TOMSK';
Update geo_temp_union set state='SEVERO KAVKAZSKI FEDERALNY' where country='RUSSIA' and city like 'KALININGRAD';
Update geo_temp_union set state='SIBIRSKI FEDERALNY' where country='RUSSIA' and city like 'IRKUTSK';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'IVANOVO';
Update geo_temp_union set state='SIBIRSKI FEDERALNY' where country='RUSSIA' and city like 'BARNAUL';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'TOGLIATTI';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'RYAZAN';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'LIPETSK';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'KURSK';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'ODINTSOVO';
Update geo_temp_union set state='SEVERO ZAPADNY FEDERALNY' where country='RUSSIA' and city like 'MURMANSK';
Update geo_temp_union set state='LOUJNY FEDERALNY' where country='RUSSIA' and city like 'VOLGOGRAD';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'KOROLEV';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'CHEBOKSARY';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'IZHEVSK';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'MYTISCHI';
Update geo_temp_union set state='OURALSKI FEDERALNY' where country='RUSSIA' and city like 'MAGNITOGORSK';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'TVER';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'KHIMKI';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'KRASNOGORSK';
Update geo_temp_union set state='KALUGA FEDERALNY' where country='RUSSIA' and city like 'KALUGA';
Update geo_temp_union set state='SEVERO ZAPADNY FEDERALNY' where country='RUSSIA' and city like 'PETROZAVODSK';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'BELGOROD';
Update geo_temp_union set state='SIBIRSKI FEDERALNY' where country='RUSSIA' and city like 'KEMEROVO';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'KIROV';
Update geo_temp_union set state='OURALSKI FEDERALNY' where country='RUSSIA' and city like 'KURGAN';
Update geo_temp_union set state='OURALSKI FEDERALNY' where country='RUSSIA' and city like 'SURGUT';
Update geo_temp_union set state='SIBIRSKI FEDERALNY' where country='RUSSIA' and city like 'CHITA';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'ZELENOGRAD';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'BALASHIKHA';
Update geo_temp_union set state='SEVERO ZAPADNY FEDERALNY' where country='RUSSIA' and city like 'SYKTYVKAR';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'TULA';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'VLADIMIR';
Update geo_temp_union set state='LOUJNY FEDERALNY' where country='RUSSIA' and city like 'SOCHI';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'PENZA';
Update geo_temp_union set state='OURALSKI FEDERALNY' where country='RUSSIA' and city like 'ORENBURG';
Update geo_temp_union set state='DALNEVOSTOTCHNY FEDERALNY' where country='RUSSIA' and city like 'YUZHNO SAKHALINSK';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'SMOLENSK';
Update geo_temp_union set state='TSENTRALNY FEDERALNY' where country='RUSSIA' and city like 'PODOLSK';
Update geo_temp_union set state='SEVERO ZAPADNY FEDERALNY' where country='RUSSIA' and city like 'VOLOGDA';
Update geo_temp_union set state='LOUJNY FEDERALNY' where country='RUSSIA' and city like 'ASTRAKHAN';
Update geo_temp_union set state='SEVERO KAVKAZSKI FEDERALNY' where country='RUSSIA' and city like 'VLADIKAVKAZ';
Update geo_temp_union set state='PRIVOLJSKI FEDERALNY' where country='RUSSIA' and city like 'ULYANOVSK';
Update geo_temp_union set state='SEVERO KAVKAZSKI FEDERALNY' where country='RUSSIA' and city like 'MAKHACHKALA';
Update geo_temp_union set state='SEVERO ZAPADNY FEDERALNY' where country='RUSSIA' and city like 'ARKHANGELSK';

/* AJOUT CHAMP ZONE et LANGUE */
ALTER TABLE geo_temp_union ADD zone CHAR(50) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_union ADD langue CHAR(100) CHARACTER SET utf8 NOT NULL;

/* MAJ CHAMP ZONE et LANGUE EN FONCTION DU PAYS (PAYS EN ORDRE ALPHABETIQUE) */
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="PERSIAN/PASHTO" where country ="AFGHANISTAN" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ENGLISH/FRENCH/RUSSIAN/SPANISH/PORTUGUESE" where country ="ANTARCTICA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ALBANIAN" where country ="ALBANIA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="SWEDISH" where country ="ALAND ISLANDS" ;
UPDATE geo_temp_union SET zone="MAGHREB", langue="FRENCH/ARABIC/BERBER" where country ="ALGERIA" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH/SAMOAN" where country ="AMERICAN SAMOA" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH/SAMOAN" where country ="SAMOA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="CATALAN" where country ="ANDORRA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="PORTUGUESE" where country ="ANGOLA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="ANTIGUA AND BARBUDA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="ANGUILLA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="ARGENTINA" ;
UPDATE geo_temp_union SET zone="CIS", langue="RUSSIAN" where country ="ARMENIA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="DUTCH/PAPIAMENTO" where country ="ARUBA" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH" where country ="AUSTRALIA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="GERMAN" where country ="AUSTRIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH" where country ="ASCENSION ISLAND" ;
UPDATE geo_temp_union SET zone="CIS", langue="RUSSIAN" where country ="AZERBAIJAN" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="BAHAMAS" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC" where country ="BAHRAIN" ;
UPDATE geo_temp_union SET zone="ASIA", langue="BANGLA" where country ="BANGLADESH" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="BARBADOS" ;
UPDATE geo_temp_union SET zone="CIS", langue="RUSSIAN/BELARUSIAN" where country ="BELARUS" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="BENIN" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="FRENCH/DUTCH/GERMAN" where country ="BELGIUM" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="BELIZE" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH/PORTUGUESE" where country ="BERMUDA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH/QUECHUA/AIMARA/GUARANI" where country ="BOLIVIA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="BOSNIAN/CROATIAN/SERBIAN" where country ="BOSNIA AND HERZEGOVINA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH" where country ="BOTSWANA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="NORWEGIAN" where country ="BOUVET ISLAND" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="PORTUGUESE" where country = "BRAZIL" ;
UPDATE geo_temp_union SET zone="ASIA", langue="ENGLISH" where country = "BRITISH INDIAN OCEAN TERRITORY" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country = "BRITISH VIRGIN ISLANDS" ;
UPDATE geo_temp_union SET zone="ASIA", langue="MALAY" where country = "BRUNEI" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="BULGARIAN" where country = "BULGARIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country = "BURKINA FASO" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH/KIRUNDI" where country = "BURUNDI" ;
UPDATE geo_temp_union SET zone="ASIA", langue="DZONGKHA/THIMPHOU" where country = "BHUTAN" ;
UPDATE geo_temp_union SET zone="ASIA", langue="KHMER" where country ="CAMBODIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="CAMEROON" ;
UPDATE geo_temp_union SET zone="NORTH AMERICA", langue="ENGLISH/FRENCH" where country ="CANADA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="PORTUGUESE" where country ="CAPE VERDE" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="CAYMAN ISLANDS" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH/SANGO" where country ="CENTRAL AFRICAN REPUBLIC" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ENGLISH" where country ="CHANNEL ISLANDS" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="CHILE" ;
UPDATE geo_temp_union SET zone="ASIA", langue="CHINESE" where country ="CHINA" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH" where country ="COCOS ISLANDS" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="COLOMBIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH/COMOROS/ARABIC" where country ="COMOROS" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="CONGO BRAZZAVILLE" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="CONGO KINSHASA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="COSTA RICA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="CROATIAN" where country ="CROATIA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="CUBA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="GREEK/TURKISH" where country ="CYPRUS" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="CZECH" where country ="CZECH REPUBLIC" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="DANISH" where country ="DENMARK" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH/ARABIC" where country ="DJIBOUTI" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="DOMINICAN REPUBLIC" ;
UPDATE geo_temp_union SET zone="ASIA", langue="PORTUGUESE" where country ="EAST TIMOR" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="ECUADOR" ;
UPDATE geo_temp_union SET zone="MAGHREB", langue="ARABIC" where country ="EGYPT" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="RUSSIAN" where country ="ESTONIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="AMHARIC" where country ="ETHIOPIA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="FALKLAND ISLANDS" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="DANISH/FAROESE" where country ="FAROE ISLANDS" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="FIDJIAN" where country ="FIJI" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="FINNISH/SWEDISH" where country ="FINLAND" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="FRENCH" where country ="FRANCE" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="FRENCH" where country ="FRENCH GUIANA" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="FRENCH" where country ="FRENCH POLYNESIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="GABON" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH" where country ="GAMBIA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="GEORGIAN" where country ="GEORGIA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="GERMAN" where country ="GERMANY" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH" where country ="GHANA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ENGLISH" where country ="GIBRALTAR" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="GREEK" where country ="GREECE" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="GRENADA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="GREENLANDIC" where country ="GREENLAND" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="FRENCH" where country ="GUADELOUPE" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH" where country ="GUAM" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="GUATEMALA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ENGLISH/FRENCH" where country ="GUERNSEY" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="GUINEA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="PORTUGUESE" where country ="GUINEA BISSAU" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="SPANISH" where country ="EQUATORIAL GUINEA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="GUYANA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="FRENCH" where country ="HAITI" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="HONDURAS" ;
UPDATE geo_temp_union SET zone="ASIA", langue="ENGLISH/CANTONESE" where country ="HONG KONG" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="HUNGARIAN" where country ="HUNGARY" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ICELANDIC" where country ="ICELAND" ;
UPDATE geo_temp_union SET zone="ASIA", langue="ENGLISH/HINDI" where country ="INDIA" ;
UPDATE geo_temp_union SET zone="ASIA", langue="INDONESIAN" where country ="INDONESIA" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="PERSIAN" where country ="IRAN" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC/KURDISH" where country ="IRAQ" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ENGLISH/IRISH" where country ="IRELAND" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC/HEBREW" where country ="ISRAEL" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ITALIAN" where country ="ITALY" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="IVORY COAST" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="JAMAICA" ;
UPDATE geo_temp_union SET zone="ASIA", langue="JAPANESE" where country ="JAPAN" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ENGLISH/FRENCH/NORMAN" where country ="JERSEY" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC" where country ="JORDAN" ;
UPDATE geo_temp_union SET zone="CIS", langue="RUSSIAN/KAZAKH" where country ="KAZAKHSTAN" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH/SWAHILI" where country ="KENYA" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH" where country ="KIRIBATI" ;
UPDATE geo_temp_union SET zone="ASIA", langue="KOREAN" where country ="KOREA" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC" where country ="KUWAIT" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ALBANIAN/SERBIAN" where country ="KOSOVO" ;
UPDATE geo_temp_union SET zone="CIS", langue="RUSSIAN/KYRGYZ" where country ="KYRGYZSTAN" ;
UPDATE geo_temp_union SET zone="ASIA", langue="LAOTIAN" where country ="LAOS" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="LATVIAN" where country ="LATVIA" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC" where country ="LEBANON" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH/SESOTHO" where country ="LESOTHO" ;
UPDATE geo_temp_union SET zone="MAGHREB", langue="ARABIC" where country ="LIBYA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH" where country ="LIBERIA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="GERMAN" where country ="LIECHTENSTEIN" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="LITHUANIAN" where country ="LITHUANIA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="GERMAN/LUXEMBOURG" where country ="LUXEMBOURG" ;
UPDATE geo_temp_union SET zone="ASIA", langue="CANTONESE/PORTUGUESE" where country ="MACAO SAR CHINA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="MACEDONIAN" where country ="MACEDONIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH/MALAGASY" where country ="MADAGASCAR" ;
UPDATE geo_temp_union SET zone="ASIA", langue="MALAY" where country ="MALAYSIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH/CHICHEWA" where country ="MALAWI" ;
UPDATE geo_temp_union SET zone="ASIA", langue="DIVEHI" where country ="MALDIVES" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="MALI" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ENGLISH/MALTAIS" where country ="MALTA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="FRENCH" where country ="MARTINIQUE" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ARABIC" where country ="MAURITANIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH/FRENCH/MAURITIUS" where country ="MAURITIUS" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="SWAHILI/MALAGASY" where country ="MAYOTTE" ;
UPDATE geo_temp_union SET zone="NORTH AMERICA", langue="SPANISH" where country ="MEXICO" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH" where country ="MICRONESIA" ;
UPDATE geo_temp_union SET zone="CIS", langue="ROMANIAN" where country ="MOLDOVA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="FRENCH" where country ="MONACO" ;
UPDATE geo_temp_union SET zone="CIS", langue="MONGOL" where country ="MONGOLIA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="BOSNIAN/SERBIAN/CROATIAN/ALBANIAN/MONTENEGRIN" where country ="MONTENEGRO" ;
UPDATE geo_temp_union SET zone="MAGHREB", langue="FRENCH/ARABIC/BERBER" where country ="MOROCCO" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="PORTUGUESE/MAPUTO" where country ="MOZAMBIQUE" ;
UPDATE geo_temp_union SET zone="ASIA", langue="BURMESE" where country ="MYANMAR" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH" where country ="NAURU" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH" where country ="NAMIBIA" ;
UPDATE geo_temp_union SET zone="ASIA", langue="NEPALAIS" where country ="NEPAL" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="DUTCH" where country ="NETHERLANDS" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH/DUTCH" where country ="NETHERLANDS ANTILLES" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="FRENCH" where country ="NEW CALEDONIA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="NEVIS" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH" where country ="NEW ZEALAND" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="NICARAGUA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="NIGER" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH" where country ="NIGERIA" ;
UPDATE geo_temp_union SET zone="ASIA", langue="KOREAN" where country ="NORTH KOREA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="NORWEGIAN" where country ="NORWAY" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC" where country ="OMAN" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ENGLISH/OURDOU" where country ="PAKISTAN" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC" where country ="PALESTINIAN TERRITORY" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH" where country = "PALAU" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="PANAMA" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH/TOK PISIN/HIRI MOTU" where country ="PAPUA NEW GUINEA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH/GUARANI" where country ="PARAGUAY" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH/QUECHUA/AIMARA" where country ="PERU" ;
UPDATE geo_temp_union SET zone="ASIA", langue="ENGLISH/FILIPINO" where country ="PHILIPPINES" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH" where country ="PITCAIRN" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="POLISH" where country ="POLAND" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="PORTUGUESE" where country ="PORTUGAL" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH/SPANISH" where country ="PUERTO RICO" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC" where country ="QATAR" ;
UPDATE geo_temp_union SET zone="ASIA", langue="FRENCH" where country ="REUNION" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ROMANIAN" where country ="ROMANIA" ;
UPDATE geo_temp_union SET zone="CIS", langue="RUSSIAN" where country ="RUSSIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH/FRENCH/KINYARWANDA" where country ="RWANDA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="ST LUCIA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="ST KITTS" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH" where country ="ST HELENA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="FRENCH" where country ="SAINT BARTHELEMY" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ITALIAN" where country ="SAN MARINO" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="SALVADOR" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="PORTUGUESE" where country ="SAO TOME AND PRINCIPE" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC" where country ="SAUDI ARABIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="SENEGAL" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="SERBIAN" where country ="SERBIA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH/FRENCH" where country ="SEYCHELLES" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ENGLISH" where country ="SIERRA LEONE" ;
UPDATE geo_temp_union SET zone="ASIA", langue="ENGLISH/MANDARIN/MALAY/TAMOUL" where country ="SINGAPORE" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="SLOVAQUE" where country ="SLOVAKIA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ITALIAN/SLOVENIAN/HUNGARIAN" where country ="SLOVENIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH/AFRIKAAN" where country ="SOUTH AFRICA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH" where country ="SOLOMON ISLANDS" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ARABIC/SOMALI" where country ="SOMALIA" ;
UPDATE geo_temp_union SET zone="ASIA", langue="KOREAN" where country ="SOUTH KOREA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="SPANISH" where country ="SPAIN" ;
UPDATE geo_temp_union SET zone="ASIA", langue="ENGLISH/CINGALAIS/TAMOUL" where country ="SRI LANKA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH/ARABIC" where country ="SUDAN" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="DUTCH/PARAMARIBO" where country ="SURINAME" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH/SWATI" where country ="SWAZILAND" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="SWEDISH" where country ="SWEDEN" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="FRENCH/ITALIAN/GERMAN" where country ="SWITZERLAND" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC" where country ="SYRIA" ;
UPDATE geo_temp_union SET zone="ASIA", langue="CHINESE/MANDARIN" where country ="TAIWAN" ;
UPDATE geo_temp_union SET zone="CIS", langue="RUSSIAN/TADJIK" where country ="TAJIKISTAN" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH/SWAHILI" where country ="TANZANIA" ;
UPDATE geo_temp_union SET zone="ASIA", langue="THAI" where country ="THAILAND" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="FRENCH" where country ="TOGO" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH/TONGIEN" where country ="TONGA" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="TRINIDAD AND TOBAGO" ;
UPDATE geo_temp_union SET zone="MAGHREB", langue="FRENCH/ARABIC/CHELHA" where country ="TUNISIA" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="TURKISH" where country ="TURKEY" ;
UPDATE geo_temp_union SET zone="CIS", langue="RUSSIAN/TURKMEN" where country ="TURKMENISTAN" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH/SWAHILI" where country ="UGANDA" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="RUSSIAN/UKRAINIAN/HUNGARIAN/ROMANIAN" where country ="UKRAINE" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ENGLISH/ARABIC" where country ="UNITED ARAB EMIRATES" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ENGLISH" where country ="UNITED KINGDOM" ;
UPDATE geo_temp_union SET zone="NORTH AMERICA", langue="ENGLISH" where country ="UNITED STATES" ;
UPDATE geo_temp_union SET zone="NORTH AMERICA", langue="ENGLISH" where country ="UNITED STATES MINOR OUTLYING ISLANDS" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="URUGUAY" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="US VIRGIN ISLANDS" ;
UPDATE geo_temp_union SET zone="CIS", langue="RUSSIAN/UZBEK" where country ="UZBEKISTAN" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="SPANISH" where country ="VENEZUELA" ;
UPDATE geo_temp_union SET zone="ASIA", langue="VIETNAMESE" where country ="VIETNAM" ;
UPDATE geo_temp_union SET zone="MIDDLE EAST", langue="ARABIC" where country ="YEMEN" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH" where country ="ZAMBIA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ENGLISH" where country ="ZIMBABWE" ;
UPDATE geo_temp_union SET zone="SOUTH AMERICA", langue="ENGLISH" where country ="TURKS AND CAICOS ISLANDS" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="TUVALUAN" where country ="TUVALU" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH/NIUEAN" where country ="NIUE" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="ENGLISH/FRENCH/BISLAMA" where country ="VANUATU" ;
UPDATE geo_temp_union SET zone="EUROPE", langue="ITALIAN" where country ="VATICAN CITY STATE" ;
UPDATE geo_temp_union SET zone="OCEANIA", langue="FRENCH" where country ="WALLIS AND FUTUNA" ;
UPDATE geo_temp_union SET zone="AFRICA", langue="ARABIC" where country ="WESTERN SAHARA" ;

UPDATE geo_temp_union SET zone="EUROPE", langue="ENGLISH" where country ="OTHER" ;

/* MODIFICATION FRENCH ADDRESS1 */
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AND ", " ET ") where langue="FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVENUE", "AV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVE ", "AV ") where langue="FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BOULEVARD", "BV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BD ", "BV ") where langue="FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BVD", "BV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BLVD", "BV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BLD ", "BV ") where langue="FRENCH" ;

/* MODIFICATION FRENCH ADDRESS2 */
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AND ", " ET ") where langue="FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVENUE", "AV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVE ", "AV ") where langue="FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BOULEVARD", "BV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BD ", "BV ") where langue="FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BVD", "BV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BLVD", "BV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BLD ", "BV ") where langue="FRENCH" ;

/* MODIFICATION FRENCH ADDRESS3 */
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AND ", " ET ") where langue="FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVENUE", "AV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVE ", "AV ") where langue="FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BOULEVARD", "BV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BD ", "BV ") where langue="FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BVD", "BV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BLVD", "BV") where langue="FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BLD ", "BV ") where langue="FRENCH" ;

/* MODIFICATION NON-FRENCH ADDRESS1 */
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVENUE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AV ", "AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AV", " AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVEE ", "AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " BV ", " BVD ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BOULEVARD", "BVD") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " BD ", " BVD ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "BLVD", "BVD") where langue<>"FRENCH" ;

/* CORRECTION AVENUE */
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVEEEEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVEEEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVEEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AVEE ", " AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, "AVEE ", "AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address1 = REPLACE(address1, " AVEE", " AVE") where langue<>"FRENCH" ;

/* MODIFICATION NON-FRENCH ADDRESS2 */
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVENUE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AV ", "AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AV", " AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVEE ", "AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " BV ", " BVD ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BOULEVARD", "BVD") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " BD ", " BVD ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "BLVD", "BVD") where langue<>"FRENCH" ;

/* CORRECTION AVENUE */
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVEEEEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVEEEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVEEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AVEE ", " AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, "AVEE ", "AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address2 = REPLACE(address2, " AVEE", " AVE") where langue<>"FRENCH" ;

/* MODIFICATION NON-FRENCH ADDRESS3 */
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVENUE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AV ", "AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AV", " AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVEE ", "AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " BV ", " BVD ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BOULEVARD", "BVD") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " BD ", " BVD ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "BLVD", "BVD") where langue<>"FRENCH" ;

/* CORRECTION AVENUE */
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVEEEEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVEEEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVEEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVEEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVEEE", "AVE") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AVEE ", " AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, "AVEE ", "AVE ") where langue<>"FRENCH" ;
UPDATE geo_temp_union SET address3 = REPLACE(address3, " AVEE", " AVE") where langue<>"FRENCH" ;

/***********************************************************************************/

/* MODIFICATION civilitÈs - champ civility */
UPDATE geo_temp_union SET civility = 'Dr' WHERE civility LIKE '%DOCTOR%' ;
UPDATE geo_temp_union SET civility = 'Dr' WHERE civility LIKE  '%DOCTEUR%' ;
UPDATE geo_temp_union SET civility = 'Dr' WHERE civility LIKE  '%DOCTORA%' ;
UPDATE geo_temp_union SET civility = 'Dr' WHERE civility LIKE 'DRA' ;
UPDATE geo_temp_union SET civility = 'Dr' WHERE civility LIKE 'DRS' ;
UPDATE geo_temp_union SET civility = 'Dr' WHERE civility LIKE 'MD %' ;
UPDATE geo_temp_union SET civility = 'Dr' WHERE civility LIKE 'MED %' ;
UPDATE geo_temp_union SET civility = 'Dr' WHERE civility LIKE 'MED' ;
UPDATE geo_temp_union SET civility = 'Dr' WHERE civility LIKE 'DR' ;

UPDATE geo_temp_union SET civility = 'Prof.' WHERE civility LIKE 'PROF' ;
UPDATE geo_temp_union SET civility = 'Prof.' WHERE civility LIKE 'PROF.' ;
UPDATE geo_temp_union SET civility = 'Prof.' WHERE civility LIKE 'PRA' ;
UPDATE geo_temp_union SET civility = 'Prof.' WHERE civility LIKE '%PROFESSOR%' ;
UPDATE geo_temp_union SET civility = 'Prof.' WHERE civility LIKE '%PROFESSEUR%' ;

UPDATE geo_temp_union SET civility = 'Prof. Dr' WHERE civility LIKE 'PROF DR' ;
UPDATE geo_temp_union SET civility = 'Prof. Dr' WHERE civility LIKE 'PROF. DR' ;
UPDATE geo_temp_union SET civility = 'Prof. Dr' WHERE civility LIKE 'PROF. DR.' ;

UPDATE geo_temp_union SET civility = 'Mr' WHERE civility LIKE '%MONSIEUR%' ;
UPDATE geo_temp_union SET civility = 'Mr' WHERE civility LIKE 'MR' ;

UPDATE geo_temp_union SET civility = 'Mrs' WHERE civility LIKE '%MISSTRESS%' ;
UPDATE geo_temp_union SET civility = 'Mrs' WHERE civility LIKE '%MISTRES%' ;
UPDATE geo_temp_union SET civility = 'Mrs' WHERE civility LIKE '%MADAM%' ;
UPDATE geo_temp_union SET civility = 'Mrs' WHERE civility LIKE 'MRS' ;

UPDATE geo_temp_union SET civility = 'Ms' WHERE civility LIKE 'MS' ;
UPDATE geo_temp_union SET civility = 'Ms' WHERE civility LIKE '%MADEMOISEL%' ;
UPDATE geo_temp_union SET civility = 'Ms' WHERE civility LIKE 'MELLE' ;

UPDATE geo_temp_union SET civility = 'Miss' WHERE civility LIKE 'MISS' ;


/* Remplacement des civilitÈs vides par DR si spÈcialitÈ mÈdicale et type delegate */
UPDATE geo_temp_union SET civility = 'Dr' WHERE  civility = '' AND type = "DELEGATE" AND speciality IN ('Aesthetic Practitioner','Biologist/Biochemist','Cardiologist','Aesthetic & Plastic Surgeon','Anti-Aging Practitioner','Anesthesist','Angiologist','Dental Clinic','ENT (Ear, Nose & Throat)', 'ENT/Head & Neck Specialist', 'General Surgeon','Genetician','Implantologist','Maxillofacial Surgeon','Mesotherapist','Oncologist','Pediatrist','Pharmacologist','Phlebologist','Physiotherapist','Psychiatrist','Psychotherapist','Stomatologist','Urologist','Acupuncturist','Endocrinologist','Cosmetologist MD','General Practitioner','Geriatrist','Plastic & Reconstructive Surgeon','Pathologist','Proctologist','Obstetrician','Aesthetic & Anti-Aging Practitioner','Nutritionist','Andrologist','Gynecologist/Obstetrician','Gynecologist','Alternative Medicine','Biomedical Physician','Cytologist','Hematologist','Homeopathic Physician','Neurologist','Neonatologist','Nephrologist','Odontologist','Orthopedist','Psychologist','Hospital Manager','Dermatologist','Facial Plastic Surgeon','Oculoplastic Surgeon','Plastic Surgeon','Dental Surgeon','Dental Assistant','Ophthalmologist','Dentist','Orthodontist','Other Physician','Research Scientist','Injector','Pharmacist','Prothesist','Radiologist','Sports Medicine','Vascular Surgeon', 'Epidemiologist', 'Virologist') ;

/***********************************************************************************/

/* EFFACEMENT DES CHAMPS EGAUX ENTRE EUX */
UPDATE geo_temp_union SET address1 = '' WHERE address1 =  raison_sociale ;
UPDATE geo_temp_union SET address2 = '' WHERE address2 =  raison_sociale ;
UPDATE geo_temp_union SET address3 = '' WHERE address3 =  raison_sociale ;

/* TRANSFERT DES POBOXS DES ADRESSES 1, 2, 3 ET ZIPCODE DANS POBOXS, PUIS EFFACEMENT DES CHAMPS …GAUX */
update geo_temp_union set pobox = address1 where address1 like '%BOX%' ;
update geo_temp_union set pobox = address2 where address2 like '%BOX%' ;
update geo_temp_union set pobox = address3 where address3 like '%BOX%' ;
update geo_temp_union set pobox = zipcode where zipcode like '%BOX%' ;

/* EFFACEMENT DES CHAMPS EGAUX ENTRE EUX */
UPDATE geo_temp_union SET address1 = '' WHERE address1 =  pobox ;
UPDATE geo_temp_union SET address2 = '' WHERE address2 =  pobox ;
UPDATE geo_temp_union SET address3 = '' WHERE address3 =  pobox ;
UPDATE geo_temp_union SET zipcode = '' WHERE zipcode =  pobox ;

/* TRANSFERT DES ADRESSES 2 ET 3 NON VIDES DANS LES ADRESSE 1 ET 2 VIDES, PUIS EFFACEMENT DES CHAMPS …GAUX */
update geo_temp_union set address1 = address2 where address2 not like '' and address1 like '' ;
update geo_temp_union set address2 = '' where address1 = address2 ;
update geo_temp_union set address2 = address3 where address3 not like '' and address2 like '' ;
update geo_temp_union set address3 = '' where address2 = address3 ;
update geo_temp_union set address1 = address2 where address2 not like '' and address1 like '' ;
update geo_temp_union set address2 = '' where address1 = address2 ;

/***********************************************************************************/

/* POBOX SUPPRESSION DES LETTRES */

UPDATE geo_temp_union SET pobox = REPLACE(pobox, "A", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Z", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "E", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "R", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "T", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Y", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "U", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "I", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "O", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "P", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "Q", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "S", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "D", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "F", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "G", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "H", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "J", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "K", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "L", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "M", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "W", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "X", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "C", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "V", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "B", "");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "N", "");

/* POBOX CONCATENATION */
UPDATE geo_temp_union SET pobox = CONCAT('PO BOX ',pobox) WHERE pobox NOT LIKE '' ;

UPDATE geo_temp_union SET pobox = REPLACE(pobox, "   ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "  ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "   ", " ");
UPDATE geo_temp_union SET pobox = REPLACE(pobox, "  ", " ");

/***********************************************************************************/

/* ZIPCODES DES PAYS NECESSITANT UN ZIPCODE - AJOUT CHAMP longueur_zipcode */

/* EFFACEMENT DES ZIPCODES ET POBOX SANS CHIFFRE */
UPDATE geo_temp_union SET zipcode = ''
where (zipcode not like '' AND zipcode not like '%0%' AND zipcode not like '%1%' AND zipcode not like '%2%' AND zipcode not like '%3%' AND zipcode not like '%4%' AND zipcode not like '%5%' AND zipcode not like '%6%' AND zipcode not like '%7%' AND zipcode not like '%8%' AND zipcode not like '%9%' );

UPDATE geo_temp_union SET pobox = ''
where (pobox not like '' AND pobox not like '%0%' AND pobox not like '%1%' AND pobox not like '%2%' AND pobox not like '%3%' AND pobox not like '%4%' AND pobox not like '%5%' AND pobox not like '%6%' AND pobox not like '%7%' AND pobox not like '%8%' AND pobox not like '%9%' );

/* AJOUT CHAMP longueur_zipcode */
ALTER TABLE geo_temp_union ADD longueur_zipcode CHAR(5) CHARACTER SET utf8 NOT NULL;

UPDATE geo_temp_union SET longueur_zipcode = LENGTH(zipcode);

UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'ALGERIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'AUSTRALIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'AUSTRIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '5' and country = 'BELARUS';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'BELGIUM';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'BOSNIA AND HERZEGOVINA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '8' and country = 'BRAZIL';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '8' and country = 'CAMBODIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '5' and country = 'COLOMBIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'CROATIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '5' and country = 'CHINA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'DENMARK';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '5' and country = 'ECUADOR';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'FINLAND';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'FRANCE';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'GERMANY';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'GREECE';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'GUATEMALA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'HUNGARY';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '5' and country = 'INDIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'ITALY';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '7' and country = 'JAPAN';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '5' and country = 'KAZAKHSTAN';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '5' and country = 'KYRGYZSTAN';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'LITHUANIA';   
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'LUXEMBOURG';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'LIECHTENSTEIN';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'MACEDONIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '2' and country = 'MADAGASCAR';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'MEXICO';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'MALAYSIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'MOROCCO';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'MOLDOVA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'MONTENEGRO';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'NETHERLANDS';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '5' and country = 'POLAND';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '5' and country = 'ROMANIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'SAUDI ARABIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'SERBIA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'SRI LANKA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '3' and country = 'SOUTH AFRICA';
UPDATE geo_temp_union SET zipcode = CONCAT('0',zipcode) where longueur_zipcode = '4' and country = 'SPAIN';
UPDATE geo_temp_union SET zipcode = CONCAT('1',zipcode) where longueur_zipcode = '2' and country = 'TAIWAN';
UPDATE geo_temp_union SET zipcode = CONCAT('1',zipcode) where longueur_zipcode = '5' and country = 'UZBEKISTAN';

/* MAJ CHAMP longueur_zipcode AVANT UPDATE SUR zipcode */
UPDATE geo_temp_union SET longueur_zipcode = LENGTH(zipcode);

/* NOTIFICATION DES LIGNES A SUPPRIMER DES ROUTAGES POSTAUX */
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'ALGERIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'AUSTRALIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'AUSTRIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '6' and country = 'BELARUS';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'BELGIUM';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'BOSNIA AND HERZEGOVINA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '9' and country = 'BRAZIL';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '9' and country = 'CAMBODIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'CROATIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '6' and country = 'CHINA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'DENMARK';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '6' and country = 'ECUADOR';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'FINLAND';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'FRANCE';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'GERMANY';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '6' and country = 'GREECE';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'GUATEMALA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'HUNGARY';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '6' and country = 'INDIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'ITALY';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '8' and country = 'JAPAN';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '6' and country = 'KAZAKHSTAN';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '6' and country = 'KYRGYZSTAN';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'LITHUANIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'LUXEMBOURG';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'LIECHTENSTEIN';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'MACEDONIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '3' and country = 'MADAGASCAR';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'MEXICO';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'MALAYSIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'MOROCCO';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'MOLDOVA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'MONTENEGRO';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'NETHERLANDS';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '6' and country = 'POLAND';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '6' and country = 'ROMANIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'SAUDI ARABIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'SERBIA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'SRI LANKA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '4' and country = 'SOUTH AFRICA';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '5' and country = 'SPAIN';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '3' and country = 'TAIWAN';
UPDATE geo_temp_union SET zipcode = 'SUPPRIMER DES ROUTAGES POSTAUX' where longueur_zipcode NOT LIKE '6' and country = 'UZBEKISTAN';
/* FIN ZIPCODES DES PAYS NECESSITANT UN ZIPCODE */

/***********************************************************************************/

/* AJOUT CHAMP CONCATENATION pers_uniq */
ALTER TABLE geo_temp_union ADD pers_uniq VARCHAR(300) CHARACTER SET utf8 NOT NULL;

UPDATE geo_temp_union SET pers_uniq = CONCAT(lastname,firstname,email);
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "   ", "");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "  ", "");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, " ", "");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "   ", "");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "  ", "");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, " ", "");

/* pers_uniq CORRECTION PONCTUATION ET SYLLABES A CAUTION */
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "-", "");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, ".", "");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "@", "");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "STR", "ST");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "SH", "C");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "CH", "C");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "TH", "T");

/* pers_uniq LETTRE EN DOUBLE*/
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "AA", "A");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "ZZ", "Z");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "EE", "E");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "RR", "R");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "TT", "T");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "YY", "Y");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "UU", "U");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "II", "I");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "OO", "O");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "PP", "P");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "QQ", "Q");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "SS", "S");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "DD", "D");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "FF", "F");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "GG", "G");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "HH", "H");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "JJ", "J");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "KK", "K");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "LL", "L");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "MM", "M");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "WW", "W");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "XX", "X");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "CC", "C");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "VV", "V");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "BB", "B");
UPDATE geo_temp_union SET pers_uniq = REPLACE(pers_uniq, "NN", "N");

/* pers_uniq en minuscule */
UPDATE geo_temp_union SET pers_uniq = LOWER(pers_uniq);

/* AJOUT CHAMP CONCATENATION add_uniq */
ALTER TABLE geo_temp_union ADD add_uniq VARCHAR(400) CHARACTER SET utf8 NOT NULL;

UPDATE geo_temp_union SET add_uniq = CONCAT(raison_sociale,address1,address2,address3,zipcode,pobox,city);
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "   ", "");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "  ", "");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, " ", "");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "   ", "");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "  ", "");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, " ", "");

/* add_uniq CORRECTION PONCTUATION ET SYLLABES A CAUTION */
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "STR", "ST");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "SH", "C");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "CH", "C");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "TH", "T");

UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "BLOCK", "BLK") ;
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "BLOK", "BLK") ;
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "BLOC", "BLK") ;

/* add_uniq LETTRE EN DOUBLE*/
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "AA", "A");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "ZZ", "Z");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "EE", "E");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "RR", "R");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "TT", "T");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "YY", "Y");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "UU", "U");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "II", "I");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "OO", "O");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "PP", "P");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "QQ", "Q");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "SS", "S");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "DD", "D");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "FF", "F");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "GG", "G");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "HH", "H");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "JJ", "J");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "KK", "K");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "LL", "L");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "MM", "M");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "WW", "W");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "XX", "X");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "CC", "C");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "VV", "V");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "BB", "B");
UPDATE geo_temp_union SET add_uniq = REPLACE(add_uniq, "NN", "N");

/* add_uniq en minuscule */
UPDATE geo_temp_union SET add_uniq = LOWER(add_uniq);

/* AJOUT CHAMP concat_name */
ALTER TABLE geo_temp_union ADD concat_name CHAR(240) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET concat_name = CONCAT(' ',civility,' ',firstname,' ',lastname);
UPDATE geo_temp_union SET concat_name = LOWER(concat_name);

UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " a", " A");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " z", " Z");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " e", " E");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " r", " R");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " t", " T");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " y", " Y");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " u", " U");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " i", " I");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " o", " O");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " p", " P");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " q", " Q");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " s", " S");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " d", " D");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " f", " F");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " g", " G");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " h", " H");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " j", " J");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " k", " K");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " l", " L");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " m", " M");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " w", " W");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " x", " X");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " c", " C");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " v", " V");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " b", " B");
UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, " n", " N");

UPDATE geo_temp_union SET concat_name = REPLACE(concat_name, "  ", " ");
UPDATE geo_temp_union SET concat_name = SUBSTR(concat_name, 2 );

UPDATE geo_temp_union SET concat_name = '' WHERE concat_name LIKE 'Contact' ;
UPDATE geo_temp_union SET concat_name = '' WHERE concat_name LIKE 'Doctor' ;


/* CONCATENATION DES firstname ET lastname (diffÈrent du concat_name, utile pour lier avec les NPAI et autres) */
ALTER TABLE geo_temp_union ADD concat_first_last CHAR(240) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET concat_first_last = CONCAT(firstname,' ',lastname);

/* CONCATENATION DES zipcode ET city (utile pour lier avec les NPAI) */
ALTER TABLE geo_temp_union ADD concat_zip_city CHAR(240) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET concat_zip_city = CONCAT(zipcode,' ',city);

/***********************************************************************************/

/* CONCATENATION DES CODES TELEPHONE ET TELEPHONES */
ALTER TABLE geo_temp_union ADD phone CHAR(240) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_union ADD phone2 CHAR(240) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_union ADD mobile CHAR(240) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_union ADD fax_a CHAR(240) CHARACTER SET utf8 NOT NULL;

UPDATE geo_temp_union SET phone = CONCAT(code_tel,' - ',tel) where code_tel not like '';
UPDATE geo_temp_union SET phone2 = CONCAT(code_tel2,' - ',tel2) where code_tel2 not like '';
UPDATE geo_temp_union SET mobile = CONCAT(code_gsm,' - ',gsm) where code_gsm not like '';
UPDATE geo_temp_union SET fax_a = CONCAT(code_fax,' - ',fax) where code_fax not like '';

UPDATE geo_temp_union SET phone = tel where code_tel like '';
UPDATE geo_temp_union SET phone2 = tel2 where code_tel2 like '';
UPDATE geo_temp_union SET mobile = gsm where code_gsm like '';
UPDATE geo_temp_union SET fax_a = fax where code_fax like '';

/* SUPPRESSION CHAMPS : TELEPHONES, CODES TELEPHONE */
ALTER TABLE geo_temp_union DROP COLUMN code_tel;
ALTER TABLE geo_temp_union DROP COLUMN tel;
ALTER TABLE geo_temp_union DROP COLUMN code_tel2;
ALTER TABLE geo_temp_union DROP COLUMN tel2;
ALTER TABLE geo_temp_union DROP COLUMN code_gsm;
ALTER TABLE geo_temp_union DROP COLUMN gsm;
ALTER TABLE geo_temp_union DROP COLUMN code_fax;
ALTER TABLE geo_temp_union DROP COLUMN fax;

/* RENOMMER LE CHAMP FAX */
ALTER TABLE geo_temp_union CHANGE COLUMN fax_a fax CHAR(240) CHARACTER SET utf8 NOT NULL ;

/* NETTOYAGE DES NOUVEAUX CHAMPS TELEPHONE */
UPDATE geo_temp_union SET phone = '' where phone like '%e+%';
UPDATE geo_temp_union SET phone = '' where phone like '%E+%';
UPDATE geo_temp_union SET phone2 = '' where phone2 like '%e+%';
UPDATE geo_temp_union SET phone2 = '' where phone2 like '%E+%';
UPDATE geo_temp_union SET mobile = '' where mobile like '%e+%';
UPDATE geo_temp_union SET mobile = '' where mobile like '%E+%';
UPDATE geo_temp_union SET fax = '' where fax like '%e+%';
UPDATE geo_temp_union SET fax = '' where fax like '%E+%';

UPDATE geo_temp_union SET phone = REPLACE(phone, "¬∞", "");
UPDATE geo_temp_union SET phone = REPLACE(phone, "¬", "");

UPDATE geo_temp_union SET phone2 = REPLACE(phone2, "¬∞", "");
UPDATE geo_temp_union SET phone2 = REPLACE(phone2, "¬", "");

UPDATE geo_temp_union SET mobile = REPLACE(mobile, "¬∞", "");
UPDATE geo_temp_union SET mobile = REPLACE(mobile, "¬", "");

UPDATE geo_temp_union SET fax = REPLACE(fax, "¬∞", "");
UPDATE geo_temp_union SET fax = REPLACE(fax, "¬", "");

/* ********************************************************************************* */

/* Destination telesale contact Pending restant */
/* ===================== SPLIT AA ======================= */
/* ==================== Maddy ==================== */
update geo_temp_union
set destination = 'Maddy'
where destination = 'Pending'
AND last_manifs NOT LIKE '%CWS%' AND outstanding_order NOT LIKE '%CWS%' AND fichier NOT LIKE '%CWS%'
AND country NOT IN ('ARMENIA','AZERBAIDJAN','AZERBAIJAN','BELARUS','CZECH REPUBLIC','KAZAKHSTAN','KYRGYZSTAN','LATVIA','LITHUANIA','MOLDOVA','RUSSIA','TAJIKISTAN','TURKMENISTAN','UKRAINE','UZBEKISTAN')
AND ( 
	lastname LIKE 'M%' OR lastname LIKE '&M%' OR lastname LIKE 'B%' OR lastname LIKE 'K%' OR lastname LIKE 'G%' OR lastname LIKE 'H%' OR lastname LIKE 'J%'
	OR lastname like '.%'
	OR lastname LIKE 'C%' OR lastname LIKE '&C%' OR lastname LIKE 'F%' OR lastname LIKE 'R%' OR lastname LIKE 'N%' 
) ;


/* ==================== emilie cunnington ==================== */
update geo_temp_union
set destination = 'Emilie'
where destination = 'Pending'
AND last_manifs NOT LIKE '%CWS%' AND outstanding_order NOT LIKE '%CWS%' AND fichier NOT LIKE '%CWS%'
AND country NOT IN ('ARMENIA','AZERBAIDJAN','AZERBAIJAN','BELARUS','CZECH REPUBLIC','KAZAKHSTAN','KYRGYZSTAN','LATVIA','LITHUANIA','MOLDOVA','RUSSIA','TAJIKISTAN','TURKMENISTAN','UKRAINE','UZBEKISTAN')
AND ( 
	lastname LIKE 'A%' OR lastname LIKE '&A%' OR lastname LIKE 'E%' OR lastname LIKE 'S%' OR lastname LIKE 'Z%' OR lastname LIKE 'Y%' OR lastname LIKE 'T%' OR lastname LIKE 'V%'
	OR lastname LIKE 'O%' OR lastname LIKE 'U%' OR lastname LIKE 'Q%' OR lastname LIKE 'W%' OR lastname LIKE 'I%' OR lastname LIKE 'X%'
	OR lastname LIKE ' %'
	OR lastname LIKE 'P%' OR lastname LIKE 'L%' OR lastname LIKE 'D%'
) ;


/* ==================== Kate : PAYS CIS + RUSSIAS ==================== */
update geo_temp_union
set destination = 'Kate'
where destination = 'Pending'
AND last_manifs NOT LIKE '%CWS%' AND outstanding_order NOT LIKE '%CWS%' AND fichier NOT LIKE '%CWS%'
AND country IN ('ARMENIA','AZERBAIDJAN','AZERBAIJAN','BELARUS','CZECH REPUBLIC','KAZAKHSTAN','KYRGYZSTAN','LATVIA','LITHUANIA','MOLDOVA','RUSSIA','TAJIKISTAN','TURKMENISTAN','UKRAINE','UZBEKISTAN');

/* ==================== Empty lastname or error ==================== */
update geo_temp_union
set destination = 'Maddy'
where destination LIKE 'Pending'
AND (type LIKE 'EXHIBITOR' OR type LIKE 'LABORATORY')
AND last_manifs NOT LIKE '%CWS%' AND fichier NOT LIKE '%CWS%' ;

/* ===================== FIN AA ======================= */


/* ===================== CWS ======================= */

/* EX-AWATEF - JESSICA */
update geo_temp_union
set destination = 'Jessica'
where destination = 'Pending'
AND (last_manifs LIKE '%CWS%' OR outstanding_order LIKE '%CWS%' OR fichier LIKE '%CWS%')
and country in ('FRANCE','BELGIQUE','MONACO','LUXEMBOURG','ALGERIA','SENEGAL','MALI')
and (lastname like ' %' OR lastname like 'A%' OR lastname like 'B%' OR lastname like 'C%' OR lastname like 'D%' OR lastname like 'E%') ;

/* EX-MATHILDE - JESSICA */
update geo_temp_union
set destination = 'Jessica'
where destination = 'Pending'
AND (last_manifs LIKE '%CWS%' OR outstanding_order LIKE '%CWS%' OR fichier LIKE '%CWS%')
and country in ('FRANCE','BELGIQUE','MONACO','LUXEMBOURG','ALGERIA','SENEGAL','MALI')
and (lastname like 'I%' OR lastname like 'J%' OR lastname like 'K%' OR lastname like 'L%' OR lastname like 'M%' OR lastname like 'O%' OR lastname like 'P%'
OR lastname like 'Q%' OR lastname like 'R%' OR lastname like 'S%' OR lastname like 'T%' OR lastname like 'U%' OR lastname like 'V%' OR lastname like 'W%'
OR lastname like 'X%' OR lastname like 'Y%' OR lastname like 'Z%' OR lastname like 'F%' OR lastname like 'G%' OR lastname like 'H%') ;

/* EX-ELLA - JESSICA */
update geo_temp_union
set destination = 'Jessica'
where destination = 'Pending'
AND (last_manifs LIKE '%CWS%' OR outstanding_order LIKE '%CWS%' OR fichier LIKE '%CWS%')
AND (country NOT IN ('FRANCE','BELGIQUE','MONACO','LUXEMBOURG','ALGERIA','SENEGAL','MALI') )
AND (country NOT IN ('ARMENIA','AZERBAIDJAN','AZERBAIJAN','BELARUS','BULGARIA','CZECH REPUBLIC','ESTONIA','KAZAKHSTAN','KYRGYZSTAN','LATVIA','LITHUANIA','MOLDOVA','RUSSIA','TAJIKISTAN','TURKMENISTAN','UKRAINE','UZBEKISTAN') )
and (lastname like ' %' OR lastname like 'A%' OR lastname like 'B%' OR lastname like 'C%') ;

/* EX-KATIA (CIS) - JESSICA */
update geo_temp_union
set destination = 'Jessica'
where destination = 'Pending'
AND (last_manifs LIKE '%CWS%' OR outstanding_order LIKE '%CWS%' OR fichier LIKE '%CWS%')
AND (country IN ('ARMENIA','AZERBAIDJAN','AZERBAIJAN','BELARUS','BULGARIA','CZECH REPUBLIC','ESTONIA','KAZAKHSTAN','KYRGYZSTAN','LATVIA','LITHUANIA','MOLDOVA','RUSSIA','TAJIKISTAN','TURKMENISTAN','UKRAINE','UZBEKISTAN') );

update geo_temp_union set destination = 'Jessica'
where destination = 'Pending'
AND (last_manifs LIKE '%CWS%' OR outstanding_order LIKE '%CWS%' OR fichier LIKE '%CWS%')
and country NOT IN ('FRANCE','BELGIQUE','MONACO','LUXEMBOURG','ALGERIA','SENEGAL','MALI')
AND (country NOT IN ('ARMENIA','AZERBAIDJAN','AZERBAIJAN','BELARUS','BULGARIA','CZECH REPUBLIC','ESTONIA','KAZAKHSTAN','KYRGYZSTAN','LATVIA','LITHUANIA','MOLDOVA','RUSSIA','TAJIKISTAN','TURKMENISTAN','UKRAINE','UZBEKISTAN') )
and (lastname like 'I%' OR lastname like 'J%' OR lastname like 'K%' OR lastname like 'L%' OR lastname like 'M%' OR lastname like 'N%' OR lastname like 'O%' OR lastname like 'P%'
OR lastname like 'Q%' OR lastname like 'R%' OR lastname like 'S%' OR lastname like 'T%' OR lastname like 'U%' OR lastname like 'V%' OR lastname like 'W%'
OR lastname like 'X%' OR lastname like 'Y%' OR lastname like 'Z%' OR lastname like 'F%' OR lastname like 'G%' OR lastname like 'H%' OR lastname like 'D%' OR lastname like 'E%') ;

/* ===================== FIN SPLIT CHEFS ======================= */
/**************************************************************************************/

/* DEPLACEMENT DE CHAMPS */
ALTER TABLE geo_temp_union MODIFY COLUMN concat_name CHAR(240) AFTER country;
ALTER TABLE geo_temp_union MODIFY COLUMN phone CHAR(240) AFTER email2;
ALTER TABLE geo_temp_union MODIFY COLUMN phone2 CHAR(240) AFTER phone;
ALTER TABLE geo_temp_union MODIFY COLUMN mobile CHAR(240) AFTER phone2;
ALTER TABLE geo_temp_union MODIFY COLUMN fax CHAR(240) AFTER mobile;
ALTER TABLE geo_temp_union MODIFY COLUMN zone CHAR(50) AFTER country;
ALTER TABLE geo_temp_union MODIFY COLUMN langue CHAR(50) AFTER zone;
ALTER TABLE geo_temp_union MODIFY COLUMN organismes longtext AFTER id_original ;

/***********************************************************************************/

/* AJOUT CHAMP long_concat_name */
ALTER TABLE geo_temp_union ADD long_concat_name CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET long_concat_name = LENGTH(concat_name);

/* AJOUT CHAMP long_concat_zip_city */
ALTER TABLE geo_temp_union ADD long_concat_zip_city CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET long_concat_zip_city = LENGTH(concat_zip_city);

/* AJOUT CHAMP long_raison_sociale */
ALTER TABLE geo_temp_union ADD long_raison_sociale CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET long_raison_sociale = LENGTH(raison_sociale);

/* AJOUT CHAMP long_address1 */
ALTER TABLE geo_temp_union ADD long_address1 CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET long_address1 = LENGTH(address1);

/* AJOUT CHAMP long_address2 */
ALTER TABLE geo_temp_union ADD long_address2 CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET long_address2 = LENGTH(address2);

/* AJOUT CHAMP long_address3 */
ALTER TABLE geo_temp_union ADD long_address3 CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET long_address3 = LENGTH(address3);

/* AJOUT CHAMP long_pobox */
ALTER TABLE geo_temp_union ADD long_pobox CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET long_pobox = LENGTH(pobox);

/* AJOUT CHAMP long_city */
ALTER TABLE geo_temp_union ADD long_city CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET long_city = LENGTH(city);

/* AJOUT CHAMP long_state */
ALTER TABLE geo_temp_union ADD long_state CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET long_state = LENGTH(state);

/* AJOUT CHAMP long_country */
ALTER TABLE geo_temp_union ADD long_country CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_union SET long_country = LENGTH(country);

/*============================================= GEO_TEMP_ROUTAGE (TABLE TEMPORAIRE) =============================================*/

/* CREATION D'UNE TABLE JUMELLE DE geo_temp_union MAIS VIDE */
CREATE TABLE geo_temp_routage LIKE geo_temp_union;

/* MODIFICATION DU CHAMP add_uniq POUR DEVENIR UN INDEX UNIQUE */
ALTER TABLE geo_temp_routage MODIFY add_uniq VARCHAR(300) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_routage ADD CONSTRAINT add_uniq_key UNIQUE (add_uniq);



/* INSERTION DES LIGNES BASES PAR BASES AFIN DE DEDOUBLONNER SUR L'ADRESSE UNIQUE */

/* ORGANISME EUROMEDICOM PARTICIPANTS  */
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'SOFT V2' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'SOFT V2' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;

/* ORGANISME NON EUROMEDICOM PARTICIPANTS  */
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'SOFT V2' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'SOFT V2' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;


/* ORGANISME EUROMEDICOM NON PARTICIPANTS */
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'SOFT V2' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'SOFT V2' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;

/* ORGANISME NON EUROMEDICOM NON PARTICIPANTS */
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'SOFT V2' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'SOFT V2' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;


/* PROSPECT */
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'PROSPECT:%2021%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'PROSPECT:%2020%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'PROSPECT:%2019%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'PROSPECT:%2018%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'PROSPECT:%2017%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'PROSPECT:%2016%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'PROSPECT:%2015%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'PROSPECT:%2014%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'PROSPECT:%2013%' ;

/* EXTERN */
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'EXTERN:%2021%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'EXTERN:%2020%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'EXTERN:%2019%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'EXTERN:%2018%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'EXTERN:%2017%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'EXTERN:%2016%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'EXTERN:%2015%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'EXTERN:%2014%' ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_union WHERE source LIKE 'EXTERN:%2013%' ;


/* RECHERCHE ET SUPPRESSION DES ADRRESSES SANS POBOX, SANS SOCIETE ET SANS CHIFFRE DANS L'ADDRESSE */
delete from geo_temp_routage where raison_sociale like '' and pobox like ''
and ( address1 not like '%0%' and address1 not like '%1%' and address1 not like '%2%' and address1 not like '%3%' and address1 not like '%4%' and address1 not like '%5%' and address1 not like '%6%' and address1 not like '%7%' and address1 not like '%8%' and address1 not like '%9%' )
and ( address2 not like '%0%' and address2 not like '%1%' and address2 not like '%2%' and address2 not like '%3%' and address2 not like '%4%' and address2 not like '%5%' and address2 not like '%6%' and address2 not like '%7%' and address2 not like '%8%' and address2 not like '%9%' )
and ( address3 not like '%0%' and address3 not like '%1%' and address3 not like '%2%' and address3 not like '%3%' and address3 not like '%4%' and address3 not like '%5%' and address3 not like '%6%' and address3 not like '%7%' and address3 not like '%8%' and address3 not like '%9%' );

/* SUPPRESSION DES LIGNES NON VALIDES POUR UN ROUTAGE POSTAL */
DELETE FROM geo_temp_routage where long_concat_name > 50 ;
DELETE FROM geo_temp_routage where long_concat_zip_city > 50 ;
DELETE FROM geo_temp_routage where long_raison_sociale > 50 ;
DELETE FROM geo_temp_routage where long_address1 > 50 ;
DELETE FROM geo_temp_routage where long_address2 > 50 ;
DELETE FROM geo_temp_routage where long_address3 > 50 ;
DELETE FROM geo_temp_routage where long_pobox > 50 ;
DELETE FROM geo_temp_routage where long_state > 50 ;
DELETE FROM geo_temp_routage where long_country > 50 ;
DELETE FROM geo_temp_routage where zipcode like 'SUPPRIMER DES ROUTAGES POSTAUX' ;

/* SUPPRESSION DES LIGNES NON VALIDES POUR UN ROUTAGE POSTAL */
DELETE FROM geo_temp_routage WHERE lastname LIKE '' ;
DELETE FROM geo_temp_routage WHERE city LIKE '' ;
DELETE FROM geo_temp_routage WHERE country LIKE '' OR country LIKE 'NSP' OR country LIKE 'OTHER' ;
DELETE FROM geo_temp_routage where pobox like '' and address1 like '' and address2 like '' and address3 like '' ;
DELETE FROM geo_temp_routage where pobox like '' and long_address1 < 6 and address2 like '' and address3 like '' ;
DELETE FROM geo_temp_routage where pobox like '' and address1 like '' and long_address2 < 6 and address3 like '' ;
DELETE FROM geo_temp_routage where pobox like '' and address1 like '' and address2 like '' and long_address3 < 6 ;
DELETE FROM geo_temp_routage where long_city < 3 ;
DELETE FROM geo_temp_routage where long_country < 2 ;

/* SUPPRESSION DES CHAMPS INUTILES POUR UN ROUTAGE POSTAL, OU DEVENUS INUTILES APRES LES SUPPRESSIONS */
ALTER TABLE geo_temp_routage DROP destination ;
ALTER TABLE geo_temp_routage DROP notes ;
ALTER TABLE geo_temp_routage DROP email ;
ALTER TABLE geo_temp_routage DROP email1 ;
ALTER TABLE geo_temp_routage DROP email2 ;
ALTER TABLE geo_temp_routage DROP phone ;
ALTER TABLE geo_temp_routage DROP phone2 ;
ALTER TABLE geo_temp_routage DROP mobile ;
ALTER TABLE geo_temp_routage DROP fax ;
ALTER TABLE geo_temp_routage DROP long_concat_name ;
ALTER TABLE geo_temp_routage DROP long_concat_zip_city ;
ALTER TABLE geo_temp_routage DROP long_raison_sociale ;
ALTER TABLE geo_temp_routage DROP long_address1 ;
ALTER TABLE geo_temp_routage DROP long_address2 ;
ALTER TABLE geo_temp_routage DROP long_address3 ;
ALTER TABLE geo_temp_routage DROP long_pobox ;
ALTER TABLE geo_temp_routage DROP long_city ;
ALTER TABLE geo_temp_routage DROP long_state ;
ALTER TABLE geo_temp_routage DROP long_country ;
ALTER TABLE geo_temp_routage DROP longueur_zipcode ;

/*  SUPRESSION geo_temp_union */
ALTER TABLE geo_temp_union DROP long_concat_name ;
ALTER TABLE geo_temp_union DROP long_concat_zip_city ;
ALTER TABLE geo_temp_union DROP long_raison_sociale ;
ALTER TABLE geo_temp_union DROP long_address1 ;
ALTER TABLE geo_temp_union DROP long_address2 ;
ALTER TABLE geo_temp_union DROP long_address3 ;
ALTER TABLE geo_temp_union DROP long_pobox ;
ALTER TABLE geo_temp_union DROP long_city ;
ALTER TABLE geo_temp_union DROP long_state ;
ALTER TABLE geo_temp_union DROP long_country ;
ALTER TABLE geo_temp_union DROP longueur_zipcode ;

/*======================== MISE A JOUR CHAMP CONCATENATION add_uniq ========================*/

/* ENLEVER L'INDEX SUR add_uniq */
ALTER TABLE geo_temp_routage DROP KEY add_uniq_key ;

UPDATE geo_temp_routage SET add_uniq = CONCAT(address1,pobox,city);
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "   ", "");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "  ", "");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, " ", "");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "   ", "");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "  ", "");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, " ", "");

/* add_uniq CORRECTION PONCTUATION ET SYLLABES A CAUTION */
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "STR", "ST");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "SH", "C");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "CH", "C");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "TH", "T");

/* add_uniq LETTRE EN DOUBLE*/
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "AA", "A");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "ZZ", "Z");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "EE", "E");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "RR", "R");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "TT", "T");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "YY", "Y");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "UU", "U");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "II", "I");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "OO", "O");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "PP", "P");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "QQ", "Q");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "SS", "S");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "DD", "D");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "FF", "F");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "GG", "G");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "HH", "H");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "JJ", "J");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "KK", "K");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "LL", "L");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "MM", "M");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "WW", "W");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "XX", "X");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "CC", "C");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "VV", "V");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "BB", "B");
UPDATE geo_temp_routage SET add_uniq = REPLACE(add_uniq, "NN", "N");

/* add_uniq en minuscule */
UPDATE geo_temp_routage SET add_uniq = LOWER(add_uniq);

/*============================================= GEO_TEMP_RTG =============================================*/

/* CREATION D'UNE TABLE JUMELLE DE geo_temp_routage MAIS VIDE */
CREATE TABLE geo_temp_rtg LIKE geo_temp_routage ;

/* MODIFICATION DU CHAMP add_uniq POUR DEVENIR UN INDEX UNIQUE */
ALTER TABLE geo_temp_rtg ADD CONSTRAINT add_uniq_key UNIQUE (add_uniq);

/* INSERTION DES LIGNES BASES PAR BASES AFIN DE DEDOUBLONNER SUR L'ADRESSE UNIQUE, EN PLUSIEURS PASSAGES, A CHAQUE FOIS EN PRENANT LES LIGNES LES PLUS RICHES EN PREMIER */

/* EUROMEDICOM */
/* 1ER PASSAGE */

INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'EXHIBITOR' AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND address3 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'SPEAKER' AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND address3 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'DELEGATE' AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND address3 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type NOT IN ('EXHIBITOR','SPEAKER','DELEGATE') AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND address3 not like '' AND zipcode not like '');

/* 2EME PASSAGE */

INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'EXHIBITOR' AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'SPEAKER' AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'DELEGATE' AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type NOT IN ('EXHIBITOR','SPEAKER','DELEGATE') AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND zipcode not like '');

/* 3EME PASSAGE */

INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'EXHIBITOR' AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'SPEAKER' AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'DELEGATE' AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type NOT IN ('EXHIBITOR','SPEAKER','DELEGATE') AND organismes like '%EUROMEDICOM%' AND (raison_sociale not like '' AND zipcode not like '');

/* 4EME PASSAGE */

INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'EXHIBITOR' AND organismes like '%EUROMEDICOM%' AND (zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'SPEAKER' AND organismes like '%EUROMEDICOM%' AND (zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'DELEGATE' AND organismes like '%EUROMEDICOM%' AND (zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type NOT IN ('EXHIBITOR','SPEAKER','DELEGATE') AND organismes like '%EUROMEDICOM%' AND (zipcode not like '');

/* 5EME PASSAGE */

INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'EXHIBITOR' AND organismes like '%EUROMEDICOM%' ;
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'SPEAKER' AND organismes like '%EUROMEDICOM%' ;
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'DELEGATE' AND organismes like '%EUROMEDICOM%' ;
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type NOT IN ('EXHIBITOR','SPEAKER','DELEGATE') AND organismes like '%EUROMEDICOM%' ;


/* NON-EUROMEDICOM */
/* 6ER PASSAGE */

INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'EXHIBITOR' AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND address3 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'SPEAKER' AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND address3 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'DELEGATE' AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND address3 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type NOT IN ('EXHIBITOR','SPEAKER','DELEGATE') AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND address3 not like '' AND zipcode not like '');

/* 7EME PASSAGE */

INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'EXHIBITOR' AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'SPEAKER' AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'DELEGATE' AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type NOT IN ('EXHIBITOR','SPEAKER','DELEGATE') AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND address2 not like '' AND zipcode not like '');

/* 8EME PASSAGE */

INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'EXHIBITOR' AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'SPEAKER' AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'DELEGATE' AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type NOT IN ('EXHIBITOR','SPEAKER','DELEGATE') AND organismes NOT LIKE '%EUROMEDICOM%' AND (raison_sociale not like '' AND zipcode not like '');

/* 9EME PASSAGE */

INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'EXHIBITOR' AND organismes NOT LIKE '%EUROMEDICOM%' AND (zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'SPEAKER' AND organismes NOT LIKE '%EUROMEDICOM%' AND (zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'DELEGATE' AND organismes NOT LIKE '%EUROMEDICOM%' AND (zipcode not like '');
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type NOT IN ('EXHIBITOR','SPEAKER','DELEGATE') AND organismes NOT LIKE '%EUROMEDICOM%' AND (zipcode not like '');

/* 10EME PASSAGE */

INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'EXHIBITOR' AND organismes NOT LIKE '%EUROMEDICOM%' ;
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'SPEAKER' AND organismes NOT LIKE '%EUROMEDICOM%' ;
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type = 'DELEGATE' AND organismes NOT LIKE '%EUROMEDICOM%' ;
INSERT IGNORE INTO geo_temp_rtg SELECT * FROM geo_temp_routage WHERE type NOT IN ('EXHIBITOR','SPEAKER','DELEGATE') AND organismes NOT LIKE '%EUROMEDICOM%' ;

/*-------------------------- SUPPRESSION geo_temp_routage --------------------------------*/
DROP TABLE geo_temp_routage ;

/*-------------------------- AJOUT CHAMP rtg --------------------------------*/
ALTER TABLE geo_temp_rtg ADD rtg CHAR(3) CHARACTER SET utf8 NOT NULL;
UPDATE geo_temp_rtg SET rtg = 'Yes';
ALTER TABLE geo_temp_rtg MODIFY COLUMN rtg CHAR(3) AFTER last_manifs ;

/*------------------- EXCLUSION ADRESSE PAR PAYS (GROUP POLICIES) -----------------*/
UPDATE geo_temp_rtg SET rtg = 'No' WHERE country LIKE "IRAN" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE country LIKE "SYRIA" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE country LIKE "NORTH KOREA" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE country LIKE "CUBA" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE country LIKE "SUDAN" ;

/*------------------- EXCLUSION ADRESSE PAR NOMS -----------------*/
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "FREDERIC FORTUIT" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "MATHIEU BORONAD" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "YOHANN CAILLEAU" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "ALEX ISKANDAR" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "MICHAEL GILLNER" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "KATHRIN OERTEL" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "SCHULKE TOBIAS" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "SCHUELKE TOBIAS" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "WOLFF HANNAH" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "DAVY AURORE" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "HELENA BREGAND" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "RAMONA RUSTEMEYER" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "MOUGEL DARIO" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE concat_first_last LIKE "MATHILDE JORGE" ;

/*------------------- EXCLUSION ADRESSE PAR SOCIETES -----------------*/
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "EUROMEDICOM" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "EMC" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "INFORMA" ;

UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "NINETEEN EVENT" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "NINETEEN-EVENT" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "NINETEENEVENT" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "NINETEEN EVENTS" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "NINETEEN-EVENTS" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "NINETEENEVENTS" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "NINETEEN" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "CCR" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "C C R" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "C-C-R" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "TARSUS" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "MCOCONGRES" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "MCO CONGRES" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "MCO-CONGRES" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "MONACO CONGRES" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "MONACOCONGRES" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "MONACO-CONGRES" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "LOGI VENT" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "LOGI-VENT" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "LOGIVENT" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "A4M" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "A 4 M" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "A-4-M" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "VIDEO ART" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "VIDEO-ART" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "VIDEOART" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "%VIDEOART GMBH" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "%VIDEO ART GMBH" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "%VIDEO-ART GMBH" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "ART-MEDIA" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "ART MEDIA" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "ARTMEDIA" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "ZITA-CONGRESS" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "ZITA CONGRESS" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "ZITACONGRESS" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "CQ-TRAVEL" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "CQ TRAVEL" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "CQTRAVEL" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "COMTECMED" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "COM TEC MED" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "COM-TEC-MED" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "%IMCAS%" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "%EASYFAIR%" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "%EASY FAIR%" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "%EASY-FAIR%" ;

UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "NETWAYS" ;
UPDATE geo_temp_rtg SET rtg = 'No' WHERE raison_sociale LIKE "NETWAY" ;


/* ---------------- CREATION NOUVELLE geo_temp_routage POUR FILTRER LES ADRESSES DE FACTURATION ---------------- */

/* CREATION D'UNE TABLE JUMELLE DE geo_temp_rtg MAIS VIDE */
CREATE TABLE geo_temp_routage LIKE geo_temp_rtg ;

/* MODIFICATION DU CHAMP pers_uniq POUR DEVENIR UN INDEX UNIQUE */
ALTER TABLE geo_temp_routage ADD CONSTRAINT pers_uniq UNIQUE (pers_uniq);

/* INSERTION SOFT */
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_rtg WHERE type LIKE 'EXHIBITOR' AND invoice = 0 ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_rtg WHERE type LIKE 'SPEAKER' AND invoice = 0 ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_rtg WHERE type LIKE 'DELEGATE' AND invoice = 0 ;

INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_rtg WHERE type LIKE 'EXHIBITOR' AND invoice = 1 ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_rtg WHERE type LIKE 'SPEAKER' AND invoice = 1 ;
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_rtg WHERE type LIKE 'DELEGATE' AND invoice = 1 ;

/* SUPPRESSION INDEX UNIQUE */
ALTER TABLE geo_temp_routage DROP INDEX pers_uniq ;

/* INSERTION EXTERN ET PROSPECTS */
INSERT IGNORE INTO geo_temp_routage SELECT * FROM geo_temp_rtg WHERE source NOT LIKE 'SOFT V2'  ;

/*-------------------------- SUPPRESSION geo_temp_rtg --------------------------------*/
DROP TABLE geo_temp_rtg ;


/* CREATION ET MAJ CHAMP destination_routage POUR DISTINGUER LES FRANCE-DOMTOM, MONACO ET ANDORRE */
ALTER TABLE geo_temp_routage ADD destination_routage CHAR(50) CHARACTER SET utf8 NOT NULL ;

UPDATE geo_temp_routage SET destination_routage = 'FOREIGNS' ;
UPDATE geo_temp_routage SET destination_routage = 'FRANCE, DOMTOM, MONACO, ANDORRA' WHERE country IN ('FRANCE','MONACO','ANDORRA','REUNION','GUADELOUPE','MARTINIQUE','FRENCH GUIANA','MAYOTTE','SAINT PIERRE AND MIQUELON','SAINT BARTHELEMY','SAINT MARTIN','WALLIS AND FUTUNA','FRENCH POLYNESIA','NEW CALEDONIA') ;

/*============================================= EXTRACTION EMAILS =============================================*/

/* CREATION D'UNE TABLE JUMELLE DE geo_temp_union MAIS SANS LES CHAMPS INUTILES POUR LES IMPORTS EMAILS ET SANS LES EMAILS VIDES */
CREATE TABLE geo_temp_union_email LIKE geo_temp_union;
INSERT IGNORE INTO geo_temp_union_email SELECT * FROM geo_temp_union WHERE email LIKE '%@%' OR  email1 LIKE '%@%' OR  email2 LIKE '%@%' ;

/* SUPPRESSION DES CHAMPS INUTILES POUR LES IMPORTS EMAIL */
ALTER TABLE geo_temp_union_email DROP num_customer ;
ALTER TABLE geo_temp_union_email DROP address1 ;
ALTER TABLE geo_temp_union_email DROP address2 ;
ALTER TABLE geo_temp_union_email DROP address3 ;
ALTER TABLE geo_temp_union_email DROP pobox ;
ALTER TABLE geo_temp_union_email DROP geo_temp_union_email.state ;
ALTER TABLE geo_temp_union_email DROP pers_uniq ;
ALTER TABLE geo_temp_union_email DROP add_uniq ;
ALTER TABLE geo_temp_union_email DROP concat_first_last ;
ALTER TABLE geo_temp_union_email DROP concat_zip_city ;
ALTER TABLE geo_temp_union_email DROP last_part ;

/* MAJ DES ZIPCODES NON-INTEGRES CAR ZIPCODES UTILISES DANS LES IMPORTS EMAIL */
UPDATE geo_temp_union_email SET zipcode = "" WHERE zipcode = "SUPPRIMER DES ROUTAGES POSTAUX" ;

/* CREATION DES 3 TABLES JUMELLES DE geo_temp_union_email VIDES, CHACUNE STOCKANT L'UN DES 3 CHAMPS EMAILS */
CREATE TABLE geo_temp_email LIKE geo_temp_union_email;
CREATE TABLE geo_temp_email1 LIKE geo_temp_union_email;
CREATE TABLE geo_temp_email2 LIKE geo_temp_union_email;

/* ENLEVER LES INDEX SUR cle_id */
ALTER TABLE geo_temp_email MODIFY cle_id CHAR(25) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_email DROP PRIMARY KEY;
ALTER TABLE geo_temp_email1 MODIFY cle_id CHAR(25) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_email1 DROP PRIMARY KEY;
ALTER TABLE geo_temp_email2 MODIFY cle_id CHAR(25) CHARACTER SET utf8 NOT NULL;
ALTER TABLE geo_temp_email2 DROP PRIMARY KEY;

/* SUPPRESSION DES CHAMPS EMAILS EN TROP DANS LES TABLES JUMELLES VIDES */
ALTER TABLE geo_temp_email DROP email1 ; ALTER TABLE geo_temp_email DROP email2 ;
ALTER TABLE geo_temp_email1 DROP email ; ALTER TABLE geo_temp_email1 DROP email2 ;
ALTER TABLE geo_temp_email2 DROP email ; ALTER TABLE geo_temp_email2 DROP email1 ;

/* CREATION DES 3 TABLES JUMELLES DE geo_temp_union_email NON-VIDES, CHACUNE STOCKANT L'UN DES 3 CHAMPS EMAILS */
CREATE TABLE import_email LIKE geo_temp_union_email;
CREATE TABLE import_email1 LIKE geo_temp_union_email;
CREATE TABLE import_email2 LIKE geo_temp_union_email;

INSERT IGNORE INTO import_email SELECT * FROM geo_temp_union_email WHERE email LIKE '%@%' ;
INSERT IGNORE INTO import_email1 SELECT * FROM geo_temp_union_email WHERE email1 LIKE '%@%' ;
INSERT IGNORE INTO import_email2 SELECT * FROM geo_temp_union_email WHERE email2 LIKE '%@%' ;

/*-------------------------- SUPPRESSION TABLE INUTILE --------------------------------*/
DROP TABLE geo_temp_union_email ;

/* SUPPRESSION DES CHAMPS EMAILS EN TROP DANS LES TABLES JUMELLES NON-VIDES */
ALTER TABLE import_email DROP email1 ; ALTER TABLE import_email DROP email2 ;
ALTER TABLE import_email1 DROP email ; ALTER TABLE import_email1 DROP email2 ;
ALTER TABLE import_email2 DROP email ; ALTER TABLE import_email2 DROP email1 ;

/* MODIFICATION DES CHAMPS emailX POUR DEVENIR DES INDEX UNIQUES */
ALTER TABLE geo_temp_email ADD CONSTRAINT email_key UNIQUE (email);
ALTER TABLE geo_temp_email1 ADD CONSTRAINT email1_key UNIQUE (email1);
ALTER TABLE geo_temp_email2 ADD CONSTRAINT email2_key UNIQUE (email2);




/* INSERTION DES LIGNES BASES PAR BASES AFIN DE DEDOUBLONNER SUR L'EMAIL DU PLUS RECENT AU MOINS RECENT DANS LA TABLE geo_temp_email */
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;

INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;

INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'SOFT V2' AND src_detail NOT LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'SOFT V2' AND src_detail NOT LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;


INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'SOFT V2' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'SOFT V2' AND last_manifs LIKE 'None' ;


INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'PROSPECT:%2021%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'PROSPECT:%2020%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'PROSPECT:%2019%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'PROSPECT:%2018%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'PROSPECT:%2017%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'PROSPECT:%2016%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'PROSPECT:%2015%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'PROSPECT:%2014%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'PROSPECT:%2013%' ;

INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'EXTERN:%2021%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'EXTERN:%2020%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'EXTERN:%2019%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'EXTERN:%2018%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'EXTERN:%2017%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'EXTERN:%2016%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'EXTERN:%2015%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'EXTERN:%2014%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM import_email WHERE source LIKE 'EXTERN:%2013%' ;


/* INSERTION DES LIGNES BASES PAR BASES AFIN DE DEDOUBLONNER SUR L'EMAIL DU PLUS RECENT AU MOINS RECENT DANS LA TABLE geo_temp_email1 */
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;

INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;

INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'SOFT V2' AND src_detail NOT LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'SOFT V2' AND src_detail NOT LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;


INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'SOFT V2' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'SOFT V2' AND last_manifs LIKE 'None' ;



INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'PROSPECT:%2021%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'PROSPECT:%2020%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'PROSPECT:%2019%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'PROSPECT:%2018%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'PROSPECT:%2017%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'PROSPECT:%2016%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'PROSPECT:%2015%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'PROSPECT:%2014%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'PROSPECT:%2013%' ;

INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'EXTERN:%2021%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'EXTERN:%2020%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'EXTERN:%2019%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'EXTERN:%2018%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'EXTERN:%2017%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'EXTERN:%2016%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'EXTERN:%2015%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'EXTERN:%2014%' ;
INSERT IGNORE INTO geo_temp_email1 SELECT * FROM import_email1 WHERE source LIKE 'EXTERN:%2013%' ;


/* INSERTION DES LIGNES BASES PAR BASES AFIN DE DEDOUBLONNER SUR L'EMAIL DU PLUS RECENT AU MOINS RECENT DANS LA TABLE geo_temp_email2 */
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;

INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;

INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'SOFT V2' AND src_detail NOT LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'SOFT V2' AND src_detail NOT LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;


INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'SOFT V2' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'SOFT V2' AND last_manifs LIKE 'None' ;


INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'PROSPECT:%2021%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'PROSPECT:%2020%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'PROSPECT:%2019%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'PROSPECT:%2018%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'PROSPECT:%2017%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'PROSPECT:%2016%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'PROSPECT:%2015%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'PROSPECT:%2014%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'PROSPECT:%2013%' ;

INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'EXTERN:%2021%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'EXTERN:%2020%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'EXTERN:%2019%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'EXTERN:%2018%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'EXTERN:%2017%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'EXTERN:%2016%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'EXTERN:%2015%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'EXTERN:%2014%' ;
INSERT IGNORE INTO geo_temp_email2 SELECT * FROM import_email2 WHERE source LIKE 'EXTERN:%2013%' ;

/*-------------------------- SUPPRESSION TABLES INUTILES import_emailx --------------------------------*/
DROP TABLE import_email ; DROP TABLE import_email1 ; DROP TABLE import_email2 ;

/* RENOMMER LES CHAMPS EMAILS 1 et 2 */
ALTER TABLE geo_temp_email1 CHANGE COLUMN email1 email CHAR(225) NOT NULL ;
ALTER TABLE geo_temp_email2 CHANGE COLUMN email2 email CHAR(225) NOT NULL ;

/* INSERTION DES LIGNES DE geo_temp_email1 BASES PAR BASES AFIN DE DEDOUBLONNER SUR L EMAIL DANS LA TABLE geo_temp_email */
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;

INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;

INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'SOFT V2' AND src_detail NOT LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'SOFT V2' AND src_detail NOT LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;


INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'SOFT V2' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'SOFT V2' AND last_manifs LIKE 'None' ;



INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'PROSPECT:%2021%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'PROSPECT:%2020%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'PROSPECT:%2019%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'PROSPECT:%2018%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'PROSPECT:%2017%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'PROSPECT:%2016%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'PROSPECT:%2015%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'PROSPECT:%2014%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'PROSPECT:%2013%' ;

INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'EXTERN:%2021%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'EXTERN:%2020%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'EXTERN:%2019%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'EXTERN:%2018%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'EXTERN:%2017%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'EXTERN:%2016%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'EXTERN:%2015%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'EXTERN:%2014%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email1 WHERE source LIKE 'EXTERN:%2013%' ;


/* INSERTION DES LIGNES DE geo_temp_email2 BASES PAR BASES AFIN DE DEDOUBLONNER SUR L'EMAIL DANS LA TABLE geo_temp_email */ 
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;

INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'SOFT V2' AND src_detail LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs LIKE 'None' ;

INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'SOFT V2' AND src_detail NOT LIKE 'Table customer' AND organismes LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'SOFT V2' AND src_detail NOT LIKE 'Table customer' AND organismes NOT LIKE '%EUROMEDICOM%' AND last_manifs NOT LIKE 'None' ;


INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'SOFT V2' AND last_manifs NOT LIKE 'None' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'SOFT V2' AND last_manifs LIKE 'None' ;




INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'PROSPECT:%2021' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'PROSPECT:%2020%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'PROSPECT:%2019%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'PROSPECT:%2018%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'PROSPECT:%2017%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'PROSPECT:%2016%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'PROSPECT:%2015%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'PROSPECT:%2014%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'PROSPECT:%2013%' ;

INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'EXTERN:%2021%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'EXTERN:%2020%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'EXTERN:%2019%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'EXTERN:%2018%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'EXTERN:%2017%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'EXTERN:%2016%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'EXTERN:%2015%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'EXTERN:%2014%' ;
INSERT IGNORE INTO geo_temp_email SELECT * FROM geo_temp_email2 WHERE source LIKE 'EXTERN:%2013%' ;

/*-------------------------- SUPPRESSION TABLES INUTILES import_emailx --------------------------------*/
DROP TABLE geo_temp_email1 ; DROP TABLE geo_temp_email2 ;

/* Correction des types selon email, pour tous les emails */
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE "doctor%" ;
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE "docteur%" ;
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE 'dr-%' ;
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE 'dr.%' ;
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE 'dr\_%' ;
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE 'doc-%' ;
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE 'doc.%' ;
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE 'doc\_%' ;
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE 'dra-%' ;
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE 'dra.%' ;
UPDATE geo_temp_email SET type = "DELEGATE" WHERE type LIKE 'EXHIBITOR' AND email LIKE 'dra\_%' ;

/* SUPPRESSION CHAMP INUTILE ET MODIFICATION CHAMP */
ALTER TABLE geo_temp_email MODIFY id_original CHAR(25) CHARACTER SET utf8 NOT NULL;

/* DEPLACEMENT DE CHAMPS */
ALTER TABLE geo_temp_email MODIFY COLUMN zone CHAR(50) AFTER source;
ALTER TABLE geo_temp_email MODIFY COLUMN country CHAR(225) AFTER zone;
ALTER TABLE geo_temp_email MODIFY COLUMN langue CHAR(100) AFTER type;
ALTER TABLE geo_temp_email MODIFY COLUMN concat_name CHAR(240) AFTER raison_sociale;
ALTER TABLE geo_temp_email MODIFY COLUMN email CHAR(225) AFTER concat_name;



/* MISE A JOUR DU CHAMP last_manifs APRES DEDOUBLONNAGE DES EMAILS */
/*---------- DERNIERE PARTICIPATION PAR CONGRES ET TYPOLOGIE ---------*/

/*---- CREATION TABLE TEMPORAIRE temp_last_commande_manifestation_email ----*/
CREATE TABLE temp_last_commande_manifestation_email AS
SELECT customer.email, commande.type_profil, commande_list.is_stand_option, commande_list.is_package, commande_list.is_expo, commande_list.mod_speaker, commande_list.mod_poster, commande_list.name_pass, commande_list.name_stand, manifestation.original_title, YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM commande
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation AND DUE_TTC <= 0.00
INNER JOIN customer ON commande.id_customer = customer.id_customer
LEFT JOIN commande_list ON commande.id_commande = commande_list.id_commande
WHERE customer.email NOT LIKE '' ;

/*---- INSERTION customer email1 ----*/
INSERT INTO temp_last_commande_manifestation_email (email, type_profil, is_stand_option, is_package, is_expo, mod_speaker, mod_poster, name_pass, name_stand, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT customer.email1, commande.type_profil, commande_list.is_stand_option, commande_list.is_package, commande_list.is_expo, mod_speaker, mod_poster, commande_list.name_pass, commande_list.name_stand, manifestation.original_title, YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM commande
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation AND DUE_TTC <= 0.00
INNER JOIN customer ON commande.id_customer = customer.id_customer
LEFT JOIN commande_list ON commande.id_commande = commande_list.id_commande
WHERE customer.email1 NOT LIKE '' ;

/*---- INSERTION customer email2 ----*/
INSERT INTO temp_last_commande_manifestation_email (email, type_profil, is_stand_option, is_package, is_expo, mod_speaker, mod_poster, name_pass, name_stand, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT customer.email2, commande.type_profil, commande_list.is_stand_option, commande_list.is_package, commande_list.is_expo, mod_speaker, mod_poster, commande_list.name_pass, commande_list.name_stand, manifestation.original_title, YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM commande
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation AND DUE_TTC <= 0.00
INNER JOIN customer ON commande.id_customer = customer.id_customer
LEFT JOIN commande_list ON commande.id_commande = commande_list.id_commande
WHERE customer.email2 NOT LIKE '' ;

/*---- INSERTION commande email_badge ----*/
INSERT INTO temp_last_commande_manifestation_email (email, type_profil, is_stand_option, is_package, is_expo, mod_speaker, mod_poster, name_pass, name_stand, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT commande.email_badge, commande.type_profil, commande_list.is_stand_option, commande_list.is_package, commande_list.is_expo, mod_speaker, mod_poster, commande_list.name_pass, commande_list.name_stand, manifestation.original_title, YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM commande
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation AND DUE_TTC <= 0.00
LEFT JOIN commande_list ON commande.id_commande = commande_list.id_commande
WHERE commande.email_badge NOT LIKE '' ;

/*---- INSERTION commande email1_badge ----*/
INSERT INTO temp_last_commande_manifestation_email (email, type_profil, is_stand_option, is_package, is_expo, mod_speaker, mod_poster, name_pass, name_stand, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT commande.email1_badge, commande.type_profil, commande_list.is_stand_option, commande_list.is_package, commande_list.is_expo, mod_speaker, mod_poster, commande_list.name_pass, commande_list.name_stand, manifestation.original_title, YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM commande
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation AND DUE_TTC <= 0.00
LEFT JOIN commande_list ON commande.id_commande = commande_list.id_commande
WHERE commande.email1_badge NOT LIKE '' ;

/*---- INSERTION commande email2_badge ----*/
INSERT INTO temp_last_commande_manifestation_email (email, type_profil, is_stand_option, is_package, is_expo, mod_speaker, mod_poster, name_pass, name_stand, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT commande.email2_badge, commande.type_profil, commande_list.is_stand_option, commande_list.is_package, commande_list.is_expo, mod_speaker, mod_poster, commande_list.name_pass, commande_list.name_stand, manifestation.original_title, YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM commande
INNER JOIN manifestation ON commande.id_manifestation = manifestation.id_manifestation AND DUE_TTC <= 0.00
LEFT JOIN commande_list ON commande.id_commande = commande_list.id_commande
WHERE commande.email2_badge NOT LIKE '' ;



/*---- CHAMP TYPOLOGIE TYPE DE PASSE ----*/
ALTER TABLE temp_last_commande_manifestation_email ADD pass_typology CHAR(25) CHARACTER SET utf8 NOT NULL ;
ALTER TABLE temp_last_commande_manifestation_email MODIFY COLUMN pass_typology CHAR(25) AFTER type_profil ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = type_profil ;
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN type_profil ;

UPDATE temp_last_commande_manifestation_email SET pass_typology = 'DELEGATE' WHERE pass_typology LIKE '0' AND name_stand NOT LIKE '%STAFF%' ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'DELEGATE' WHERE pass_typology LIKE '1' ;

UPDATE temp_last_commande_manifestation_email SET pass_typology = 'SPEAKER' WHERE pass_typology LIKE '2' ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'DELEGATE GUEST' WHERE pass_typology LIKE '4' ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'PRESS' WHERE pass_typology LIKE '5' ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'EXHIBITOR GUEST' WHERE pass_typology LIKE '6' ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'SPEAKER GUEST' WHERE pass_typology LIKE '10' ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'INFORMA' WHERE pass_typology LIKE '11' ;

UPDATE temp_last_commande_manifestation_email SET pass_typology = 'DELEGATE' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND name_pass LIKE '%DELEGATE%' ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'DELEGATE' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND name_pass LIKE '%CONFERENCE%' ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'VISITOR' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND name_pass LIKE '%VISITOR%' ;

UPDATE temp_last_commande_manifestation_email SET pass_typology = 'EXHIBITOR' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND is_stand_option = 1 ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'EXHIBITOR' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND is_package = 1 ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'EXHIBITOR' WHERE pass_typology NOT IN ('0', '1', '2', '4', '5', '6', '10', '11') AND is_expo = 1 ;

UPDATE temp_last_commande_manifestation_email SET pass_typology = 'STAFF' WHERE pass_typology LIKE '0' AND name_stand LIKE '%STAFF%' ;
UPDATE temp_last_commande_manifestation_email SET pass_typology = 'STAFF' WHERE name_pass LIKE '%STAFF%' ;


/*---- SUPPRESSION COLONNE INUTILES AVANT INSERTIONS SUIVANTES ----*/
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN is_stand_option ;
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN is_package  ;
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN is_expo  ;
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN name_pass ;
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN name_stand ;
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN mod_speaker ;
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN mod_poster ;


/*---- INSERTIONS email DES PARTICIPATIONS EXHIBITOR GUEST DANS temp_last_commande_manifestation_email ----*/
INSERT INTO temp_last_commande_manifestation_email (email, pass_typology, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT customer.email, 'EXHIBITOR GUEST', manifestation.original_title,
YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM customer_guest_labo
INNER JOIN commande ON customer_guest_labo.id_commande = commande.id_commande AND DUE_TTC <= 0.00
INNER JOIN customer ON customer_guest_labo.id_customer = customer.id_customer
INNER JOIN manifestation ON customer_guest_labo.id_manifestation = manifestation.id_manifestation
WHERE customer.email NOT LIKE '' ;


/*---- INSERTIONS email1 DES PARTICIPATIONS EXHIBITOR GUEST DANS temp_last_commande_manifestation_email ----*/
INSERT INTO temp_last_commande_manifestation_email (email, pass_typology, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT customer.email1, 'EXHIBITOR GUEST', manifestation.original_title,
YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM customer_guest_labo
INNER JOIN commande ON customer_guest_labo.id_commande = commande.id_commande AND DUE_TTC <= 0.00
INNER JOIN customer ON customer_guest_labo.id_customer = customer.id_customer
INNER JOIN manifestation ON customer_guest_labo.id_manifestation = manifestation.id_manifestation
WHERE customer.email1 NOT LIKE '' ;


/*---- INSERTIONS email2 DES PARTICIPATIONS EXHIBITOR GUEST DANS temp_last_commande_manifestation_email ----*/
INSERT INTO temp_last_commande_manifestation_email (email, pass_typology, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT customer.email2, 'EXHIBITOR GUEST', manifestation.original_title,
YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM customer_guest_labo
INNER JOIN commande ON customer_guest_labo.id_commande = commande.id_commande AND DUE_TTC <= 0.00
INNER JOIN customer ON customer_guest_labo.id_customer = customer.id_customer
INNER JOIN manifestation ON customer_guest_labo.id_manifestation = manifestation.id_manifestation
WHERE customer.email2 NOT LIKE '' ;


/*---- INSERTIONS DES PARTICIPATIONS STAFF temp_last_commande_manifestation_email ----*/
INSERT INTO temp_last_commande_manifestation_email (email, pass_typology, original_title, date_year, MONTANT_TTC, DUE_TTC) 
SELECT customer_labo.email, 'STAFF', manifestation.original_title,
YEAR(manifestation.date_begin) as date_year, commande.MONTANT_TTC, commande.DUE_TTC
FROM customer_labo
INNER JOIN commande ON customer_labo.id_commande = commande.id_commande AND DUE_TTC <= 0.00
INNER JOIN manifestation ON customer_labo.id_manifestation = manifestation.id_manifestation ;


/*--------------------- HARMONISATION DU CHAMP original_title -------------------------*/
UPDATE temp_last_commande_manifestation_email SET original_title = REPLACE(original_title, "&amp;" , "AND") ;
UPDATE temp_last_commande_manifestation_email SET original_title = REPLACE(original_title, "&#039;" , " " ) ;
UPDATE temp_last_commande_manifestation_email SET original_title = REPLACE(original_title, " (D)" , "" ) ;
UPDATE temp_last_commande_manifestation_email SET original_title = REPLACE(original_title, " (PT)" , "" ) ;
UPDATE temp_last_commande_manifestation_email SET original_title = REPLACE(original_title, " (G)" , "" ) ;

UPDATE temp_last_commande_manifestation_email SET original_title = 'MCA 2018' WHERE original_title LIKE 'LIVE AND PRACTICAL INTERNATIONAL SYMPOSIUM' ;
UPDATE temp_last_commande_manifestation_email SET original_title = 'AMWC 2018' WHERE original_title LIKE 'AMWC MONACO HOTELS' ;
UPDATE temp_last_commande_manifestation_email SET original_title = 'EUROGIN 2018' WHERE original_title LIKE 'EUROGIN LISBON HOTELS' ;

UPDATE temp_last_commande_manifestation_email SET original_title = 'WAVE' WHERE original_title LIKE 'WAVE 20%' ;



/*---- DEDOUBLONNAGE temp_last_commande_manifestation_email ----*/
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN MONTANT_TTC ;
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN DUE_TTC ;

CREATE TABLE temp_last_commande_manifestation_email_temp LIKE temp_last_commande_manifestation_email;
INSERT INTO temp_last_commande_manifestation_email_temp SELECT DISTINCT * FROM temp_last_commande_manifestation_email ;
DROP TABLE temp_last_commande_manifestation_email ;
RENAME TABLE temp_last_commande_manifestation_email_temp TO temp_last_commande_manifestation_email ;



/*---- CONCATENATION DES MANIFESTATIONS ET DU TYPE DE PASS ----*/
ALTER TABLE temp_last_commande_manifestation_email ADD original_title_complete CHAR(255) ;
ALTER TABLE temp_last_commande_manifestation_email MODIFY COLUMN original_title_complete CHAR(255) AFTER email ;
UPDATE temp_last_commande_manifestation_email SET original_title_complete = CONCAT (original_title, ' (', pass_typology, ')') ;
ALTER TABLE temp_last_commande_manifestation_email DROP COLUMN original_title ;
ALTER TABLE temp_last_commande_manifestation_email CHANGE original_title_complete original_title CHAR(255) ;



/*---- CONCATENATION DES PARTICIPANTS PAR EMAILS ----*/
CREATE TABLE temp_last_concat_manifs_email AS
SELECT email, GROUP_CONCAT(distinct original_title ORDER BY date_year DESC separator ', ') as manifs, MAX(date_year) as last_year, count(email) as nbr_manif
FROM temp_last_commande_manifestation_email
GROUP BY email ;

/* AJOUT CHAMP CLE PRIMAIRE */
ALTER TABLE temp_last_concat_manifs_email ADD PRIMARY KEY (email) ;
/*-----------------------------------------------------*/

/*---- MAJ CHAMP last_manifs PAR email ----*/
UPDATE geo_temp_email, temp_last_concat_manifs_email
SET geo_temp_email.last_manifs = temp_last_concat_manifs_email.manifs WHERE geo_temp_email.email = temp_last_concat_manifs_email.email ;


/*-------------------------------- FIN DERNIERE PARTICIPATION PAR CONGRES -------------------------------*/



/*------------------- Traitement des champs civility, firstname et lastname dans geo_temp_email, pour le BAU template Eloqua ----------------------*/

/* civility */
UPDATE geo_temp_email SET civility = CONCAT(' ',civility);
UPDATE geo_temp_email SET civility = LOWER(civility);

UPDATE geo_temp_email SET civility = REPLACE(civility, " a", " A");
UPDATE geo_temp_email SET civility = REPLACE(civility, " z", " Z");
UPDATE geo_temp_email SET civility = REPLACE(civility, " e", " E");
UPDATE geo_temp_email SET civility = REPLACE(civility, " r", " R");
UPDATE geo_temp_email SET civility = REPLACE(civility, " t", " T");
UPDATE geo_temp_email SET civility = REPLACE(civility, " y", " Y");
UPDATE geo_temp_email SET civility = REPLACE(civility, " u", " U");
UPDATE geo_temp_email SET civility = REPLACE(civility, " i", " I");
UPDATE geo_temp_email SET civility = REPLACE(civility, " o", " O");
UPDATE geo_temp_email SET civility = REPLACE(civility, " p", " P");
UPDATE geo_temp_email SET civility = REPLACE(civility, " q", " Q");
UPDATE geo_temp_email SET civility = REPLACE(civility, " s", " S");
UPDATE geo_temp_email SET civility = REPLACE(civility, " d", " D");
UPDATE geo_temp_email SET civility = REPLACE(civility, " f", " F");
UPDATE geo_temp_email SET civility = REPLACE(civility, " g", " G");
UPDATE geo_temp_email SET civility = REPLACE(civility, " h", " H");
UPDATE geo_temp_email SET civility = REPLACE(civility, " j", " J");
UPDATE geo_temp_email SET civility = REPLACE(civility, " k", " K");
UPDATE geo_temp_email SET civility = REPLACE(civility, " l", " L");
UPDATE geo_temp_email SET civility = REPLACE(civility, " m", " M");
UPDATE geo_temp_email SET civility = REPLACE(civility, " w", " W");
UPDATE geo_temp_email SET civility = REPLACE(civility, " x", " X");
UPDATE geo_temp_email SET civility = REPLACE(civility, " c", " C");
UPDATE geo_temp_email SET civility = REPLACE(civility, " v", " V");
UPDATE geo_temp_email SET civility = REPLACE(civility, " b", " B");
UPDATE geo_temp_email SET civility = REPLACE(civility, " n", " N");

UPDATE geo_temp_email SET civility = REPLACE(civility, "  ", " ");
UPDATE geo_temp_email SET civility = SUBSTR(civility, 2 );


/* firstname */
UPDATE geo_temp_email SET firstname = CONCAT(' ',firstname);
UPDATE geo_temp_email SET firstname = LOWER(firstname);

UPDATE geo_temp_email SET firstname = REPLACE(firstname, " a", " A");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " z", " Z");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " e", " E");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " r", " R");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " t", " T");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " y", " Y");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " u", " U");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " i", " I");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " o", " O");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " p", " P");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " q", " Q");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " s", " S");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " d", " D");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " f", " F");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " g", " G");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " h", " H");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " j", " J");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " k", " K");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " l", " L");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " m", " M");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " w", " W");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " x", " X");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " c", " C");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " v", " V");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " b", " B");
UPDATE geo_temp_email SET firstname = REPLACE(firstname, " n", " N");

UPDATE geo_temp_email SET firstname = REPLACE(firstname, "  ", " ");
UPDATE geo_temp_email SET firstname = SUBSTR(firstname, 2 );


/* lastname */
UPDATE geo_temp_email SET lastname = CONCAT(' ',lastname);
UPDATE geo_temp_email SET lastname = LOWER(lastname);

UPDATE geo_temp_email SET lastname = REPLACE(lastname, " a", " A");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " z", " Z");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " e", " E");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " r", " R");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " t", " T");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " y", " Y");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " u", " U");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " i", " I");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " o", " O");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " p", " P");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " q", " Q");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " s", " S");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " d", " D");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " f", " F");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " g", " G");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " h", " H");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " j", " J");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " k", " K");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " l", " L");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " m", " M");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " w", " W");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " x", " X");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " c", " C");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " v", " V");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " b", " B");
UPDATE geo_temp_email SET lastname = REPLACE(lastname, " n", " N");

UPDATE geo_temp_email SET lastname = REPLACE(lastname, "  ", " ");
UPDATE geo_temp_email SET lastname = SUBSTR(lastname, 2 );


/*------------------- FIN Traitement des champs civility, firstname et lastname dans geo_temp_email ----------------------*/



/*-------------------  Traitement speciality dans geo_temp_email ----------------------*/

UPDATE geo_temp_email SET speciality = REPLACE(speciality, "&amp;", "&");
UPDATE geo_temp_email SET speciality = REPLACE(speciality, "&AMP;", "&");
UPDATE geo_temp_email SET speciality = REPLACE(speciality, " and ", " & ");
UPDATE geo_temp_email SET speciality = REPLACE(speciality, " AND ", " & ");

/*------------------- Traitement speciality dans geo_temp_email ----------------------*/



/*--------------------- INTEGRATION DES CONSENTEMENTS DE LA TABLE customer_approval -------------------------*/

/* CREATION ET REMPLISSAGE DES CHAMPS PAR DEFAUT  */

/* INFORMA MONACO S.A.M  (CWS) */
ALTER TABLE geo_temp_email ADD inf_mon_sam_accept_nws TINYINT(1) ;
UPDATE geo_temp_email SET inf_mon_sam_accept_nws = 1 ;

/* VEGAS COSMETIC SURGERY */
ALTER TABLE geo_temp_email ADD vcs_accept_nws TINYINT(1) ;
UPDATE geo_temp_email SET vcs_accept_nws = 1 ;

/* MIAMI COSMETIC SURGERY */
ALTER TABLE geo_temp_email ADD mcs_accept_nws TINYINT(1) ;
UPDATE geo_temp_email SET mcs_accept_nws = 1 ;

/* EUROVIR */
ALTER TABLE geo_temp_email ADD eurovir_accept_nws TINYINT(1) ;
UPDATE geo_temp_email SET eurovir_accept_nws = 1 ;



/* INFORMA MONACO S.A.M  (CWS) PARTNER */
ALTER TABLE geo_temp_email ADD cws_partner_accept TINYINT(1) ;
UPDATE geo_temp_email SET cws_partner_accept = 1 ;

/* VEGAS COSMETIC SURGERY PARTNER */
ALTER TABLE geo_temp_email ADD vcs_partner_accept TINYINT(1) ;
UPDATE geo_temp_email SET vcs_partner_accept = 1 ;

/* MIAMI COSMETIC SURGERY PARTNER */
ALTER TABLE geo_temp_email ADD mcs_partner_accept TINYINT(1) ;
UPDATE geo_temp_email SET mcs_partner_accept = 1 ;

/* EUROVIR PARTNER */
ALTER TABLE geo_temp_email ADD eurovir_partner_accept TINYINT(1) ;
UPDATE geo_temp_email SET eurovir_partner_accept = 1 ;



/* REMPLISSAGE DES CHAMPS DE TOUS LES ORGANISMES EN FONCTION DE LA TABLE customer_approval */

/* INFORMA MONACO S.A.M */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.inf_mon_sam_accept_nws = 0 ;


/* VEGAS COSMETIC SURGERY - VCS */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.vcs_accept_nws = 0 ;


/* MIAMI COSMETIC SURGERY - MCS - IN22 */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.mcs_accept_nws = 0 ;


/* EUROVIR */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_euromedicom = 0
SET geo_temp_email.eurovir_accept_nws = 0 ;


/* LES PARTNER */

/* INFORMA MONACO S.A.M PARTNER */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 2 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.cws_partner_accept = 0 ;


/* VCS PARTNER */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 6 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.vcs_partner_accept = 0 ;


/* MCS PARTNER */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 12 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.mcs_partner_accept = 0 ;


/* EUROVIR PARTNER */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 9 AND customer_approval.newsletter_partner = 0
SET geo_temp_email.eurovir_partner_accept = 0 ;


/* PREFERENCE DE DEVICES */

/* emc */
ALTER TABLE geo_temp_email ADD pref_email_emc TINYINT(1) ;
UPDATE geo_temp_email SET pref_email_emc = 1 ;

ALTER TABLE geo_temp_email ADD pref_phone_emc TINYINT(1) ;
UPDATE geo_temp_email SET pref_phone_emc = 1 ;

ALTER TABLE geo_temp_email ADD pref_post_emc TINYINT(1) ;
UPDATE geo_temp_email SET pref_post_emc = 1 ;

ALTER TABLE geo_temp_email ADD pref_sms_emc TINYINT(1) ;
UPDATE geo_temp_email SET pref_sms_emc = 1 ;


/* inf_mon_sam */
ALTER TABLE geo_temp_email ADD pref_email_inf_mon_sam TINYINT(1) ;
UPDATE geo_temp_email SET pref_email_inf_mon_sam = 1 ;

ALTER TABLE geo_temp_email ADD pref_phone_inf_mon_sam TINYINT(1) ;
UPDATE geo_temp_email SET pref_phone_inf_mon_sam = 1 ;

ALTER TABLE geo_temp_email ADD pref_post_inf_mon_sam TINYINT(1) ;
UPDATE geo_temp_email SET pref_post_inf_mon_sam = 1 ;

ALTER TABLE geo_temp_email ADD pref_sms_inf_mon_sam TINYINT(1) ;
UPDATE geo_temp_email SET pref_sms_inf_mon_sam = 1 ;


/* vcs */
ALTER TABLE geo_temp_email ADD pref_email_vcs TINYINT(1) ;
UPDATE geo_temp_email SET pref_email_vcs = 1 ;

ALTER TABLE geo_temp_email ADD pref_phone_vcs TINYINT(1) ;
UPDATE geo_temp_email SET pref_phone_vcs = 1 ;

ALTER TABLE geo_temp_email ADD pref_post_vcs TINYINT(1) ;
UPDATE geo_temp_email SET pref_post_vcs = 1 ;

ALTER TABLE geo_temp_email ADD pref_sms_vcs TINYINT(1) ;
UPDATE geo_temp_email SET pref_sms_vcs = 1 ;


/* mcs */
ALTER TABLE geo_temp_email ADD pref_email_mcs TINYINT(1) ;
UPDATE geo_temp_email SET pref_email_mcs = 1 ;

ALTER TABLE geo_temp_email ADD pref_phone_mcs TINYINT(1) ;
UPDATE geo_temp_email SET pref_phone_mcs = 1 ;

ALTER TABLE geo_temp_email ADD pref_post_mcs TINYINT(1) ;
UPDATE geo_temp_email SET pref_post_mcs = 1 ;

ALTER TABLE geo_temp_email ADD pref_sms_mcs TINYINT(1) ;
UPDATE geo_temp_email SET pref_sms_mcs = 1 ;


/* eurovir */
ALTER TABLE geo_temp_email ADD pref_email_eurovir TINYINT(1) ;
UPDATE geo_temp_email SET pref_email_eurovir = 1 ;

ALTER TABLE geo_temp_email ADD pref_phone_eurovir TINYINT(1) ;
UPDATE geo_temp_email SET pref_phone_eurovir = 1 ;

ALTER TABLE geo_temp_email ADD pref_post_eurovir TINYINT(1) ;
UPDATE geo_temp_email SET pref_post_eurovir = 1 ;

ALTER TABLE geo_temp_email ADD pref_sms_eurovir TINYINT(1) ;
UPDATE geo_temp_email SET pref_sms_eurovir = 1 ;


/* REMPLISSAGE DES PREFERENCES TOUS LES ORGANISMES EN FONCTION DE LA TABLE customer_approval */

/* pref_email_emc */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 1 AND customer_approval.email = 0
SET geo_temp_email.pref_email_emc = 0 ;


/* pref_phone_emc */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 1 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_emc = 0 ;


/* pref_post_emc */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 1 AND customer_approval.post = 0
SET geo_temp_email.pref_post_emc = 0 ;


/* pref_sms_emc */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 1 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_emc = 0 ;


/* pref_email_inf_mon_sam */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 2 AND customer_approval.email = 0
SET geo_temp_email.pref_email_inf_mon_sam = 0 ;


/* pref_phone_inf_mon_sam */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 2 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_inf_mon_sam = 0 ;


/* pref_post_inf_mon_sam */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 2 AND customer_approval.post = 0
SET geo_temp_email.pref_post_inf_mon_sam = 0 ;


/* pref_sms_inf_mon_sam */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 2 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_inf_mon_sam = 0 ;


/* pref_email_vcs */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 6 AND customer_approval.email = 0
SET geo_temp_email.pref_email_vcs = 0 ;


/* pref_phone_vcs */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 6 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_vcs = 0 ;


/* pref_post_vcs */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 6 AND customer_approval.post = 0
SET geo_temp_email.pref_post_vcs = 0 ;

/* pref_sms_vcs */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 6 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_vcs = 0 ;


/* pref_email_mcs */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 12 AND customer_approval.email = 0
SET geo_temp_email.pref_email_mcs = 0 ;


/* pref_phone_mcs */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 12 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_mcs = 0 ;


/* pref_post_mcs */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 12 AND customer_approval.post = 0
SET geo_temp_email.pref_post_mcs = 0 ;


/* pref_sms_mcs */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 12 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_mcs = 0 ;


/* pref_email_eurovir */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 9 AND customer_approval.email = 0
SET geo_temp_email.pref_email_eurovir = 0 ;


/* pref_phone_eurovir */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 9 AND customer_approval.phone = 0
SET geo_temp_email.pref_phone_eurovir = 0 ;


/* pref_post_eurovir */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 9 AND customer_approval.post = 0
SET geo_temp_email.pref_post_eurovir = 0 ;


/* pref_sms_eurovir */
UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 0 AND geo_temp_email.id_original <= 5000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 5000 AND geo_temp_email.id_original <= 10000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 10000 AND geo_temp_email.id_original <= 15000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 15000 AND geo_temp_email.id_original <= 20000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 20000 AND geo_temp_email.id_original <= 25000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 25000 AND geo_temp_email.id_original <= 30000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 30000 AND geo_temp_email.id_original <= 35000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 35000 AND geo_temp_email.id_original <= 40000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 40000 AND geo_temp_email.id_original <= 45000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 45000 AND geo_temp_email.id_original <= 50000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 50000 AND geo_temp_email.id_original <= 55000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 55000 AND geo_temp_email.id_original <= 60000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 60000 AND geo_temp_email.id_original <= 65000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 65000 AND geo_temp_email.id_original <= 70000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 70000 AND geo_temp_email.id_original <= 75000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 75000 AND geo_temp_email.id_original <= 80000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 80000 AND geo_temp_email.id_original <= 85000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 85000 AND geo_temp_email.id_original <= 90000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 90000 AND geo_temp_email.id_original <= 95000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 95000 AND geo_temp_email.id_original <= 100000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 100000 AND geo_temp_email.id_original <= 105000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 105000 AND geo_temp_email.id_original <= 110000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 110000 AND geo_temp_email.id_original <= 115000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 115000 AND geo_temp_email.id_original <= 120000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 120000 AND geo_temp_email.id_original <= 125000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 125000 AND geo_temp_email.id_original <= 130000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 130000 AND geo_temp_email.id_original <= 135000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 135000 AND geo_temp_email.id_original <= 140000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 140000 AND geo_temp_email.id_original <= 145000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 145000 AND geo_temp_email.id_original <= 150000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

UPDATE geo_temp_email INNER JOIN customer_approval ON geo_temp_email.id_original = customer_approval.id_customer 
AND geo_temp_email.src_detail LIKE 'Table customer' 
AND (geo_temp_email.id_original > 150000 AND geo_temp_email.id_original <= 155000 )
AND customer_approval.id_organisme = 9 AND customer_approval.sms = 0
SET geo_temp_email.pref_sms_eurovir = 0 ;

/* FIN PREFERENCE DE DEVICES */


/*------- CREATION DE CHAMPS EQUIVALENTS DES CONSENTEMENTS POUR LE BAU TEMPLATE GROUPE INFORMA -------*/

/* EVENEMENT AMWC */
ALTER TABLE geo_temp_email ADD MarketingOptIn_AMWC VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_AMWC = 'CR_OPTIN' ;

/* EVENEMENT AMWC VIRTUAL */
ALTER TABLE geo_temp_email ADD MarketingOptIn_AMWC_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_AMWC_VIRTUAL = 'CR_OPTIN' ;

/* EVENEMENT AMWC ASIA */
ALTER TABLE geo_temp_email ADD MarketingOptIn_AMWC_ASIA VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_AMWC_ASIA = 'CR_OPTIN' ;

/* EVENEMENT AMWC CHINA */
ALTER TABLE geo_temp_email ADD MarketingOptIn_AMWC_CHINA VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_AMWC_CHINA = 'CR_OPTIN' ;

/* EVENEMENT AMS */
ALTER TABLE geo_temp_email ADD MarketingOptIn_AMS VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_AMS = 'CR_OPTIN' ;

/* EVENEMENT FACE */
ALTER TABLE geo_temp_email ADD MarketingOptIn_FACE VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_FACE = 'CR_OPTIN' ;

/* EVENEMENT FACE ASEAN */
ALTER TABLE geo_temp_email ADD MarketingOptIn_FACE_ASEAN VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_FACE_ASEAN = 'CR_OPTIN' ;

/* EVENEMENT ICAD BKK */
ALTER TABLE geo_temp_email ADD MarketingOptIn_ICAD_BKK VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_ICAD_BKK = 'CR_OPTIN' ;

/* EVENEMENT VCS */
ALTER TABLE geo_temp_email ADD MarketingOptIn_VCS VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_VCS = 'CR_OPTIN' ;
UPDATE geo_temp_email SET MarketingOptIn_VCS = 'CR_OPTOUT' WHERE vcs_accept_nws = 0 ;

/* EVENEMENT VCS VIRTUAL */
ALTER TABLE geo_temp_email ADD MarketingOptIn_VCS_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_VCS_VIRTUAL = 'CR_OPTIN' ;

/* EVENEMENT MCS */
ALTER TABLE geo_temp_email ADD MarketingOptIn_MCS VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_MCS = 'CR_OPTIN' ;
UPDATE geo_temp_email SET MarketingOptIn_MCS = 'CR_OPTOUT' WHERE mcs_accept_nws = 0 ;

/* EVENEMENT TAS */
ALTER TABLE geo_temp_email ADD MarketingOptIn_TAS VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_TAS = 'CR_OPTIN' ;

/* EVENEMENT EUROGIN */
ALTER TABLE geo_temp_email ADD MarketingOptIn_GYN VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_GYN = 'CR_OPTIN' ;
UPDATE geo_temp_email SET MarketingOptIn_GYN = 'CR_OPTOUT' WHERE eurovir_accept_nws = 0 ;

/* EVENEMENT CWS */ 
ALTER TABLE geo_temp_email ADD MarketingOptIn_CWS VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptIn_CWS = 'CR_OPTIN' ;
UPDATE geo_temp_email SET MarketingOptIn_CWS = 'CR_OPTOUT' WHERE inf_mon_sam_accept_nws = 0 ;

/*------- FIN CREATION DE CHAMPS EQUIVALENTS DES CONSENTEMENTS POUR LE BAU TEMPLATE GROUPE INFORMA -------*/


/*------- CREATION DE CHAMPS EQUIVALENTS DES CONSENTEMENTS 3RD PARTY POUR LE BAU TEMPLATE GROUPE INFORMA -------*/

/* AMWC THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_AMWC VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_AMWC = '3PS_OPTIN' ;

/* AMWC VIRTUAL THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_AMWC_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_AMWC_VIRTUAL = '3PS_OPTIN' ;

/* AMWC ASIA THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_AMWC_ASIA VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_AMWC_ASIA = '3PS_OPTIN' ;

/* AMWC CHINA THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_AMWC_CHINA VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_AMWC_CHINA = '3PS_OPTIN' ;

/* AMS THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_AMS VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_AMS = '3PS_OPTIN' ;

/* FACE THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_FACE VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_FACE = '3PS_OPTIN' ;

/* FACE ASEAN THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_FACE_ASEAN VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_FACE_ASEAN = '3PS_OPTIN' ;

/* ICAD BKK THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_ICAD_BKK VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_ICAD_BKK = '3PS_OPTIN' ;

/* CWS THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_CWS VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_CWS = '3PS_OPTIN' ;
UPDATE geo_temp_email SET ThirdpartyOptIn_CWS = '3PS_OPTOUT' WHERE cws_partner_accept = 0 ;

/* VCS THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_VCS VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_VCS = '3PS_OPTIN' ;
UPDATE geo_temp_email SET ThirdpartyOptIn_VCS = '3PS_OPTOUT' WHERE vcs_partner_accept = 0 ;

/* VCS VIRTUAL THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_VCS_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_VCS_VIRTUAL = '3PS_OPTIN' ;

/* MCS THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_MCS VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_MCS = '3PS_OPTIN' ;
UPDATE geo_temp_email SET ThirdpartyOptIn_MCS = '3PS_OPTOUT' WHERE mcs_partner_accept = 0 ;

/* TAS THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_TAS VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_TAS = '3PS_OPTIN' ;

/* EUROGIN THIRD PART */
ALTER TABLE geo_temp_email ADD ThirdpartyOptIn_GYN VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdpartyOptIn_GYN = '3PS_OPTIN' ;
UPDATE geo_temp_email SET ThirdpartyOptIn_GYN = '3PS_OPTOUT' WHERE eurovir_partner_accept = 0 ;

/* SUPPRESSION CHAMPS INUTILES */
ALTER TABLE geo_temp_email DROP COLUMN cws_partner_accept ;
ALTER TABLE geo_temp_email DROP COLUMN vcs_partner_accept ;
ALTER TABLE geo_temp_email DROP COLUMN mcs_partner_accept ;
ALTER TABLE geo_temp_email DROP COLUMN eurovir_partner_accept ;

/*------- FIN CREATION DE CHAMPS EQUIVALENTS DES CONSENTEMENTS 3RD PARTY POUR LE BAU TEMPLATE GROUPE INFORMA -------*/


/*------- CREATION DE CHAMPS EQUIVALENTS DES PREFERENCES POUR LE BAU TEMPLATE GROUPE INFORMA -------*/

/* EVENEMENT AMWC */
ALTER TABLE geo_temp_email ADD EmailPreference_AMWC VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_AMWC = 'Yes' ;

ALTER TABLE geo_temp_email ADD PhonePreference_AMWC VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_AMWC = 'Yes' ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_AMWC VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_AMWC = 'Yes' ;

ALTER TABLE geo_temp_email ADD SmsPreference_AMWC VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_AMWC = 'Yes' ;

/* EVENEMENT AMWC VIRTUAL */
ALTER TABLE geo_temp_email ADD EmailPreference_AMWC_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_AMWC_VIRTUAL = 'Yes' ;

ALTER TABLE geo_temp_email ADD PhonePreference_AMWC_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_AMWC_VIRTUAL = 'Yes' ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_AMWC_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_AMWC_VIRTUAL = 'Yes' ;

ALTER TABLE geo_temp_email ADD SmsPreference_AMWC_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_AMWC_VIRTUAL = 'Yes' ;

/* EVENEMENT AMWC ASIA */
ALTER TABLE geo_temp_email ADD EmailPreference_AMWC_ASIA VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_AMWC_ASIA = 'Yes' ;

ALTER TABLE geo_temp_email ADD PhonePreference_AMWC_ASIA VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_AMWC_ASIA = 'Yes' ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_AMWC_ASIA VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_AMWC_ASIA = 'Yes' ;

ALTER TABLE geo_temp_email ADD SmsPreference_AMWC_ASIA VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_AMWC_ASIA = 'Yes' ;

/* EVENEMENT AMWC CHINA */
ALTER TABLE geo_temp_email ADD EmailPreference_AMWC_CHINA VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_AMWC_CHINA = 'Yes' ;

ALTER TABLE geo_temp_email ADD PhonePreference_AMWC_CHINA VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_AMWC_CHINA = 'Yes' ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_AMWC_CHINA VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_AMWC_CHINA = 'Yes' ;

ALTER TABLE geo_temp_email ADD SmsPreference_AMWC_CHINA VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_AMWC_CHINA = 'Yes' ;

/* EVENEMENT AMS */
ALTER TABLE geo_temp_email ADD EmailPreference_AMS VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_AMS = 'Yes' ;

ALTER TABLE geo_temp_email ADD PhonePreference_AMS VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_AMS = 'Yes' ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_AMS VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_AMS = 'Yes' ;

ALTER TABLE geo_temp_email ADD SmsPreference_AMS VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_AMS = 'Yes' ;

/* EVENEMENT FACE */
ALTER TABLE geo_temp_email ADD EmailPreference_FACE VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_FACE = 'Yes' ;

ALTER TABLE geo_temp_email ADD PhonePreference_FACE VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_FACE = 'Yes' ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_FACE VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_FACE = 'Yes' ;

ALTER TABLE geo_temp_email ADD SmsPreference_FACE VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_FACE = 'Yes' ;

/* EVENEMENT FACE ASEAN */
ALTER TABLE geo_temp_email ADD EmailPreference_FACE_ASEAN VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_FACE_ASEAN = 'Yes' ;

ALTER TABLE geo_temp_email ADD PhonePreference_FACE_ASEAN VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_FACE_ASEAN = 'Yes' ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_FACE_ASEAN VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_FACE_ASEAN = 'Yes' ;

ALTER TABLE geo_temp_email ADD SmsPreference_FACE_ASEAN VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_FACE_ASEAN = 'Yes' ;

/* EVENEMENT ICAD BKK */
ALTER TABLE geo_temp_email ADD EmailPreference_ICAD_BKK VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_ICAD_BKK = 'Yes' ;

ALTER TABLE geo_temp_email ADD PhonePreference_ICAD_BKK VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_ICAD_BKK = 'Yes' ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_ICAD_BKK VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_ICAD_BKK = 'Yes' ;

ALTER TABLE geo_temp_email ADD SmsPreference_ICAD_BKK VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_ICAD_BKK = 'Yes' ;

/* EVENEMENT VCS */
ALTER TABLE geo_temp_email ADD EmailPreference_VCS VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_VCS = 'Yes' ;
UPDATE geo_temp_email SET EmailPreference_VCS = 'No' WHERE pref_email_vcs = 0 ;

ALTER TABLE geo_temp_email ADD PhonePreference_VCS VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_VCS = 'Yes' ;
UPDATE geo_temp_email SET PhonePreference_VCS = 'No' WHERE pref_phone_vcs = 0 ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_VCS VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_VCS = 'Yes' ;
UPDATE geo_temp_email SET DirectPostPreference_VCS = 'No' WHERE pref_post_vcs = 0 ;

ALTER TABLE geo_temp_email ADD SmsPreference_VCS VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_VCS = 'Yes' ;
UPDATE geo_temp_email SET SmsPreference_VCS = 'No' WHERE pref_sms_vcs = 0 ;

/* EVENEMENT VCS VIRTUAL */
ALTER TABLE geo_temp_email ADD EmailPreference_VCS_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_VCS_VIRTUAL = 'Yes' ;

ALTER TABLE geo_temp_email ADD PhonePreference_VCS_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_VCS_VIRTUAL = 'Yes' ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_VCS_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_VCS_VIRTUAL = 'Yes' ;

ALTER TABLE geo_temp_email ADD SmsPreference_VCS_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_VCS_VIRTUAL = 'Yes' ;

/* EVENEMENT MCS */
ALTER TABLE geo_temp_email ADD EmailPreference_MCS VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_MCS = 'Yes' ;
UPDATE geo_temp_email SET EmailPreference_MCS = 'No' WHERE pref_email_mcs = 0 ;

ALTER TABLE geo_temp_email ADD PhonePreference_MCS VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_MCS = 'Yes' ;
UPDATE geo_temp_email SET PhonePreference_MCS = 'No' WHERE pref_phone_mcs = 0 ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_MCS VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_MCS = 'Yes' ;
UPDATE geo_temp_email SET DirectPostPreference_MCS = 'No' WHERE pref_post_mcs = 0 ;

ALTER TABLE geo_temp_email ADD SmsPreference_MCS VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_MCS = 'Yes' ;
UPDATE geo_temp_email SET SmsPreference_MCS = 'No' WHERE pref_sms_mcs = 0 ;

/* EVENEMENT TAS */
ALTER TABLE geo_temp_email ADD EmailPreference_TAS VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_TAS = 'Yes' ;

ALTER TABLE geo_temp_email ADD PhonePreference_TAS VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_TAS = 'Yes' ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_TAS VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_TAS = 'Yes' ;

ALTER TABLE geo_temp_email ADD SmsPreference_TAS VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_TAS = 'Yes' ;

/* EVENEMENT EUROGIN */
ALTER TABLE geo_temp_email ADD EmailPreference_GYN VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_GYN = 'Yes' ;
UPDATE geo_temp_email SET EmailPreference_GYN = 'No' WHERE pref_email_eurovir = 0 ;

ALTER TABLE geo_temp_email ADD PhonePreference_GYN VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_GYN = 'Yes' ;
UPDATE geo_temp_email SET PhonePreference_GYN = 'No' WHERE pref_phone_eurovir = 0 ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_GYN VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_GYN = 'Yes' ;
UPDATE geo_temp_email SET DirectPostPreference_GYN = 'No' WHERE pref_post_eurovir = 0 ;

ALTER TABLE geo_temp_email ADD SmsPreference_GYN VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_GYN = 'Yes' ;
UPDATE geo_temp_email SET SmsPreference_GYN = 'No' WHERE pref_sms_eurovir = 0 ;

/* EVENEMENT CWS */
ALTER TABLE geo_temp_email ADD EmailPreference_CWS VARCHAR(15) ;
UPDATE geo_temp_email SET EmailPreference_CWS = 'Yes' ;
UPDATE geo_temp_email SET EmailPreference_CWS = 'No' WHERE pref_email_inf_mon_sam = 0 ;

ALTER TABLE geo_temp_email ADD PhonePreference_CWS VARCHAR(15) ;
UPDATE geo_temp_email SET PhonePreference_CWS = 'Yes' ;
UPDATE geo_temp_email SET PhonePreference_CWS = 'No' WHERE pref_phone_inf_mon_sam = 0 ;

ALTER TABLE geo_temp_email ADD DirectPostPreference_CWS VARCHAR(15) ;
UPDATE geo_temp_email SET DirectPostPreference_CWS = 'Yes' ;
UPDATE geo_temp_email SET DirectPostPreference_CWS = 'No' WHERE pref_post_inf_mon_sam = 0 ;

ALTER TABLE geo_temp_email ADD SmsPreference_CWS VARCHAR(15) ;
UPDATE geo_temp_email SET SmsPreference_CWS = 'Yes' ;
UPDATE geo_temp_email SET SmsPreference_CWS = 'No' WHERE pref_sms_inf_mon_sam = 0 ;

/*------- FIN CREATION DE CHAMPS EQUIVALENTS DES PREFERENCES POUR LE BAU TEMPLATE GROUPE INFORMA -------*/


/*------- CREATION DE CHAMPS EQUIVALENTS DES TYPES DE PREFERENCE (implicite/explicite) POUR LE BAU TEMPLATE GROUPE INFORMA -------*/

/* EVENEMENT AMWC */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_AMWC VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_AMWC = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_AMWC = 'Explicit' WHERE MarketingOptIn_AMWC LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_AMWC VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_AMWC = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_AMWC = 'Explicit' WHERE ThirdpartyOptIn_AMWC LIKE 'CR_OPTOUT' ;

/* EVENEMENT AMWC VIRTUAL */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_AMWC_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_AMWC_VIRTUAL = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_AMWC_VIRTUAL = 'Explicit' WHERE MarketingOptIn_AMWC_VIRTUAL LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_AMWC_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_AMWC_VIRTUAL = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_AMWC_VIRTUAL = 'Explicit' WHERE ThirdpartyOptIn_AMWC_VIRTUAL LIKE 'CR_OPTOUT' ;

/* EVENEMENT AMWC ASIA */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_AMWC_ASIA VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_AMWC_ASIA = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_AMWC_ASIA = 'Explicit' WHERE MarketingOptIn_AMWC_ASIA LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_AMWC_ASIA VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_AMWC_ASIA = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_AMWC_ASIA = 'Explicit' WHERE ThirdpartyOptIn_AMWC_ASIA LIKE 'CR_OPTOUT' ;

/* EVENEMENT AMWC CHINA */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_AMWC_CHINA VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_AMWC_CHINA = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_AMWC_CHINA = 'Explicit' WHERE MarketingOptIn_AMWC_CHINA LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_AMWC_CHINA VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_AMWC_CHINA = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_AMWC_CHINA = 'Explicit' WHERE ThirdpartyOptIn_AMWC_CHINA LIKE 'CR_OPTOUT' ;

/* EVENEMENT AMS */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_AMS VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_AMS = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_AMS = 'Explicit' WHERE MarketingOptIn_AMS LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_AMS VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_AMS = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_AMS = 'Explicit' WHERE ThirdpartyOptIn_AMS LIKE 'CR_OPTOUT' ;

/* EVENEMENT FACE */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_FACE VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_FACE = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_FACE = 'Explicit' WHERE MarketingOptIn_FACE LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_FACE VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_FACE = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_FACE = 'Explicit' WHERE ThirdpartyOptIn_FACE LIKE 'CR_OPTOUT' ;

/* EVENEMENT FACE ASEAN */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_FACE_ASEAN VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_FACE_ASEAN = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_FACE_ASEAN = 'Explicit' WHERE MarketingOptIn_FACE_ASEAN LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_FACE_ASEAN VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_FACE_ASEAN = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_FACE_ASEAN = 'Explicit' WHERE ThirdpartyOptIn_FACE_ASEAN LIKE 'CR_OPTOUT' ;

/* EVENEMENT ICAD BKK */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_ICAD_BKK VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_ICAD_BKK = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_ICAD_BKK = 'Explicit' WHERE MarketingOptIn_ICAD_BKK LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_ICAD_BKK VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_ICAD_BKK = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_ICAD_BKK = 'Explicit' WHERE ThirdpartyOptIn_ICAD_BKK LIKE 'CR_OPTOUT' ;

/* EVENEMENT VCS */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_VCS VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_VCS = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_VCS = 'Explicit' WHERE MarketingOptIn_VCS LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_VCS VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_VCS = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_VCS = 'Explicit' WHERE ThirdpartyOptIn_VCS LIKE 'CR_OPTOUT' ;

/* EVENEMENT VCS VIRTUAL */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_VCS_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_VCS_VIRTUAL = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_VCS_VIRTUAL = 'Explicit' WHERE MarketingOptIn_VCS_VIRTUAL LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_VCS_VIRTUAL VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_VCS_VIRTUAL = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_VCS_VIRTUAL = 'Explicit' WHERE ThirdpartyOptIn_VCS_VIRTUAL LIKE 'CR_OPTOUT' ;

/* EVENEMENT MCS */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_MCS VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_MCS = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_MCS = 'Explicit' WHERE MarketingOptIn_MCS LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_MCS VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_MCS = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_MCS = 'Explicit' WHERE ThirdpartyOptIn_MCS LIKE 'CR_OPTOUT' ;

/* EVENEMENT TAS */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_TAS VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_TAS = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_TAS = 'Explicit' WHERE MarketingOptIn_TAS LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_TAS VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_TAS = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_TAS = 'Explicit' WHERE ThirdpartyOptIn_TAS LIKE 'CR_OPTOUT' ;

/* EVENEMENT GYN */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_GYN VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_GYN = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_GYN = 'Explicit' WHERE MarketingOptIn_GYN LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_GYN VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_GYN = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_GYN = 'Explicit' WHERE ThirdpartyOptIn_GYN LIKE 'CR_OPTOUT' ;

/* EVENEMENT CWS */
ALTER TABLE geo_temp_email ADD MarketingOptInPrefType_CWS VARCHAR(15) ;
UPDATE geo_temp_email SET MarketingOptInPrefType_CWS = 'Implicit' ;
UPDATE geo_temp_email SET MarketingOptInPrefType_CWS = 'Explicit' WHERE MarketingOptIn_CWS LIKE 'CR_OPTOUT' ;

ALTER TABLE geo_temp_email ADD ThirdPartyOptInPrefType_CWS VARCHAR(15) ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_CWS = 'Implicit' ;
UPDATE geo_temp_email SET ThirdPartyOptInPrefType_CWS = 'Explicit' WHERE ThirdpartyOptIn_CWS LIKE 'CR_OPTOUT' ;

/*------- FIN CREATION DE CHAMPS EQUIVALENTS DES TYPES DE PREFERENCE (implicite/explicite) POUR LE BAU TEMPLATE GROUPE INFORMA -------*/



/*------- CREATION DE CHAMPS RegistrationStatus, AttendanceStatus et VisitorType POUR LE BAU TEMPLATE -------*/


/* AMWC 2021 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_amwc21 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_amwc21 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%AMWC 2021%' ;
UPDATE geo_temp_email SET RegistrationStatus_amwc21 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%AMWC 2021%' ;

ALTER TABLE geo_temp_email ADD VisitorType_amwc21 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_G' WHERE last_manifs LIKE '%AMWC 2021 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_G' WHERE last_manifs LIKE '%AMWC 2021 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_G' WHERE last_manifs LIKE '%AMWC 2021 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_V' WHERE last_manifs LIKE '%AMWC 2021 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_D' WHERE last_manifs LIKE '%AMWC 2021 ()%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_D' WHERE last_manifs LIKE '%AMWC 2021 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_SS' WHERE last_manifs LIKE '%AMWC 2021 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_E' WHERE last_manifs LIKE '%AMWC 2021 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_SPK' WHERE last_manifs LIKE '%AMWC 2021 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_ES' WHERE last_manifs LIKE '%AMWC 2021 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_MP' WHERE last_manifs LIKE '%AMWC 2021 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_DP' WHERE VisitorType_amwc21 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_amwc21 = 'ER_SP' WHERE VisitorType_amwc21 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_amwc21 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_amwc21 = 'AS_NOSHW' ;


/* AMWC CHINA 2021 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_amwc_china21 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_amwc_china21 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%AMWC CHINA 2021%' ;
UPDATE geo_temp_email SET RegistrationStatus_amwc_china21 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%AMWC CHINA 2021%' ;

ALTER TABLE geo_temp_email ADD VisitorType_amwc_china21 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_G' WHERE last_manifs LIKE '%AMWC CHINA 2021 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_G' WHERE last_manifs LIKE '%AMWC CHINA 2021 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_G' WHERE last_manifs LIKE '%AMWC CHINA 2021 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_V' WHERE last_manifs LIKE '%AMWC CHINA 2021 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_D' WHERE last_manifs LIKE '%AMWC CHINA 2021 ()%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_D' WHERE last_manifs LIKE '%AMWC CHINA 2021 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_SS' WHERE last_manifs LIKE '%AMWC CHINA 2021 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_E' WHERE last_manifs LIKE '%AMWC CHINA 2021 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_SPK' WHERE last_manifs LIKE '%AMWC CHINA 2021 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_ES' WHERE last_manifs LIKE '%AMWC CHINA 2021 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_MP' WHERE last_manifs LIKE '%AMWC CHINA 2021 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_DP' WHERE VisitorType_amwc_china21 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_amwc_china21 = 'ER_SP' WHERE VisitorType_amwc_china21 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_amwc_china21 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_amwc_china21 = 'AS_NOSHW' ;


/* VCS 2021 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_vcs21 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_vcs21 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%VCS 2021%' ;
UPDATE geo_temp_email SET RegistrationStatus_vcs21 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%VCS 2021%' ;

ALTER TABLE geo_temp_email ADD VisitorType_vcs21 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_G' WHERE last_manifs LIKE '%VCS 2021 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_G' WHERE last_manifs LIKE '%VCS 2021 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_G' WHERE last_manifs LIKE '%VCS 2021 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_V' WHERE last_manifs LIKE '%VCS 2021 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_D' WHERE last_manifs LIKE '%VCS 2021 ()%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_D' WHERE last_manifs LIKE '%VCS 2021 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_SS' WHERE last_manifs LIKE '%VCS 2021 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_E' WHERE last_manifs LIKE '%VCS 2021 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_SPK' WHERE last_manifs LIKE '%VCS 2021 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_ES' WHERE last_manifs LIKE '%VCS 2021 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_MP' WHERE last_manifs LIKE '%VCS 2021 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_DP' WHERE VisitorType_vcs21 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_vcs21 = 'ER_SP' WHERE VisitorType_vcs21 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_vcs21 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_vcs21 = 'AS_NOSHW' ;


/* VCS VIRTUAL 2020 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_vcs_virtual20 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_vcs_virtual20 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%VCS VIRTUAL 2020%' ;
UPDATE geo_temp_email SET RegistrationStatus_vcs_virtual20 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%VCS VIRTUAL 2020%' ;

ALTER TABLE geo_temp_email ADD VisitorType_vcs_virtual20 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_G' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_G' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_G' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_V' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_D' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 ()%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_D' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_SS' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_E' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_SPK' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_ES' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_MP' WHERE last_manifs LIKE '%VCS VIRTUAL 2020 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_DP' WHERE VisitorType_vcs_virtual20 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_vcs_virtual20 = 'ER_SP' WHERE VisitorType_vcs_virtual20 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_vcs_virtual20 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_vcs_virtual20 = 'AS_NOSHW' ;


/* TAS 2021 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_tas21 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_tas21 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%TAS 2021%' ;
UPDATE geo_temp_email SET RegistrationStatus_tas21 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%TAS 2021%' ;

ALTER TABLE geo_temp_email ADD VisitorType_tas21 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_G' WHERE last_manifs LIKE '%TAS 2021 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_G' WHERE last_manifs LIKE '%TAS 2021 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_G' WHERE last_manifs LIKE '%TAS 2021 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_V' WHERE last_manifs LIKE '%TAS 2021 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_D' WHERE last_manifs LIKE '%TAS 2021 ()%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_D' WHERE last_manifs LIKE '%TAS 2021 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_SS' WHERE last_manifs LIKE '%TAS 2021 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_E' WHERE last_manifs LIKE '%TAS 2021 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_SPK' WHERE last_manifs LIKE '%TAS 2021 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_ES' WHERE last_manifs LIKE '%TAS 2021 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_MP' WHERE last_manifs LIKE '%TAS 2021 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_DP' WHERE VisitorType_tas21 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_tas21 = 'ER_SP' WHERE VisitorType_tas21 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_tas21 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_tas21 = 'AS_NOSHW' ;


/* FACE 2021 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_face21 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_face21 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%FACE 2021%' ;
UPDATE geo_temp_email SET RegistrationStatus_face21 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%FACE 2021%' ;

ALTER TABLE geo_temp_email ADD VisitorType_face21 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_G' WHERE last_manifs LIKE '%FACE 2021 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_G' WHERE last_manifs LIKE '%FACE 2021 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_G' WHERE last_manifs LIKE '%FACE 2021 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_V' WHERE last_manifs LIKE '%FACE 2021 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_D' WHERE last_manifs LIKE '%FACE 2021 ()%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_D' WHERE last_manifs LIKE '%FACE 2021 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_SS' WHERE last_manifs LIKE '%FACE 2021 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_E' WHERE last_manifs LIKE '%FACE 2021 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_SPK' WHERE last_manifs LIKE '%FACE 2021 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_ES' WHERE last_manifs LIKE '%FACE 2021 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_MP' WHERE last_manifs LIKE '%FACE 2021 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_DP' WHERE VisitorType_face21 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_face21 = 'ER_SP' WHERE VisitorType_face21 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_face21 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_face21 = 'AS_NOSHW' ;


/* FACE ASEAN 2021 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_face_asean_21 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_face_asean_21 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%FACE ASEAN 2021%' ;
UPDATE geo_temp_email SET RegistrationStatus_face_asean_21 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%FACE ASEAN 2021%' ;

ALTER TABLE geo_temp_email ADD VisitorType_face_asean_21 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_G' WHERE last_manifs LIKE '%FACE ASEAN 2021 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_G' WHERE last_manifs LIKE '%FACE ASEAN 2021 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_G' WHERE last_manifs LIKE '%FACE ASEAN 2021 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_V' WHERE last_manifs LIKE '%FACE ASEAN 2021 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_D' WHERE last_manifs LIKE '%FACE ASEAN 2021 ()%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_D' WHERE last_manifs LIKE '%FACE ASEAN 2021 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_SS' WHERE last_manifs LIKE '%FACE ASEAN 2021 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_E' WHERE last_manifs LIKE '%FACE ASEAN 2021 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_SPK' WHERE last_manifs LIKE '%FACE ASEAN 2021 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_ES' WHERE last_manifs LIKE '%FACE ASEAN 2021 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_MP' WHERE last_manifs LIKE '%FACE ASEAN 2021 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_DP' WHERE VisitorType_face_asean_21 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_face_asean_21 = 'ER_SP' WHERE VisitorType_face_asean_21 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_face_asean_21 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_face_asean_21 = 'AS_NOSHW' ;



/* EUROGIN 2021 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_eurogin21 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_eurogin21 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%EUROGIN 2021%' ;
UPDATE geo_temp_email SET RegistrationStatus_eurogin21 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%EUROGIN 2021%' ;

ALTER TABLE geo_temp_email ADD VisitorType_eurogin21 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_G' WHERE last_manifs LIKE '%EUROGIN 2021 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_G' WHERE last_manifs LIKE '%EUROGIN 2021 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_G' WHERE last_manifs LIKE '%EUROGIN 2021 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_V' WHERE last_manifs LIKE '%EUROGIN 2021 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_D' WHERE last_manifs LIKE '%EUROGIN 2021 ()%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_D' WHERE last_manifs LIKE '%EUROGIN 2021 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_SS' WHERE last_manifs LIKE '%EUROGIN 2021 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_E' WHERE last_manifs LIKE '%EUROGIN 2021 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_SPK' WHERE last_manifs LIKE '%EUROGIN 2021 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_ES' WHERE last_manifs LIKE '%EUROGIN 2021 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_MP' WHERE last_manifs LIKE '%EUROGIN 2021 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_DP' WHERE VisitorType_eurogin21 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_eurogin21 = 'ER_SP' WHERE VisitorType_eurogin21 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_eurogin21 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_eurogin21 = 'AS_NOSHW' ;


/* ICAD BANGKOK 2021 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_icadbangkok21 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_icadbangkok21 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%ICAD 2021%' ;
UPDATE geo_temp_email SET RegistrationStatus_icadbangkok21 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%ICAD 2021%' ;

ALTER TABLE geo_temp_email ADD VisitorType_icadbangkok21 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_G' WHERE last_manifs LIKE '%ICAD 2021 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_G' WHERE last_manifs LIKE '%ICAD 2021 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_G' WHERE last_manifs LIKE '%ICAD 2021 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_V' WHERE last_manifs LIKE '%ICAD 2021 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_D' WHERE last_manifs LIKE '%ICAD 2021 ()%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_D' WHERE last_manifs LIKE '%ICAD 2021 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_SS' WHERE last_manifs LIKE '%ICAD 2021 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_E' WHERE last_manifs LIKE '%ICAD 2021 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_SPK' WHERE last_manifs LIKE '%ICAD 2021 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_ES' WHERE last_manifs LIKE '%ICAD 2021 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_MP' WHERE last_manifs LIKE '%ICAD 2021 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_DP' WHERE VisitorType_icadbangkok21 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok21 = 'ER_SP' WHERE VisitorType_icadbangkok21 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_icadbangkok21 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_icadbangkok21 = 'AS_NOSHW' ;


/* ICAD BANGKOK 2022 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_icadbangkok22 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_icadbangkok22 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%ICAD 2022%' ;
UPDATE geo_temp_email SET RegistrationStatus_icadbangkok22 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%ICAD 2022%' ;

ALTER TABLE geo_temp_email ADD VisitorType_icadbangkok22 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_G' WHERE last_manifs LIKE '%ICAD 2022 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_G' WHERE last_manifs LIKE '%ICAD 2022 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_G' WHERE last_manifs LIKE '%ICAD 2022 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_V' WHERE last_manifs LIKE '%ICAD 2022 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_D' WHERE last_manifs LIKE '%ICAD 2022 ()%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_D' WHERE last_manifs LIKE '%ICAD 2022 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_SS' WHERE last_manifs LIKE '%ICAD 2022 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_E' WHERE last_manifs LIKE '%ICAD 2022 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_SPK' WHERE last_manifs LIKE '%ICAD 2022 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_ES' WHERE last_manifs LIKE '%ICAD 2022 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_MP' WHERE last_manifs LIKE '%ICAD 2022 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_DP' WHERE VisitorType_icadbangkok22 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_icadbangkok22 = 'ER_SP' WHERE VisitorType_icadbangkok22 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_icadbangkok22 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_icadbangkok22 = 'AS_NOSHW' ;


/* MCS 2021 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_mcs21 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_mcs21 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%MCS 2021%' ;
UPDATE geo_temp_email SET RegistrationStatus_mcs21 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%MCS 2021%' ;

ALTER TABLE geo_temp_email ADD VisitorType_mcs21 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_G' WHERE last_manifs LIKE '%MCS 2021 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_G' WHERE last_manifs LIKE '%MCS 2021 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_G' WHERE last_manifs LIKE '%MCS 2021 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_V' WHERE last_manifs LIKE '%MCS 2021 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_D' WHERE last_manifs LIKE '%MCS 2021 ()%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_D' WHERE last_manifs LIKE '%MCS 2021 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_SS' WHERE last_manifs LIKE '%MCS 2021 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_E' WHERE last_manifs LIKE '%MCS 2021 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_SPK' WHERE last_manifs LIKE '%MCS 2021 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_ES' WHERE last_manifs LIKE '%MCS 2021 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_MP' WHERE last_manifs LIKE '%MCS 2021 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_DP' WHERE VisitorType_mcs21 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_mcs21 = 'ER_SP' WHERE VisitorType_mcs21 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_mcs21 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_mcs21 = 'AS_NOSHW' ;


/* AMWC ASIA 2021 */
ALTER TABLE geo_temp_email ADD RegistrationStatus_amwc_asia21 VARCHAR(15) ;
UPDATE geo_temp_email SET RegistrationStatus_amwc_asia21 = 'RS_PRERGSTR' WHERE last_manifs LIKE '%AMWC ASIA 2021%' ;
UPDATE geo_temp_email SET RegistrationStatus_amwc_asia21 = 'RS_NOTRGSTR' WHERE last_manifs NOT LIKE '%AMWC ASIA 2021%' ;

ALTER TABLE geo_temp_email ADD VisitorType_amwc_asia21 VARCHAR(15) ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_G' WHERE last_manifs LIKE '%AMWC ASIA 2021 (SPEAKER GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_G' WHERE last_manifs LIKE '%AMWC ASIA 2021 (DELEGATE GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_G' WHERE last_manifs LIKE '%AMWC ASIA 2021 (EXHIBITOR GUEST)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_V' WHERE last_manifs LIKE '%AMWC ASIA 2021 (VISITOR)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_D' WHERE last_manifs LIKE '%AMWC ASIA 2021 ()%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_D' WHERE last_manifs LIKE '%AMWC ASIA 2021 (DELEGATE)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_SS' WHERE last_manifs LIKE '%AMWC ASIA 2021 (STAFF)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_E' WHERE last_manifs LIKE '%AMWC ASIA 2021 (EXHIBITOR)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_SPK' WHERE last_manifs LIKE '%AMWC ASIA 2021 (SPEAKER)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_ES' WHERE last_manifs LIKE '%AMWC ASIA 2021 (INFORMA)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_MP' WHERE last_manifs LIKE '%AMWC ASIA 2021 (PRESS)%' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_DP' WHERE VisitorType_amwc_asia21 IS null AND type NOT LIKE 'EXHIBITOR' ;
UPDATE geo_temp_email SET VisitorType_amwc_asia21 = 'ER_SP' WHERE VisitorType_amwc_asia21 IS null AND type LIKE 'EXHIBITOR' ;

ALTER TABLE geo_temp_email ADD AttendanceStatus_amwc_asia21 VARCHAR(15) ;
UPDATE geo_temp_email SET AttendanceStatus_amwc_asia21 = 'AS_NOSHW' ;

/*------- FIN CREATION DE CHAMPS RegistrationStatus par event POUR LE BAU TEMPLATE GROUPE INFORMA -------*/

/*-------  CREATION CHAMP SourceSystem POUR LE BAU TEMPLATE GROUPE INFORMA -------*/
ALTER TABLE geo_temp_email ADD SourceSystem VARCHAR(15) ;
UPDATE geo_temp_email SET SourceSystem = 'SS_EMCSOFT' ;


/*-------------------------- SUPPRESSION TABLES --------------------------------*/
DROP TABLE if exists temp_last_commande_manifestation_email ; DROP TABLE if exists temp_last_concat_manifs_email ; 


/******************************* FIN EXTRACTION EMAIL **************************************/

/**************************************************************************************/


/* ----------- RE-HARMONISATION INVERSE DU CHAMP destination DE geo_temp_union POUR EVENTUEL IMPORT DANS geo_extern OU prospects ----------- */
UPDATE geo_temp_union SET destination = '644' WHERE destination = 'Kate' ;
UPDATE geo_temp_union SET destination = '669' WHERE destination = 'Ella' ;
UPDATE geo_temp_union SET destination = '702' WHERE destination = 'Jessica A' ;
UPDATE geo_temp_union SET destination = '700' WHERE destination = 'Jessica' ;
UPDATE geo_temp_union SET destination = '705' WHERE destination = 'Probationer' ;
UPDATE geo_temp_union SET destination = '696' WHERE destination = 'Natacha' ;
UPDATE geo_temp_union SET destination = '682' WHERE destination = 'Awatef' ;
UPDATE geo_temp_union SET destination = '683' WHERE destination = 'Mathilde' ;
UPDATE geo_temp_union SET destination = '684' WHERE destination = 'Katia' ;
UPDATE geo_temp_union SET destination = '703' WHERE destination = 'Maddy' ;
UPDATE geo_temp_union SET destination = '708' WHERE destination = 'Emilie' ;

UPDATE geo_temp_union SET destination = '694' WHERE destination = 'Simon' ;
UPDATE geo_temp_union SET destination = '691' WHERE destination = 'Ryan' ;
UPDATE geo_temp_union SET destination = '649' WHERE destination = 'La' ;
UPDATE geo_temp_union SET destination = '690' WHERE destination = 'Mathieu' ;
UPDATE geo_temp_union SET destination = '656' WHERE destination = 'Slim' ;
UPDATE geo_temp_union SET destination = '647' WHERE destination = 'Slim' ;
UPDATE geo_temp_union SET destination = '678' WHERE destination = 'Georges' ;

UPDATE geo_temp_union SET destination = '604' WHERE destination = 'Pending' ;
UPDATE geo_temp_union SET destination = '' WHERE destination = 'Pending' ;

/* --------------------------------- FIN HARMONISATION DU CHAMP destination --------------------------------- */


/* HARMONISATION PREPARATION DE geo_temp_union POUR EVENTUEL IMPORT DANS extern_db OU prospects */

/*  CHAMP zipcode  */
UPDATE geo_temp_union SET zipcode = "" WHERE zipcode = "SUPPRIMER DES ROUTAGES POSTAUX" ;

/*  CHAMP source  */
UPDATE geo_temp_union SET source = REPLACE(source, "PROSPECT: ", "") ;
UPDATE geo_temp_union SET source = REPLACE(source, "EXTERN: ", "") ;

/*  CHAMP date_import  */
ALTER TABLE geo_temp_union ADD date_import DATE ;
UPDATE geo_temp_union SET date_import = NOW() ;
ALTER TABLE geo_temp_union MODIFY COLUMN date_import DATE AFTER id_original ;

/*  CHAMP firstname quand vide  */
UPDATE geo_temp_union set firstname = "Contact" where firstname like "" and lastname like "" ;


/* --------------------------------- FIN HARMONISATION --------------------------------- */



/* CLEANING WRONG concat_name REMAINING */
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Doctor Doctorlast' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Dr' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Dr.' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Docteur' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Dra' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Dra.' ;

UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE '%Marketing Manager%' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE '%Sales Manager%' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE '%Les Parfums%' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Clinical %' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Info' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Tbc' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Prime Reader' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Achats Responsable' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Mr Sales Team' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Ae' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Sales Department' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Sales Team' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A A E' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'The Spa' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Spa' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Am' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'Or' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'E A C Y' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A A' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE '%A A A%' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE '%A A C%' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A A E Z' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A A Y' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A Ae C' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A Ae' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A Ae E' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A Ae Y A Zae' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A Ae Zc Y' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A Ay A' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A Ay A I E Ye A' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A B C' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A B C Distribution' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A B Cosmetic' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A C' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A C A' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A C A Y' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A C Ae' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A C C' ;
UPDATE geo_temp_email SET concat_name = '' WHERE concat_name LIKE 'A C Ce' ;

UPDATE geo_temp_email SET concat_name = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(concat_name, '+', ''), '0', ''), '1', ''), '2', ''), '3', ''), '4', ''), '5', ''), '6', ''), '7', ''), '8', ''), '9', '') ;

UPDATE geo_temp_email SET concat_name = SUBSTR(concat_name, 2 ) WHERE concat_name LIKE '.%' ;


/* TEST WITH A TEMPORARY NEW FIELD CALLED new_name */
ALTER TABLE geo_temp_email ADD new_name VARCHAR(255) NOT NULL ;

UPDATE geo_temp_email SET new_name = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
SUBSTRING(email, 1, (SELECT LOCATE('@', email))),'@',''),'.',' '),'_',' '),'0',''),'1',''),'2',''),'3',''),'4',''),'5',''),'6',''),'7',''),'8',''),'9','')
WHERE (
concat_name LIKE 'Doctor' OR concat_name LIKE 'Dr' OR concat_name LIKE 'Dr.' OR concat_name LIKE 'Dra' 
OR concat_name LIKE 'Mr' OR concat_name LIKE 'M' OR concat_name LIKE 'Mrs' OR concat_name LIKE 'Ms' OR concat_name LIKE 'Mr.'  OR concat_name LIKE 'M.' OR concat_name LIKE 'Mrs.' OR concat_name LIKE 'Ms.'
OR concat_name LIKE 'Mister' OR concat_name LIKE 'Miss'
OR concat_name LIKE 'Pr' OR concat_name LIKE 'Prof' OR concat_name LIKE 'Pr.' OR concat_name LIKE 'Prof.'
OR concat_name LIKE 'Monsieur' OR concat_name LIKE 'Madame' OR concat_name LIKE 'Mademoiselle'
OR concat_name LIKE 'Contact' OR concat_name LIKE '' OR concat_name LIKE null OR concat_name IS null
)

AND email LIKE '%.%@%'

AND email NOT LIKE 'info.%@%' AND email NOT LIKE 'infos.%@%'
AND email NOT LIKE 'sale.%@%' AND email NOT LIKE 'sales.%@%'
AND email NOT LIKE '%commercial%@%' AND email NOT LIKE '%comercial%@%'
AND email NOT LIKE '%swisscorr%@%' AND email NOT LIKE '%dermato%@%'
AND email NOT LIKE '%clinic%@%' AND email NOT LIKE '%clinique%@%'
AND email NOT LIKE '%medical%@%' AND email NOT LIKE '%antiaging%@%' AND email NOT LIKE '%anti-aging%@%' AND email NOT LIKE '%antiageing%@%' AND email NOT LIKE '%anti-ageing%@%'
AND email NOT LIKE '%aptos%@%' AND email NOT LIKE '%Dental%@%' AND email NOT LIKE '%Rmd%@%' AND email NOT LIKE '%aptos%@%'
AND email NOT LIKE '%France%@%' AND email NOT LIKE '%Italy%@%' AND email NOT LIKE '%Spain%@%' AND email NOT LIKE '%Germany%@%' AND email NOT LIKE '.usa%@%' AND email NOT LIKE '%usa.@%' 
AND email NOT LIKE '%Europe%@%' AND email NOT LIKE '.uk%@%' AND email NOT LIKE '%uk.@%' 

AND email NOT LIKE '%contact.%@%' AND email NOT LIKE '%kontakt.%@%' AND email NOT LIKE '%consultdr.%@%' AND email NOT LIKE '%consult.%@%' AND email NOT LIKE '%consultoriodr.%@%' AND email NOT LIKE '%consultorio.%@%'

AND email NOT REGEXP 'contact@|kontakt@|info@|infos@|hello@|bonjour@|help@|helpdesk@|aide@|user@|
firstname@|lastname@|firstlast@|firstinitiallastname@|register@|registry@|informacion@|general@|service@|client@|clients@|customer@|marketing@|recrutement@|rekrutierung@|recruitment@|
webmaster@|webteam@|postmaster@|news@|poststelle@|secretaria@|sekretaria@|direction@|direccion@|president@|praesident@|prezident@|reception@|recepcion@|admin@|
yourmail@|youremail@|emailaddress@|noemail@|no-email@|no_email@|yourdomain@|scanner@|processing@|press@|government@|gouvernement@|tourisme@|turism@|online@|
opportunity@|opportunities@|oportunidad@|occasion@|promotion@|promocion@|question@|bureau@|office@|support@|accueil@|dataprotection@|protection@|donation@|webredak@|web-redak@|
web_redak@|webredac@|web-redac@|web_redac@|portal@|portal@|portail@|emcportail@|informace@|project@|project@|apartmen@|intendente@|hotel.com@|
hotels@|infohub@|courses@|website@|doctolib@|doctissimo@|allodocteur@|exchange@|enquiries@|enquiries@|inquiry@|erasmus@|global@|
liberation.fr@|password@|adobe@|requests@|request@|someone@|someuser@|access@|governance@|innovation@|regulation@|
.med@|.dr@|.ms@|.pro@|.cosmetic@|.executive@|plastica@|plastic@|plastique@|.dermato@|.derma@|
recognition@|volunteering@|socialmedia@|translator@|market@|directiva@|revistaude@|web-translator@|webtranslator@|campaign@|economia@|
biblio@|repositorio@|firefox@|uBlock@|blocker@|archive@|comunicacion@|educacion@|vacancies@|vacance@|holiday@|webview@|congress@|Investor@|
registration@|policy@|accounting@|company@|advert@|entreprise@|abuse@|subscribconsultdre@|reservation@|reservierung@|reply@|erreur@|error@|disable@|
enable@|enable@|enablejs@|delete@|delete@|feedback@|account@|stylesheet@|exemple@|example@|test@|meeting@|membership@|member@|volunteer@|swisscor@|
notification@|notificacion@|managment@|managing@|licence@|license@|licensing@|legal.notice@|legal-notice@|legal_notice@|communication@|communicatie@|
socialmedia@|social-media@|socia_media@|legalnotice@|privacy@|copyright@|trademark@|datenschutz@|database@|databaze@|data-web@|data_web@|dataweb@|
bibliotheque@|library@|biblioteca@|academi@|akademi@|redaktion@|redaction@|edition@|editor@|editeur@|publisher@|travelagency@|travel@|travel@|booking@|
portugalglobal@|mozilla-community@|advocacy@|airbnb@|20minute@|youtube@|you-tube@|vimeo@|paypal@|dailymotion@|daily-motion@|google-play@|google.com@|
mailchimp@|facebook@|snapchat@|twitter@|linkedin@|instagram@|johndoe@|wordpress@|joomla@|drupal@|politico@|student|@etudiant@|favicon@' ;

/* GET concat_name CASE */
UPDATE geo_temp_email SET new_name = LOWER(new_name);

UPDATE geo_temp_email SET new_name = CONCAT(" ", new_name);

UPDATE geo_temp_email SET new_name = REPLACE(new_name, " a", " A");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " z", " Z");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " e", " E");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " r", " R");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " t", " T");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " y", " Y");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " u", " U");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " i", " I");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " o", " O");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " p", " P");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " q", " Q");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " s", " S");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " d", " D");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " f", " F");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " g", " G");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " h", " H");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " j", " J");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " k", " K");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " l", " L");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " m", " M");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " w", " W");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " x", " X");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " c", " C");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " v", " V");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " b", " B");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, " n", " N");
 
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-a", "-A");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-z", "-Z");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-e", "-E");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-r", "-R");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-t", "-T");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-y", "-Y");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-u", "-U");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-i", "-I");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-o", "-O");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-p", "-P");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-q", "-Q");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-s", "-S");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-d", "-D");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-f", "-F");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-g", "-G");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-h", "-H");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-j", "-J");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-k", "-K");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-l", "-L");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-m", "-M");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-w", "-W");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-x", "-X");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-c", "-C");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-v", "-V");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-b", "-B");
UPDATE geo_temp_email SET new_name = REPLACE(new_name, "-n", "-N");

UPDATE geo_temp_email SET new_name = REPLACE(new_name, "  ", " ");
UPDATE geo_temp_email SET new_name = SUBSTR(new_name, 2 );


/* TO TRANSFERT RESULTS IF YOU ARE SATISFIED - DROP FIELD new_name */

UPDATE geo_temp_email SET concat_name = new_name 
WHERE new_name NOT LIKE '' 
AND concat_name LIKE '' ;

ALTER TABLE geo_temp_email DROP COLUMN new_name ;


/* FIX REMAINING */

UPDATE geo_temp_email SET concat_name = 'Friend' WHERE concat_name LIKE '' ;

UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND email  LIKE 'dr_%' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND email  LIKE 'dr.%' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND email  LIKE 'dr-%' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND email  LIKE 'doctor%' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND email  LIKE 'docteur%' ;

UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Acupuncturist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Aesthetic & Anti-Aging Practitioner' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Aesthetic & Plastic Surgeon' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Aesthetic Practitioner' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Alternative Medicine' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Andrologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Anesthesist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Angiologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Anti-Aging Practitioner' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Cardiologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Cosmetologist MD' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Cytologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Dental Assistant' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Dental Clinic' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Dental Surgeon' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Dentist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Dermatologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Endocrinologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'ENT (Ear, Nose & Throat)' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Facial Plastic Surgeon' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'General Practitioner' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'General Surgeon' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Genetician' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Geriatrist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Gynecologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Gynecologist/Obstetrician' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Hematologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Homeopathic Physician' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Immunologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Implantologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Internal Medicine' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Maxillofacial Surgeon' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Mesotherapist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Neonatologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Nephrologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Neurologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Nutritionist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Obstetrician' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Oculoplastic Surgeon' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Odontologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Oncologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Ophthalmologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Orthodontist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Orthopedist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Pathologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Pediatrist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Pharmacologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Phlebologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Physiotherapist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Plastic & Reconstructive Surgeon' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Plastic Surgeon' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Proctologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Psychiatrist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Psychologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Psychotherapist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Radiologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Prothesist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Sports Medicine' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Stomatologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Urologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Vascular Surgeon' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Virologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Epidemiologist' ;
UPDATE geo_temp_email SET concat_name = 'Doctor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Surgeon' ;

UPDATE geo_temp_email SET concat_name = 'Profesor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Biologist/Biochemist' ;
UPDATE geo_temp_email SET concat_name = 'Profesor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Assistant Professor' ;
UPDATE geo_temp_email SET concat_name = 'Profesor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Biomedical Physician' ;
UPDATE geo_temp_email SET concat_name = 'Profesor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Laboratory Medicine' ;
UPDATE geo_temp_email SET concat_name = 'Profesor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Other Physician' ;
UPDATE geo_temp_email SET concat_name = 'Profesor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Physician Assistant' ;
UPDATE geo_temp_email SET concat_name = 'Profesor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Professor/Teacher' ;
UPDATE geo_temp_email SET concat_name = 'Profesor' WHERE concat_name LIKE 'Friend' AND speciality  LIKE 'Research Scientist' ;


/* --------------------------------- FIN REQUETE EXTRACTION --------------------------------- */

